[{"content":"Floyd\u0026rsquo;s tortoise and hare Figure 1: tortoise and hare\nhare and tortoise both starts from point Start, at speed of \\(2\\) and \\(1\\) respectively. They\u0026rsquo;ll meet at some point in the cycle.\nwhen they meet, hare traveled \\(S_2 - S_{1}\\) more points than tortoise. We have: (\\(\\lambda\\) is the cycle length)\n\\[\nS_{2} - S_{1} = 0 = S_{1} = x + m \\pmod{\\lambda}\n\\]\nafter they meet, one starts over from Start point, the other starts from Meet point, at speed of \\(1\\), they\u0026rsquo;ll meet again at Cycle Start point. because:\n\\[\nx = x + m + x \\pmod{\\lambda}\n\\]\n","description":"this is a description","id":0,"section":"posts","tags":["cycle-finding"],"title":"Cycle Finding Algorithms","uri":"https://k4i.top/posts/cycle-finding-algorithms/"},{"content":"Introduction This artical will show you how to connect to your android, so you can play with your android via adb1.\nSetup your environment get Android SDK Platform Tools download platform-tools directly or install it with your package manager:\n1 2 # arch sudo pacman -Sy android-tools enable debugging first enable developer mode, for my op6, clicking the build number a bunch of times enables developer mode\nFigure 1: enable developer mode for my op6\nafter that, go to \u0026ldquo;System \u0026gt; Developer Options\u0026rdquo;, enable USB debugging and Wireless ADB debugging\nFigure 2: enable debugging\nConnect to your phone with USB now if you have a USB cable, you can directly connect your android to your computer with that.\nYou can tell if device is connected via adb devices\nFigure 3: adb list connected devices\nConnect Wirelessly (no root required) After connecting with usb, you can enable tcpip on your phone, then connect with that wirelessly:\n1 2 3 4 5 6 # enable tcpip adb -s \u0026lt;device-serial\u0026gt; tcpip 5555 # get device ipv4 address adb -s \u0026lt;device-serial\u0026gt; shell ip -f inet addr # connect to it adb connect \u0026lt;device-ip\u0026gt;:5555 Figure 4: enable tcpip on the computer\nConnect Wirelessly (require root, no usb) If you have root access to you android, you can enable tcpip directly on your phone, then connect to it on the computer.\nI use termux2 to do these:\n1 2 3 4 su setprop service.adb.tcp.port 5555 stop adbd \u0026amp;\u0026amp; start adbd ip -f inet addr show wlan0 Figure 5: enable tcpip on the phone\nAndroid Debug Bridge (adb) is a versatile command-line tool that lets you communicate with a device\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nTermux is an Android terminal emulator and Linux environment app\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"connect to android via TCP/IP","id":1,"section":"posts","tags":["adb"],"title":"Connect to your android wirelessly","uri":"https://k4i.top/posts/connect-to-your-android-wirelessly/"},{"content":"What is a window manager i3 is a tiling window manager, which\nStacking WM mostly mouse driven, slow windows overlap with each other, space inefficient Tiling WM automatically layout windows like tiles, high space efficiency mostly keyboard driven, fast multiple layout mode: tabbed, stacked, horizontal/vertical split, float Understand Container \u0026amp; Tree The actual implementation of window managers may differ. But most tiling window managers use tree structure to manager their windows. In i3, windows are stored as leaf nodes of a tree, each workspace has a tree. Non leaf nodes of the tree are called containers, whose children are other containers or windows.\nAttributes of a container layout mode i3 has layout mode like:\nsplit (horizontally or vertically) tabbed stacked Why we need a layout mode attribute, to give you an example, imagine we have a tree structure like this, managing 3 windows.\nFigure 1: tree of ambiguous layout\nSince we do not know how to place windows inside a container, figure 1 may represents windows like figure 2, or figure 3 or something else. Therefore, containers must have a layout mode.\nFigure 2: possible window status 01\nFigure 3: possible window status 02\nTo only represents windows in figure 2, we add layout attribute to each container, as in figure 4.\nFigure 4: tree of unambiguous layout\npercentage of width or height in split direction To control the width or height of windows, we need to add percentage of width or height in split direction. as in figure 5\nFigure 5: tree with container percentage\nPractice To better understand the tree structure, we can put our windows or containers inside a tabbed/stacked container, and get the tree structure through the container title.\nHere\u0026rsquo;s how you can get the container title:\nswitch to an empty workspace: $Mod+3. toggle root container layout mode as split(horizontal or vertical): $Mod+e (usually we do not set root container layout mode as stacked or tabbed) open the first window in this workspace: $Mod+ENTER (opens my st terminal) set container (of this window) layout as tabbed or stacked: $Mod+w/s create a new vertical/horizontal split container: $Mod+v/V when container of the focused node(container or window) contains only a single node, and the container layout is set to split, $Mod+v/V only changes the split direction when container of the focused node contains more than one node, or container layout is set to tabbed/stacked, $Mod+v/V will create a new vertical/horizontal split container encapsulating current focused node now you can see a container title showing V[st] (V means horizontal split layout), create more containers or change container layout to see the title change: open one more st window with $Mod+ENTER changes the title to V[st st] Tips:\nuse $Mod+c or $Mod+p to select child or parent of a node, then operate on that node:\ncreate a sibling window close window of node (all window under that node will be closed) move window of node resize window of node some of my i3 shortcuts Here\u0026rsquo;s a snippet of my i3 configuration. Complete configuration is stored at my .dotfiles repository.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 # some configs from my ~/.config/i3/config set $mod Mod4 set $up k set $down j set $left h set $right l # change focus bindsym $mod+$left focus left bindsym $mod+$down focus down bindsym $mod+$up focus up bindsym $mod+$right focus right # move focused window bindsym $mod+Shift+$left move left bindsym $mod+Shift+$down move down bindsym $mod+Shift+$up move up bindsym $mod+Shift+$right move right # split in horizontal orientation bindsym $mod+Shift+v split h # split in vertical orientation bindsym $mod+v split v # enter fullscreen mode for the focused container bindsym $mod+f fullscreen toggle # change container layout (stacked, tabbed, toggle split) bindsym $mod+s layout stacking bindsym $mod+w layout tabbed bindsym $mod+e layout toggle split # toggle tiling / floating bindsym $mod+Shift+space floating toggle # change focus between tiling / floating windows bindsym $mod+space focus mode_toggle # focus the parent container bindsym $mod+p focus parent # focus the child container bindsym $mod+c focus child # resize window (you can also use the mouse for that) set $resize_step 5 bindsym $mod+y resize shrink width $resize_step px or $resize_step ppt bindsym $mod+i resize grow height $resize_step px or $resize_step ppt bindsym $mod+u resize shrink height $resize_step px or $resize_step ppt bindsym $mod+o resize grow width $resize_step px or $resize_step ppt Mod-h/j/k/l change focus to the left/upper/lower/right window Mod-S-h/j/k/l move focused window/container Mod-y/u/i/o change size of focused window/container Mod-v/V add a container for current window, set layout to vertical/horizontal split Mod-e/w/s set layout of container of focused window to split(toggles between splith, splitv)/tabbed/stacked Mod-p focus parent Mod-c focus child References i3wm user\u0026rsquo;s guide \u0026gt;\u0026gt; tree youtube: TheAlternative.ch - LinuxDays FS16 - Linux for Experts course wiki: window manager types ","description":"this is my i3 window manager configuration","id":2,"section":"posts","tags":["window-manager","i3"],"title":"Tiling WM (i3)","uri":"https://k4i.top/posts/tiling-wm--i3/"},{"content":"Introduction Public Cloud delivered via the internet and shared across organizations Private Cloud dedicated solely to your organization Hybrid Cloud any environment that uses both public and private clouds Public Cloud Service Features Pros No investments required to deploy and maintain the IT infrastructure (cloud vendor\u0026rsquo;s responsibility) High scalability and flexibility (to meet unpredictable workload demands) Flexible pricing options Cons total cost of ownership (TCO) can rise exponentially for large scale usage lease secure low visibility and control into the infrastructure Vendor Responsibility responsible for developing, managing, and maintaining the pool of computing resources shared between multiple tenants from across the network.\nPrivate Cloud Service Features Pros Dedicated and secure environments Customizable \u0026amp; Flexible high performance Cons high price for short-term use cases may not offer high scalability Vendor Responsibility Hybrid Cloud Service Features Pros Flexible policy to deploy workloads on public or private infrastructure (based on security, performance and cost) scale with security (public cloud resources to accommodate occasional spikes) reliable (multiple data centers \u0026ndash; public and private) cost control (sensitive workloads on private clouds, regular workloads on public cloud) Cons toggling between public and private (how to track, what\u0026rsquo;s the cost) public cloud resource management (different locations and categories) complexity of managing an evolving mix of private and public cloud architecture Vendor Responsibility References Public vs Private vs Hybrid: Cloud Differences Explained ","description":"Pros and cons of different types of cloud.","id":3,"section":"posts","tags":null,"title":"Public, Private and Hybrid Cloud","uri":"https://k4i.top/posts/public-private-and-hybrid-cloud/"},{"content":"Old way use rand(), usually pair with a random initialization of the seed:\n1 2 srand(int(time(0))); // initialize the seed rand(); // get a random int, [0, RAND_MAX] get random int in [0,x): rand()%x\nget random real in [0, 1]: rand()/double(RAND_MAX)\nModern way Generators random_device random_device is a uniformly-distributed integer random number generator that produces non-deterministic random numbers.\nA good implementation should has its randomness come from a non-deterministic source (e.g. a hardware device).\nWe can just use this to get our random numbers, but it might come with a light performance price. A PRNG is much better\npseudo RNG So, we usually use random_device to get our first random number, then use it to initialize other PRNGs, then we can more quickly get many more random numbers.\nThe STL implements several PRNGs (see cppref: Predefined random number generators), not just the Mersenne Twister shown above, you can check\nDistributions 1 2 3 4 5 // ... #include \u0026lt;random\u0026gt; std::random_device rd; // get a seed std::mt19937 g(rd()); Use cases of PRNG TODO\u0026hellip;\nRefs cppref: std::random_device cppref: Predefined random number generators std::random_shuffle is deprecated in C++14 ","description":"introduce randomness into your C++ programs, the right way.","id":4,"section":"posts","tags":["STL","Random","C","RNG"],"title":"Use Random in C++","uri":"https://k4i.top/posts/use-random-in-c-plus-plus/"},{"content":"introduction Pass1 is a command line tool that manages (adding, editing, generating, retrieving) your passwords, but with many useful font-ends and ported clients for different platforms. Its very handy to use it for managing all your passwords on all your devices.\nEach password lives in a gpg encrypted file.\ninit Before everything, we need to initialize the password store with a GPG key (How to generate a gpg key):\n1 2 3 4 # \u0026#34;Kyle Shi\u0026#34; is the user id (maybe email is better?) for my GPG key # this will create a directory: $HOME\\.password-store # with a file .gpg-id in it (which stores this id) pass init \u0026#34;Kyle Shi\u0026#34; Passwords that you add will be stored in the .password-store directory, named xxx.gpg, which is encrypted with your gpg public key, which only you can decrypt with your private key (gpg --output doc --decrypt doc.gpg).\nmanage with pass command add 1 pass insert Email/sky_io@outlook.com generate 1 2 3 # generate password for an entry with length of 15 # if -n (--no-symbols) is passed: will not use non alphanumeric characters pass generate Email/sky_io@outlook.com 15 edit 1 2 # edit an entry with your default editor pass edit Email/sky_io@outlook.com remove 1 pass rm Email/sky_io@outlook.com retrieve 1 2 3 4 5 6 # list password entries pass # show password for an entry pass Email/sky_io@outlook.com # copy password of an entry to the clipboard pass -c Email/sky_io@outlook.com history problem with clipboard manager: How to clear the history in CopyQ?\nmanage with other pass front ends We barely use pass command, instead we use other more user friendly front ends.\nunix/unix like: rofi-pass Alt+n: add new password Alt+a: action menu of current password Alt+h: help windows pass-winmenu android Android-Password-Store https://docs.passwordstore.app/docs/users/background-killing-bugs/ ios passforios Sync git(hub) 1 2 3 4 5 6 7 cd $HOME\\.password-store git init git branch -M main git add -A git commit -m \u0026#34;init pass store\u0026#34; git remote add origin git@github.com:sky-bro/password-store.git git push -u origin main Adding and removing passwords will automatically create git commits.\nbrowser settings switch off Offer to save passwords in chrome settings\npass is the standard unix password manager.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"manage passwords on all your devices (add, generate, edit, delete, sync).","id":5,"section":"posts","tags":["password","pass"],"title":"Manage Passwords with Pass","uri":"https://k4i.top/posts/manage-passwords-with-pass/"},{"content":"Introduction KMS1 uses a client-server model, to use it, you need to have a KMS host (server) available on your network.\nComputers that activate with a KMS host need to have a specific product key (KMS client key, or formally as Microsoft Generic Volume License Key - GVLK).\nVolume licensing editions are, by default, KMS clients with no extra configuration needed as the relevant GVLK is already there.\nGet a product key Get a product key from kms client activation product keys for you running windows edition.\nTo check your current windows version: run winver\nStart KMS server There are several KMS emulators, choose any:\npy-kms vlmcsd I recommend using py-kms with docker:\n1 docker run -d --name py-kms --restart always -p 1688:1688 pykmsorg/py-kms arguments explained:\n-d run in the background -name py-kms container name is py-kms (name whatever you want) --restart always always restart the container if it\u0026rsquo;s not running (unless manually stopped, but will still restart if docker daemon restarts) -p 1688:1688 map host port 1688 (left) to the port 1688 (right) in the container pykmsorg/py-kms the docker image to run activate with slmgr In your administrator powershell (win + r, powershell, Ctrl+Shift+Enter):\n1 2 3 4 5 6 7 8 9 10 11 12 # uninstall product key # slmgr.vbs /upk # set/change the product key slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX # set the kms server address, 1688 is the default port (can be omitted) slmgr /skms 192.168.122.1:1688 # activate windows slmgr /ato # activation status slmgr /dli # activation status (verbose) # slmgr /dlv Resources To install office, choose volume licensing edition, after setting KMS server, it will be activated automatically: Office Tool Plus KMS (Key Management Service) activates Microsoft products on a local network.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"Activate windows and office with a KMS emulator (for volume license editions)","id":6,"section":"posts","tags":["kms","windows"],"title":"Activate Windows With Your KMS Own Server","uri":"https://k4i.top/posts/activate-windows-with-your-own-kms-server/"},{"content":"Introduction You should use NFS for dedicated Linux Client to Linux Server connections.\nFor mixed Windows/Linux environments use Samba.\nServer linux Dependency Installation\n1 sudo pacman -Sy samba configuration file\nNeed to create /etc/samba/smb.conf before starting the service systemctl start smb\nYou can get an example configuration file from Samba Git Repository.\nGet help about writing the configuration file with man smb.conf.\nHere\u0026rsquo;s mine:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [global] workgroup = k4i.top map to guest = Bad Password server string = Samba Server passdb backend = tdbsam [homes] comment = Home Directories browseable = no writable = yes [tmp] comment = Temporary file space path = /tmp public = yes writable = yes printable = no user management\nwe need to have a user to access linux files.\nFor anonymous access, we use the guest account (by default, it\u0026rsquo;s user nobody) If you want to access files in a home directory, you should login as that user. We need to specifically add a user (an existing linux user, or a non-existing one \u0026ndash; samba will create the user for you) to samba, then set a password for that user (can be different from your linux login password)\n1 sudo smbpasswd -a sky And by default, when you access a samba server with a user, you can browser that user\u0026rsquo;s home directory (if it has one).\nstart\n1 2 3 systemctl start smb.service # if you want to access service with host names, start this service systemctl start nmb.service Client windows In the file manager location bar, input: \\\\servername\\[share], then you may remap any folder to a drive.\ntips: to clean user credentials (or with the control panel GUI)\n1 net use /delete *. linux With a file manager: https://wiki.archlinux.org/title/samba#File_manager_configuration\nIn the location bar, input: smb://servername/share\nWith a command line tool: smbclient 1 2 smbclient //xyz/public -U nobody smbclient //xyz/sky -U sky mount at startup 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 sudo pacman -Sy cifs-utils # prepare mount entry sudo vim /etc/fstab # add smbshare like: # //192.168.31.248/Dev /home/sky/share/Dev cifs credentials=/home/sky/.smbcredentials,user,uid=sky,gid=sky 0 0 # user: allow any user to mount the drive # noauto: the dirve is not mounted during startup, do not add this if you want to mount at startup systemctl daemon-reload # make /etc/fstab change effective # create mount credentials vim ~/.smbcredentials # username=sky # password=sky chmod 0600 ~/.smbcredentials # create the mount point mkdir -p ~/share/Dev # mount mount ~/share/Dev # umount umount ~/share/Dev Resources File transfer between Linux and KVM Guest Windows 10 Arch Wiki: samba ","description":"use samba to share files across linux and windows.","id":7,"section":"posts","tags":["samba"],"title":"File Sharing with Samba","uri":"https://k4i.top/posts/file-sharing-with-samba/"},{"content":"Introduction KVM1 is part of linux kernel, and QEMU2 (Quick EMUlator) is an emulator. KVM by itself cannot provide the complete virtualization solution, it needs QEMU to provide full hypervisor functionality. QEMU can emulate cpu on its own, but with KVM, QEMU can achieve near native performance by executing the guest code directly on the host CPU.\nSo it\u0026rsquo;s best for them to work together.\nFigure 1: architecture\ntools you need Use your own package manager to install these tools:\n1 2 3 4 5 6 7 8 9 # arch users sudo pacman -Sy --needed \\ qemu \\ virt-viewer \\ libvirt \\ dnsmasq \\ ebtables \\ virt-install \\ virt-manager \\ kvm (Kernel-based Virtual Machine): Kernel module that handles CPU and memory communication qemu (Quick EMUlator): emulates many hardware resources \u0026ndash; dick, network, usb\u0026hellip; libvirt: an open-source API, daemon and management tool for managing platform virtualization. It can be used to manage KVM, Xen, VMware ESXi, QEMU and other virtualization technologies. virsh: comes with libvirt, command-line tools for communicating with libvirt virt-manager: GUI alternative to virsh, albeit less capable. virt-install: part of virt-manager project, create new VM guests virt-viewer: part of virt-manager project, UI for interacting with VMs via VNC/SPICE dnsmasq: light-weight DNS/DHCP server. Primarily used for allocating IPs to VMs. ebtables: used for setting up NAT networking the host some setup two problems\nby default, virt-manager talks to qemu:///system, and virsh talks to qemu:///session (unless run as sudo). when talking to qemu:///system, we need to input password every time, especially unpleasant experience when a cli tool like virsh. for the first problem, we can tell virsh to use qemu:///system by default\n1 2 cp /etc/libvirt/libvirt.conf ~/.config/libvirt/libvirt.conf vim ~/.config/libvirt/libvirt.conf # uncomment or add: uri_default = \u0026#34;qemu:///system\u0026#34; To solve the second problem, we can add a rule to polkit to allow our group (wheel \u0026ndash; administrator group) to use virt-manager or vish without being asked for password.\nedit /etc/polkit-1/rules.d/xxx.rules, your path may be different, put this in.\n1 2 3 4 5 6 /* Allow users in wheel group to manage the libvirt daemon without authentication */ polkit.addRule(function (action, subject) { if (action.id == \u0026#34;org.libvirt.unix.manage\u0026#34; \u0026amp;\u0026amp; subject.isInGroup(\u0026#34;wheel\u0026#34;)) { return polkit.Result.YES; } }); start services 1 2 3 4 5 6 7 8 systemctl enable libvirtd # start on boot systemctl enable virtstoraged # start on boot systemctl enable virtnetworkd # start on boot systemctl start libvirtd # start libvirtd systemctl start virtstoraged # start on boot systemctl start virtnetworkd # start on boot virsh net-autostart --network default virsh net-start --network default # start the default network add shrarefolders Inside virtual machine manager, double click on one of your machine, then select view-\u0026gt;details-\u0026gt;Add Hardware, set something like below:\nFigure 2: add sharefolder\nThe above setting will add a new device /ctf in the virtual machine\nif in ubuntu sudo vim /etc/rc.local\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/sh -e # # rc.local # # This script is executed at the end of each multiuser runlevel. # Make sure that the script will \u0026#34;exit 0\u0026#34; on success or any other # value on error. # # In order to enable or disable this script just change the execution # bits. # # By default this script does nothing. mount -t 9p -o trans=virtio,version=9p2000.L /ctf /home/sky/ctf exit 0 After restarting this server, /ctf will automatically be mounted on /home/sky/ctf\nTo make the user (actually kvm) writing the share folder same as the user at host (vm host):\nsudo vim /etc/libvirt/qemu.conf, find two lines with user=xxx and group=xxx, change them to yourself (by default, xxx should be root), then uncomment the two lines. for me, they are:\n1 2 user = \u0026#34;sky\u0026#34; group = \u0026#34;sky\u0026#34; You may need to restart the libvirtd.service for this to take effect.\nAlso, you need to chown the disk to the above user:group: sudo chown sky:sky /var/lib/libvirt/images/ubt16-server.qcow2\ncreate a VM gui: virt-manager cli: virt-install examples:\nWindows 11 VM with QEMU/KVM clone a VM gui: virt-manager cli: virt-clone useful virsh commands 1 2 3 4 virsh list --all virsh start ubuntu-server virsh shutdown ubuntu-server virsh reboot ubuntu-server Resources Linux Hypervisor Setup (libvirt/qemu/kvm) Sharing folder with VM through libvirt, 9p, permission denied macOS-Simple-KVM KVM is a hypervisor built into the linux kernel.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nQEMU is a generic and open source machine emulator and virtualizer.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"setup hypervisor with qemu and kvm, the best linux based open source virtualization solution","id":8,"section":"posts","tags":["qemu","kvm","hypervisor"],"title":"Linux Hypervisor Setup","uri":"https://k4i.top/posts/linux-hypervisor-setup/"},{"content":"Get a windows iso MS: Download Windows 11\nCreate new VM with virt-manager open virt-manager\nmake sure you\u0026rsquo;ve connected to the QEMU/KVM (click the File option, then \u0026lsquo;Add Connection\u0026rsquo;, make sure hypervisor is selected to QEMU/KVM, and click connect)\nnow QEMU/KVM will show up that you can add a vm to:\nFigure 1: create a new virtual machine with virt-manager\nwalk through basic options select Local install media (ISO image or CDROM) Figure 2: select windows 11 iso\nConfigure Memory and CPU Figure 3: configure memory and cpu\nCreate a virtual hard disk Figure 4: create a disk\nSet VM name, Network, etc. and make sure you select the option: Customize configuration before install.\nFigure 5: Name, Network, Customize\nconfigure hardware if you\u0026rsquo;ve selected the \u0026ldquo;Customize configuration before install\u0026rdquo; option, you\u0026rsquo;ll be lead to this hardware configuration prompt.\nhard disk bus type Click on SATA Disk 1. Choose the disk bus as VirtIO Figure 6: set disk bus tpe to VirtIO\nnetwork device model also set network device model to virtio\nFigure 7: set network device model to virtio\nadd virtio driver click on Add Hardware select storage, click on manage, and attach the virtio driver you\u0026rsquo;ve downloaded choose device type as CDROM Figure 8: add virtio driver\nchange boot order make sure CDROM 1 is checked and at top.\nFigure 9: change boot order\n(optional) enable TPM Click on Add Hardware, Add the TPM as below.\nModel – You will see two models, choose TIS,\nBackend – select Backend as Emulated.\nVersion – 2.0\nFigure 10: add TPM\n(optional) enable Secure Boot you need to install ovmf and swtpm\n1 sudo pacman -Sy swtpm ed2k-ovmf Figure 11: enable secure boot\nBegin installation bypass checks Click Begin Installation button on the top left corner to start the installation process, then install Windows like you would on a normal PC.\nIf you haven\u0026rsquo;t enabled TPM 2.0 and secure boot, you\u0026rsquo;ll not meet the installation requirements of windows 11. But you can bypass these checks.\nopen command prompt with Shift+F10\n1 2 REG ADD HKLM\\SYSTEM\\Setup\\Labconfig /v BypassTPMCheck /t REG_DWORD /d 1 REG ADD HKLM\\SYSTEM\\Setup\\Labconfig /v BypassSecureBootCheck /t REG_DWORD /d 1 Similarly, you can disable other checks with: BypassSecureCPUCheck, BypassSecureRAMCheck, BypassSecureStorageCheck\nLoad driver You won\u0026rsquo;t be able to find the virtio hard disk that you have added, click on Load driver. In the prompt, choose windows 11 driver, and click on Next.\nSkip connecting to network we don\u0026rsquo;t have the corresponding virtio driver yet, we\u0026rsquo;ll install it in the next section.\nAfter installation Install VirtIO Drivers Open the Windows Explorer and navigate to the CD-ROM drive. Simply execute (double-click on) virtio-win-gt-x64 (optional) Use the virtio-win-guest-tools wizard to install the QEMU Guest Agent and the SPICE agent for an improved remote-viewer experience. (optional) Reboot VM remove CDROMs Remove the windows installer iso after intallation. Keep the virtio iso. file sharing recommend sharing files between host and windows guest with samba.\nresources How to properly configure Virt-Manager (QEMU/KVM) with Windows guest ","description":"Install windows VM in QEMU/KVM","id":9,"section":"posts","tags":["virtual","machine","windows","kvm","qemu"],"title":"Windows 11 VM with QEMU/KVM","uri":"https://k4i.top/posts/windows-11-vm-with-qemu-kvm/"},{"content":".tmux.conf My most up to date config file is at github: .dotfiles/.tmux.conf, and for better experience, I strongly suggest you use Capslock as your Ctrl key (I set C-a as my prefix instead of C-b).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 # chenge prefix from =C-b= to =C-a= set -g prefix C-a unbind C-b bind C-a send-prefix # better window split, with \u0026#34;-\u0026#34; and \u0026#34;|\u0026#34; unbind \u0026#39;\u0026#34;\u0026#39; # \u0026#34; bind - splitw -v -c \u0026#39;#{pane_current_path}\u0026#39; unbind % bind | splitw -h -c \u0026#39;#{pane_current_path}\u0026#39; # enable mouse set-option -g mouse on # use hjkl to # change focus bind -r k select-pane -U bind -r j select-pane -D bind -r h select-pane -L bind -r l select-pane -R # resize pane bind -r ^k resizep -U 2 # upward (prefix Ctrl+k) bind -r ^j resizep -D 2 # downward (prefix Ctrl+j) bind -r ^h resizep -L 2 # to the left (prefix Ctrl+h) bind -r ^l resizep -R 2 # to the right (prefix Ctrl+l) # enable vi motions setw -g mode-keys vi # select, copy with v, y bind -T copy-mode-vi v send-keys -X begin-selection bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel set -g base-index 1 set -g pane-base-index 1 set -g status-interval 1 set -g status-justify left setw -g monitor-activity on # Set default term to xterm # https://github.com/zsh-users/zsh-autosuggestions/issues/229 # https://stackoverflow.com/questions/18600188/home-end-keys-do-not-work-in-tmux set -g default-terminal screen-256color Key Bindings prefix means C-b by default, or C-a for me.\nlist all shortcust: prefix ?\nsessions list session: tmux ls, prefix s new session: tmux new -s session_name (attach now), tmux new -ds session_name (do not attach) attach session: tmux a -t session_name create or attach session: tmux new -A -s session_name detach session: prefix d rename session: prefix $ kill session: tmux kill-session -t session_name previous/next session: prefix (/) windows new window: prefix c next/previous window: prefix n/p rename window: prefix , kill window: prefix \u0026amp; panes change focus between panes: prefix h/j/k/l resize pane: prefix C-h/j/k/l split pane: prefix | vsplit pane: prefix - toggle zoom: prefix z kill pane: prefix x scroll pane: use mouse wheel or prefix [ then with vi motions toggle between pane layouts: prefix SPACE display panes / show pane numbers: prefix q (given a number, jump to that pane) swap with previous/next pane: prefix {/} copy \u0026amp; paste within tmux select \u0026amp; copy with your mouse or first enter navigation: prefix [, then navigate with vi motions: hjkl, C-f, C-b, \u0026hellip; v or shift+v to start character/line level selection o to change active end of selection y to yank (copy) or q to quit navigation prefix ] to paste selection bettwen tmux and your host hold shift and use mouse to select copy with Ctrl+Shift+c or Ctrl+c (depends on your system/terminal settings) paste with Ctrl+Shift+v or Ctrl+v (depends on your system/terminal settings) command line tmux save-buffer - save paste buffer to file (here use - as a filename to mean stdin/stdout). tmux paste-buffer tmux set-buffer tmux choose-buffer 1 2 3 4 # copy to clipboard tmux save-buffer - | xclip -i -sel clipboard # paste from clipboard tmux set-buffer \u0026#34;$(xclip -o -sel clipboard)\u0026#34;; tmux paste-buffer ","description":"A portable \u0026 minimal tmux configuration","id":10,"section":"posts","tags":["cheatsheet","terminal","tmux"],"title":"Tmux Notes","uri":"https://k4i.top/posts/tmux-notes/"},{"content":"Introduction Magisk1 is a suite of open source software for customizing Android, supporting devices higher than Android 5.0.\nSome highlight features:\nMagiskSU: Provide root access for applications Magisk Modules: Modify read-only partitions by installing modules MagiskBoot: The most complete tool for unpacking and repacking Android boot images Zygisk: Run code in every Android applications\u0026rsquo; processes This is my notes on installing it on my op6 following the official installation guide.\nDownload and install Magisk app Download latest Magisk apk from github release. Install it:\n1 adb insatll Magisk.apk After launching the app, notice the Ramdisk value (mine is Yes), it means whether or not your device has boot ramdisk.\nif Yes, patch boot partition (I\u0026rsquo;ll choose this) if No, patch recovery partition backup images This will need root access, so reboot to twrp recovery first.\n1 2 3 4 5 6 7 8 9 10 # go to twrp recovery to get root access to your image partition # adb reboot recovery adb shell # commands below are executed in the android shell # get current slot (A/B) /bin/getprop ro.boot.slot_suffix # _a, so I will backup /dev/block/by-name/boot_a dd if=/dev/block/by-name/boot_a of=/sdcard/boot.img # optional, if you have vbmeta partition # dd if=/dev/block/by-name/vbmeta_a of=/sdcard/vbmeta.img # adb pull /sdcard/vbmeta.img patch image and install patch image inside magisk app.\npress install button in the magisk card select the image just extracted pull the patched image to your computer, reboot to bootloader, flash the new patched image to your android device.\n1 2 3 4 5 6 7 8 adb pull /sdcard/Download/magisk_patched-xxx.img adb reboot bootloader fastboot flash boot magisk_patched-xxx.img # if you patched the recovery partition # fastboot flash recovery magisk_patched-xxx.img # optional, patch and install the vbmeta partition # fastboot flash vbmeta --disable-verity --disable-verification vbmeta.img fastboot reboot Now open Magisk app again, you can see it\u0026rsquo;s installed.\nMagisk \u0026ndash; The Magic Mask for Android\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"notes on gaining root access on my android with Magisk","id":11,"section":"posts","tags":["root","magisk"],"title":"Root Android with Magisk","uri":"https://k4i.top/posts/root-android-with-magisk/"},{"content":"flash twrp recovery Download TWRP1 recovery for your android device, and probably follow the installation guide there.\nGenerally, there are two ways of installing the recovery: from a .img file or a .zip file.\nbackup your boot.img There\u0026rsquo;s no recovery partition, recovery is now part of the boot partition.\nSo in case we break our boot partition, backup it first.\n1 2 3 4 5 6 7 8 9 10 11 # === On your android shell (adb shell) === # cd `find /dev/block/platform -type d -name by-name` # mine is /dev/block/platform/soc/1d84000.ufshc/by-name # or just # cd /dev/block/by-name/ cd /dev/block/bootdevice/by-name/ # store the boot partition to /sdcard/boot.img file dd if=boot of=/sdcard/boot.img # === On you computer shell === # copy the boot.img to your computer adb pull /sdcard/boot.img You can restore the boot partition with fastboot.\n1 2 # === on your computer shell === fastboot flash boot boot.img Install with the recovery.img file First temporarily boot into the new recovery.\n1 2 adb reboot bootloader fastboot boot recovery.img Once booted, make this recovery permanent:\nnavigate to Advanced \u0026gt; Flash Current TWRP option (preferably), or navigate to Advanced \u0026gt; Install Recovery Ramdisk \u0026gt; select the recovery.img file from your phone storage, or as in the next section: install with the recovery.zip file. Install with the recovery.zip file If you already have a working recovery, you only need to have this file on you phone storage (no computer needed). And flash this zip file from your recovery.\nNavigate to Install \u0026gt; select the recovery.zip file.\nflash rom You can get many useful resources for OnePlus from 大侠阿木云盘2.\nWipes Dalvik Cache Cache Install rom.zip put the rom.zip file on your phone storage.\nboot to recovery, navigate to Install \u0026gt; select the rom.zip file.\nTrouble Shooting After flashing a offcial rom for my oneplus 6, my device keeps boots to recovery instead of the system. Solution: go to recovery, Wipe \u0026gt; Format Data. TWRP is the leading custom recovery for Android phones\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nI downloaded official ROM (many history versions) for my op6 from 大侠阿木云盘\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"Notes on tweaking my android (op6)","id":12,"section":"posts","tags":["twrp"],"title":"Flash Rom For My Android","uri":"https://k4i.top/posts/flash-rom-for-my-android/"},{"content":"Introduction Using a bare git repo to manage dotfiles1 is simple (idea from this post, it only requires git), but now I\u0026rsquo;ve switch to stow2, which in my view, grouping dotfiles together in one folder in easier and cleaner for me to find.\nStart Create the repo\n1 git init --bare $HOME/.dotfiles.git Set git alias for the repo\n1 2 echo \u0026#34;alias dotfiles=\u0026#39;/usr/bin/git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME\u0026#39;\u0026#34; \u0026gt;\u0026gt; $HOME/.zshrc # or .bashrc . $HOME/.zshrc Then use this command to not show untracked files on dotfiles status\n1 dotfiles config --local status.showUntrackedFiles no Backup Files use dotfiles like your original git command\n1 2 3 4 5 dotfiles status dotfiles add .vimrc dotfiles commit -m \u0026#34;backup .vimrc\u0026#34; dotfiles remote add origin https://www.github.com/sky-bro/.dotfiles.git dotfiles push origin master Restore Files On this computer\n1 2 # rm .vimrc dotfiles checkout On another computer\n1 2 3 4 5 6 echo \u0026#39;alias dotfiles=\u0026#34;/usr/bin/git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME\u0026#34;\u0026#39; \u0026gt;\u0026gt; $HOME/.zshrc source ~/.zshrc echo \u0026#34;.dotfiles.git\u0026#34; \u0026gt;\u0026gt; .gitignore # prevent recursion issues git clone --bare git@github.com:sky-bro/.dotfiles.git $HOME/.dotfiles.git dotfiles checkout dotfiles config --local status.showUntrackedFiles no use a bare git repository stow to manage my dotfiles.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nGNU Stow is a symlink farm manager.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"manage dotfiles with a bare git repository","id":13,"section":"posts","tags":["dotfiles"],"title":"Manage Dotfiles With A Bare Git Repo","uri":"https://k4i.top/posts/manage-dotfiles-with-a-bare-git-repo/"},{"content":"Introduction I used to manage my dotfiles1 with a bare git repository, its simple, but dotfiles are all over the place, it\u0026rsquo;s hard for me to get a whole view of them.\nSo now I\u0026rsquo;ve switched to stow2, which is a symlink manager to help you put all files you want in one place and symlink them to where they belong (it creates symlink for files in one folder to another folder).\nFirst Time Setup So the first time we use stow to manage our dotfiles, we just need to follow these steps.\ncreate dotfiles folder in your home directory (preferably) move files to that folder add .stow-local-ignore file (Types And Syntax Of Ignore Lists) create symbolic links back to the files moved (stow the dotfiles directory) (optional) backup the folder (like pushing to github) And this is is an example of mine:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # step 1: create dotfiles folder in the home directory cd ~ mkdir .dotfiles # step 2: move files to the directory created mv .vimrc .dotfiles/ # same folder structure inside .dotfiles as $HOME folder mkdir .dotfiles/.config/i3 -p mv .config/i3/config .dotfiles/.config/i3/ # ... more cd .dotfiles # step 3: add .stow-local-ignore file vim .stow-local-ignore # step 4: create symbolic links stow . # ls -al ~ The .stow-local-ignore file if for telling stow that you don\u0026rsquo;t want to symlink some files, you want to ignore them, here\u0026rsquo;s mine.\n1 2 3 4 5 \\.git \\.gitignore .*\\.org ^/LICENSE.* ^/COPYING restore from a dotfiles backup Restoring dotfiles is very simple, just recreate the symbolic links.\nrestore the dotfiles directory (git clone) create symbolic links back Other useful commands of stow 1 2 # unlink files (v for verbose) stow -vD . use a bare git repository stow to manage my dotfiles.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nGNU Stow is a symlink farm manager.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"manage dotfiles with stow.","id":14,"section":"posts","tags":["dotfiles"],"title":"Manage My Dotfiles With Stow","uri":"https://k4i.top/posts/manage-my-dotfiles-with-stow/"},{"content":"Introduction Just the other day I updated all my packages through yay -Syu (like pacman -Syu but also updates aur packages).\nAnd after a reboot, it entered a boot loop\u0026hellip;\nI believe this had happened to most arch users, and most of the time its just because we broke the dependencies of some packages after the upgrade.\nSo here\u0026rsquo;s how I saved boot failure after yay -Syu.\nYou\u0026rsquo;ll need a bootable usb stick (preferable the one you use for installing the system). Manually boot from grub (optional) follow this guide1 to boot your linux from grub (generates log).\nThe grub command line can also be entered from your bootable usb drive.\n1 2 3 4 5 6 ls # list partitions ls (hd1,gpt2)/ # see files in a partition set root=(hd1,gpt2) # your linux root partition linux /boot/vmlinuz-5.13-x86_64 ro root=/dev/nvme0n1p1 initrd /boot/initramfs-5.13-x86_64.img boot chroot to your system manjaro-chroot is provide in manjaro-tools-base package, and is already installed in your live system.\n1 2 3 4 5 6 7 8 # mount root mount /dev/nvme0n1p2 /mnt # mount boot # mount /dev/xxx /mnt/boot # mount efi mount /dev/nvme0n1p1 /mnt/boot/efi/ manjaro-chroot /mnt check your boot log 1 2 3 # -b: show boot log # -1: offset, last boot journalctl -b -1 fix any problems find any suspicious errors in the boot log, and search it on the web, see how to fix them.\nfor me, a package from aur was causing the problem, and I tried to fix it, but no luck.\nSo I just uninstalled it!\nreboot success!\nHow to manually boot up a Linux\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"pacman -Syu broke my linux again!!","id":15,"section":"posts","tags":["linux","boot"],"title":"Fix boot problem after updating packages","uri":"https://k4i.top/posts/fix-boot-problem-after-updating-packages/"},{"content":"Introduction CopyQ1 is a clipboard manager with many features.\nmanages clipboard history history in different tabs Store text, HTML, images or any other custom formats Support custom commands2, like saving clipboard items to file vi style navigation Basic Setup Enable vi style navigation in Preferences -\u0026gt; General Enable Tab Tree and Show Item Count in Preferences -\u0026gt; Layout Custom shortcuts in Preferences -\u0026gt; Shortcuts or in File -\u0026gt; Commands/GlobalShortcuts (press F6 from main window) Add Commands You can get many useful commands from CopyQ-Commands2, or you can create your own commands following the documentation.\nTo add a command to CopyQ:\ncopy the command code (starts with [Command] or [Commands] for multiple commands) open CopyQ (Ctrl-Alt-h) open command dialog (F6) click \u0026ldquo;Paste Commands\u0026rdquo; button (Ctrl-v) apply changes Commands that I use:\nSave Item/Clipboard To a File: Opens dialog for saving selected item data to a file. Image Tab: Automatically store images copied to clipboard in a separate tab. Key Bindings Ctrl-Alt-h: open/close main window, show clipboard history (customized) Ctrl-Alt-s: save as (customized) j/k: next/previous item Ctrl-h: previous tab l/Enter: copy \u0026amp; paste item Ctrl-c: copy item ESC/Ctrl-[: close window CopyQ, a clipboard manager with advanced features.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\ncopyq-commands is a repo which has many useful commands for CopyQ clipboard manager\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"CopyQ is a clipboard manager written in Qt/C++","id":16,"section":"posts","tags":["clipboard"],"title":"Clipboard Manager: CopyQ","uri":"https://k4i.top/posts/clipboard-manager-copyq/"},{"content":"My terminal emulator is st (simple terminal) from LukeSmith1, and my shell is zsh (with ohmyzsh2).\nDependencies dmenu fzf3 pywal4 ohmyzsh 1 2 # . start-proxy 1081 socks5h sh -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\u0026#34; Then config or restore5 your ~/.zshrc file.\n1 dotfiles checkout ~/.zshrc colors and themes p10k I use powerlevel10k6 as my zsh theme.\nclone the repository: 1 2 3 git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k # for chinese users, recommend: # git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k set ZSH_THEME=\u0026quot;powerlevel10k/powerlevel10k\u0026quot; in ~/.zshrc. configure with p10k Xresources and pywal you can define your color scheme in ~/.Xresources file, and load it with xrdb ~/.Xresources.\nOr you can let pywal generates and sets a colorscheme for you:\n1 2 3 4 5 6 7 8 9 #!/bin/sh # We grab the wallpaper location from wal\u0026#39;s cache so # that this works even when a directory is passed. image_path=\u0026#34;${1:-\u0026#34;$(\u0026lt; \u0026#34;${HOME}/.cache/wal/wal\u0026#34;)\u0026#34;}\u0026#34; # -n tells =wal= to skip setting the wallpaper. wal -n -i \u0026#34;$image_path\u0026#34; feh --no-fehbg --bg-fill \u0026#34;$image_path\u0026#34; This is a script7 to set my wallpaper and color scheme from an image: wal-feh wallpaper.png.\nAnd I put exec --no-startup-id ~/bin/wal-feh in my ~/.config/i3/config to autostart it.\nfzf Install fzf, then put this in your ~/.zshrc:\n1 2 source /usr/share/fzf/key-bindings.zsh source /usr/share/fzf/completion.zsh zsh-autosuggestions Fish-like fast/unobtrusive autosuggestions for zsh.\nclone the repository:\n1 git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions add the plugin to the plugins list inside the ~/.zshrc file.\n1 2 3 4 plugins=( # other plugins... zsh-autosuggestions ) keybindings alt-l: follow urls alt-y: copy urls alt-o: copy output of a command alt-j/k/d/u: scroll down/up/faster-down/faster-up alt-c/v: copy/paste Ctrl+t: list files+folders in current directory (e.g., type git add, press Ctrl+t, select a few files using Tab, finally Enter) Ctrl+r: search history commands ESC+c: fuzzy change directory st from Luke Smith\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nOh My Zsh is a delightful, open source, community-driven framework for managing your Zsh configuration\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nfzf is a general-purpose command-line fuzzy finder\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nPywal is a tool that generates a color palette from the dominant colors in an image.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nuse a bare git repository stow to manage my dotfiles.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nPowerlevel10k is a theme for Zsh. It emphasizes speed, flexibility and out-of-the-box experience.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nmy wal-feh script to set wallpaper and color scheme\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"show my terminal \u0026 shell setup.","id":17,"section":"posts","tags":["shell","terminal"],"title":"Terminal \u0026 Shell Setup (st \u0026 zsh)","uri":"https://k4i.top/posts/terminal-and-shell-setup--st-and-zsh/"},{"content":"I am planing on totally changing to the terminal based file manager: ranger.\nAnd this is my cheatsheet on using it, for more detailed guides you can go check the ranger official user guide1.\nlaunch I use $mod+Shift+Return to launch my ranger, and this keybinding is set in the i3 config file as below.\n1 2 # ~/.config/i3/config bindsym $mod+Shift+Return exec cd \u0026#34;$(xcwd)\u0026#34; \u0026amp;\u0026amp; exec st -e \u0026#34;ranger\u0026#34; Here I also use xcwd2 to get my current working directory, so I can launch ranger from that directory.\nKey bindings and hints g: navigation and tabs r: open with y: yank d: cut/delete p: paste o: sort .: filter_stack ?? z: settings u: undo M: linemode +, -, =: rights Alt+N: switch(Tab), create tab configuration files under ~/.config/ranger/ folder, there are 4 main configuration files:\nrc.conf: the main config, various key bindings and switches rfile.conf: how to open a file scope.sh: how to preview a file commands.py: implement various commands (functions), you can add your custom commands here. Bookmarks m\u0026lt;key\u0026gt;: bookmark current folder '\u0026lt;key\u0026gt;: go to a bookmark um\u0026lt;key\u0026gt;: remove a bookmark Select/Mark files SPC: mark current file v: invert selection (easy to select all) V: visual mode, to mark a range of files :mark REGEX, :unmark REGEX: to mark/unmark with regex expression. uv, :unmark: unmark all files Macros %f: the highlighted file %d: the path of the current directory %s: the selected files in the current directory %t: the tagged files in the current directory %c: the full pathes of the currently copied/cut files %p: the full pathes of selected files Rename, Create Files \u0026amp; Folders cw: to rename selected file or files (bulk rename, works great with :flat) :mkdir: create directory :touch: create file TODO drag and drop https://github.com/ranger/ranger/wiki/Drag-and-Drop\nranger official user guide\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nxcwd is a simple tool that prints the current working directory of the currently focused window.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"ranger is a terminal based file manager.","id":18,"section":"posts","tags":["ranger"],"title":"Ranger Notes","uri":"https://k4i.top/posts/ranger-notes/"},{"content":"Introduction This notes is on how to use org-mode to write things. Org provides with many functionalities and is highly customizable and extensible. Every writing feature encompasses some handy tricks listed like below:\nKEYS PRESSED (function called - optional): explanation on what it does Basic Editing Comments C-c ; toggle comment of an entry 1 2 3 4 5 6 7 * COMMENT Comment an entry # comment a line #+begin_comment block of coment #+end_comment Font types 1 2 3 4 5 6 - /italic/ - *bold* - _underlined_ - =verbatim= - ~code~ - +strike-through+ will be rendered as:\nitalic bold underlined verbatim code strike through Org Entities for entering special characters, we can use org entities:\nhttps://stackoverflow.com/questions/16443386/how-to-escape-double-quote/31207746#31207746\n1 =\\equal= Headings 1 2 3 4 * H1 ** H2 *** H3 **** H4 C-RET: new heading M-RET: new heading by spliting current heading C-S-RET: new heading, but with TODO M-S-RET: new heading by spliting current heading, but with TODO M-LEFT/RIGHT: Promote/Demote current subtree M-UP/DOWN: Move/swap subtree up/down Code Offers two types of source code:\ncode block inline code org-entities-help function helps you insert some code.\ninline 1 2 src_c++[:exports code]{ typedef long long ll; } src_shell[:exports code]{ echo -e \u0026#34;test\u0026#34; } typedef long long ll;\necho -e \u0026quot;test\u0026quot;\ncode block source code blocks are one of many Org block types.\n1 2 3 4 5 6 7 8 #+BEGIN_SRC cpp #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;123\\n\u0026#34;; return 0; } #+END_SRC 1 2 3 4 5 6 #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;123\\n\u0026#34;; return 0; } List M-RET new item at current level M-S-RET new item with a checkbox M-UP/DOWN move item up/down, including subitems M-S-UP/DOWN move item up/down M-LEFT/RIGHT decrease/increase indentation of item M-S-LEFT/RIGHT decrease/increase indentation of item, including subitems C-c C-c toggle checkbox C-c - Cycle through itemize/enumerate bullets Table |Name|Age C-c RET create table with headers NAME Age sky 22 k4i 23 RET go to next row S-UP/DOWN/LEFT/RIGHT swap between cells M-UP/DOWN/LEFT/RIGHT swap between rows/columns M-S-UP/DOWN/LEFT/RIGHT insert/delete row/column C-c - insert horizontal line below C-c RET insert horizontal line below, move to next row C-c ^ sort column Footnote for more information on footnote, please refer to the official org site1.\nfootnote types: named footnote fn:NAME anonymous, inline footnote fn:: inline definition, fn:NAME: inline definition example 1 2 3 The Org homepage[fn:1] now looks a lot better than it used to. ... [fn:1] The link is: https://orgmode.org hyperlinks formats [[link][description]] [[link]] k4i\u0026rsquo;s home! link types internal links external links shortcuts C-c C-l: insert/delete link C-c C-o: open link todos [1/2] DONE subtask 01 M-S-RET new todo item C-c C-t cycle through todo states BUG subtask 02 [1/2] [-] item 01 item 01.01 item 01.02 item 02 Images C-c C-x C-v toggle images (org-toggle-inline-images) Exports latex latex config\n1 2 3 4 tlmgr update elegantpaper tlmgr install elegantpaper # [[https://github.com/ElegantLaTeX/ElegantPaper][elegantpaper]] tlmgr uninstall elegantpaper pip install pygments # dependency of [[https://github.com/gpoore/minted][minted]] add this in your front matter\n1 2 3 #+LATEX_COMPILER: xelatex #+LATEX_CLASS: elegantpaper #+OPTIONS: prop:t fixed reference ids Org will set random ids for internal links, sometimes we want them to be fixed.\nThere are two solutions, one is to seed the random number generater2.\n1 2 (defun seed-random-generator (_) (random \u0026#34;a fixed and unchanging string\u0026#34;)) (add-hook \u0026#39;org-export-before-processing-hook #\u0026#39;seed-random-generator) And another way is to override the org-export-new-reference3 function:\n1 2 3 4 5 (defun org-export-deterministic-reference (references) (let ((new (length references))) (while (rassq new references) (setq new (+ new 1))) new)) (advice-add #\u0026#39;org-export-new-reference :override #\u0026#39;org-export-deterministic-reference) org mode official site\u0026#160;\u0026#x21a9;\u0026#xfe0e;\norg export: create repeatable labels\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nExport to HTML with useful, non-random IDs and anchors\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"My Notes on org writing.","id":19,"section":"posts","tags":["org"],"title":"Org Notes","uri":"https://k4i.top/posts/org-notes/"},{"content":"my simple config my simple config can be found here: .dotfiles/.vimrc\nwidows C-w s horizontal split window C-w v vertical split window C-w q quit a window C-w h/j/k/l move between windows C-w H/J/K/L make current master window C-w +/- inc/dec height, can prepend with a number C-w \u0026gt;/\u0026lt; inc/dec width, can prepend with a number jump C-o jump back C-i jump forward Folding zc: fold/close current tree zo: unfold/open current tree za: toggle fold Search and replace https://vim.fandom.com/wiki/Search_and_replace\nsingle buffer\n/pattern ?pattern :%s/old/new/g :%s/old/new/gc multiple files\nReferences Vim Cheat Sheet vi / vim graphical cheat sheet ","description":"my notes/cheatsheet on using vim.","id":20,"section":"posts","tags":["vim","editor"],"title":"Vim Notes","uri":"https://k4i.top/posts/vim-notes/"},{"content":"I\u0026rsquo;ve recently switched to org mode, now I write all my blogs in org mode (blog-src/content-org/), and export them to .md files (blog-src/content/) with ox-hugo.\nSo instead of editing .md files under content folder, now I write .org files stored under content-org folder.\nCreate new post Invoking org-capture-templates (SPC o c) function, and choose hugo post template, as shown in Figure 1\nFigure 1: creating new post with org-capture-template\nFront matter As in ox-hugo: Custom Front-matter Parameters, hugo front matters can be added like below:\n1 2 3 4 5 :PROPERTIES: :EXPORT_HUGO_CUSTOM_FRONT_MATTER: :key1 value1 :key2 value2 :EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :key3 value3 :EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :key4 value4 :END: some important front matters can be stored in your org capture template, here\u0026rsquo;s my template:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 (defun org-hugo-new-subtree-post-capture-template () \u0026#34;Returns `org-capture\u0026#39; template string for new Hugo post. See `org-capture-templates\u0026#39; for more information.\u0026#34; (let* (;; http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/ (date (format-time-string (org-time-stamp-format :long :inactive) (org-current-time))) (title (read-from-minibuffer \u0026#34;Post Title: \u0026#34;)) ;Prompt to enter the post title (fname (org-hugo-slug title))) (mapconcat #\u0026#39;identity `( ,(concat \u0026#34;\\n* TODO \u0026#34; title \u0026#34; :@cat:tag:\u0026#34;) \u0026#34;:PROPERTIES:\u0026#34; ,(concat \u0026#34;:EXPORT_HUGO_BUNDLE: \u0026#34; fname) \u0026#34;:EXPORT_FILE_NAME: index\u0026#34; ,(concat \u0026#34;:EXPORT_DATE: \u0026#34; date) ;Enter current date and time \u0026#34;:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :image \\\u0026#34;/images/icons/tortoise.png\\\u0026#34;\u0026#34; \u0026#34;:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :libraries \u0026#39;(mathjax)\u0026#34; \u0026#34;:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description \\\u0026#34;this is a description\\\u0026#34;\u0026#34; \u0026#34;:END:\u0026#34; \u0026#34;%?\\n\u0026#34;) \u0026#34;\\n\u0026#34;))) (with-eval-after-load \u0026#39;org-capture (setq hugo-content-org-dir \u0026#34;~/git-repo/blog/blog-src/content-org\u0026#34;) (add-to-list \u0026#39;org-capture-templates `(\u0026#34;pe\u0026#34; \u0026#34;Hugo Post (en)\u0026#34; entry (file ,(expand-file-name \u0026#34;all-posts.en.org\u0026#34; hugo-content-org-dir)) (function org-hugo-new-subtree-post-capture-template))) (add-to-list \u0026#39;org-capture-templates `(\u0026#34;pz\u0026#34; \u0026#34;Hugo Post (zh)\u0026#34; entry (file ,(expand-file-name \u0026#34;all-posts.zh.org\u0026#34; hugo-content-org-dir)) (function org-hugo-new-subtree-post-capture-template))) (add-to-list \u0026#39;org-capture-templates \u0026#39;(\u0026#34;p\u0026#34; \u0026#34;Hugo Post\u0026#34;))) Code Inline code with \u0026lsquo;=\u0026rsquo; or \u0026lsquo;~\u0026rsquo;: =echo 123=, ~echo 456~\nCode block with\n1 2 3 4 5 #+begin_src c int main() { return 0 } #+end_src Images Store all the images under $HUGO_BASE_DIR/static/ folder (except some generated images), so just include them using relative path from the org file.\nYou can add caption and name (for referencing purpose: as in figure 2) to an image.\nFigure 2: Gogpher\n1 2 3 4 #+CAPTION: Gogpher #+NAME: fig:gopher #+ATTR_HTML: :width 30% [[../static/images/icons/gopher001.png]] You can also paste images from clipboard with org-download1. I\u0026rsquo;ve bind C-M-y to paste images, and the pasted image will be stored under path ../static/images/posts/\u0026lt;Level-0-Header-Name\u0026gt;.\nYou can customize with the .dir-locals.el file:\n1 2 3 ((org-mode . ((org-download-timestamp . \u0026#34;\u0026#34;) (org-download-heading-lvl . 0) (org-download-image-dir . \u0026#34;../static/images/posts\u0026#34;)))) Math Support (with MathJax) We need to have MathJax library in our front matter.\n1 2 3 :PROPERTIES: :EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :libraries \u0026#39;(mathjax) :END: Inline formulas with \\$..\\$. This is inline math: \\(x^2 + y^2 = z^2 \\frac{1}{2}\\).\nDisplayed equations with \\$\\$..\\$\\$ or \\(\\LaTeX\\) encironments. This is displayed math:\nThe code:\n1 2 3 4 5 6 7 8 \\begin{equation}\\label{eq:1} \\begin{split} a \u0026amp;= b+c-d\\\\ \u0026amp;\\quad +e-f\\\\ \u0026amp;= g+h\\\\ \u0026amp;= i \\end{split} \\end{equation} will be rendered as:\n\\begin{equation}\\label{eq:1}\n\\begin{split}\na \u0026amp;= b+c-d\\\\\n\u0026amp;\\quad +e-f\\\\\n\u0026amp;= g+h\\\\\n\u0026amp;= i\n\\end{split}\n\\end{equation}\n{{\u0026lt; alert theme=\u0026ldquo;warning\u0026rdquo; \u0026gt;}}\nIt seems that zzo theme does not support math equation referencing and numbering yet?\n{{\u0026lt; /alert \u0026gt;}}\nDiagrams Plantuml use plantuml2 to draw, then C-c C-c to tangle the image manually (or just org export if you don\u0026rsquo;t need to customize any attributes), then you can add some attributes to the result (width, name, caption, etc.).\n1 2 3 4 5 6 7 8 9 #+begin_src plantuml :file \u0026#34;../static/images/posts/Writing-Guide-Org/first.svg\u0026#34; @startuml title Authentication Sequence Alice-\u0026gt;Bob: Authentication Request note right of Bob: Bob thinks about it Bob-\u0026gt;Alice: Authentication Response @enduml #+end_src Figure 3: this is first.svg\nyou can export ASCII diagrams by changing file extension to .txt (this will export diagram to a text file) or if you want to just include the ASCII diagram itself, set :results to verbatim.\n1 2 3 4 5 6 7 8 9 #+begin_src plantuml :results verbatim @startuml title Authentication Sequence Alice-\u0026gt;Bob: Authentication Request note right of Bob: Bob thinks about it Bob-\u0026gt;Alice: Authentication Response @enduml #+end_src 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Authentication Sequence ,-----. ,---. |Alice| |Bob| `--+--\u0026#39; `-+-\u0026#39; |Authentication Request | |-----------------------\u0026gt;| | | | | ,-------------------!. | | |Bob thinks about it|_\\ | | `---------------------\u0026#39; |Authentication Response | |\u0026lt;-----------------------| ,--+--. ,-+-. |Alice| |Bob| `-----\u0026#39; `---\u0026#39; Presentation Shortcodes zoo-docs3 on short codes\nto use shortcodes as you do in markdown, put it after #+html:. Like this:\n1 #+html: {{\u0026lt;/* gallery dir=\u0026#34;/image_dir/\u0026#34; /*/\u0026gt;}} Alert You can have alert like this:\n1 2 3 #+html: {{\u0026lt;/* alert theme=\u0026#34;info\u0026#34; dir=\u0026#34;ltr\u0026#34; */\u0026gt;}} theme could be one of: success, info, warning, danger #+html: {{\u0026lt;/* /alert */\u0026gt;}} this is a success. this is a info. this is a warning. this is a danger. Notice 1 2 3 #+html: {{\u0026lt;/* notice success \u0026#34;This is a success type of notice\u0026#34; */\u0026gt;}} notice could be success, info, warning, error. #+html: {{\u0026lt;/* /notice */\u0026gt;}} success notice. info notice. warning notice. error notice. Simple box 1 2 3 #+html: {{\u0026lt;/* box */\u0026gt;}} Plain text #+html: {{\u0026lt;/* /box */\u0026gt;}} Plain text Code in multiple language 1 2 3 4 5 6 7 8 9 10 11 12 #+html: {{\u0026lt;/* codes java javascript */\u0026gt;}} #+html: {{\u0026lt;/* code */\u0026gt;}} #+begin_src java System.out.Println(\u0026#34;Hello World!\u0026#34;); #+end_src #+html: {{\u0026lt;/* /code */\u0026gt;}} #+html: {{\u0026lt;/* code */\u0026gt;}} #+begin_src javascript console.log(\u0026#39;Hello World!\u0026#39;); #+end_src #+html: {{\u0026lt;/* /code */\u0026gt;}} #+html: {{\u0026lt;/* /codes */\u0026gt;}} java javascript 1 System.out.Println(\u0026#34;Hello World!\u0026#34;); 1 console.log(\u0026#39;Hello World!\u0026#39;); Tab 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #+html: {{\u0026lt;/* tabs Windows MacOS Ubuntu */\u0026gt;}} #+html: {{\u0026lt;/* tab */\u0026gt;}} *** Windows section #+begin_src javascript console.log(\u0026#39;Hello World!\u0026#39;); #+end_src #+html: {{\u0026lt;/* /tab */\u0026gt;}} #+html: {{\u0026lt;/* tab */\u0026gt;}} *** MacOS section Hello world! #+html: {{\u0026lt;/* /tab */\u0026gt;}} #+html: {{\u0026lt;/* tab */\u0026gt;}} *** Ubuntu section Great! #+html: {{\u0026lt;/* /tab */\u0026gt;}} #+html: {{\u0026lt;/* /tabs */\u0026gt;}} Windows MacOS Ubuntu Windows section 1 console.log(\u0026#39;Hello World!\u0026#39;); MacOS section Hello world!\nUbuntu section Great!\nExpand 1 2 3 #+html: {{\u0026lt;/* expand \u0026#34;Expand me\u0026#34; */\u0026gt;}} Some Markdown Contents #+html: {{\u0026lt;/* /expand */\u0026gt;}} Expand me Some Markdown Contents\n1 2 3 4 5 6 7 package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;hello sky!\u0026#34;) } video netease music need to allow third party cookies\n1 2 neteasemusic id=\u0026#34;1455273374\u0026#34; neteasemusic id=\u0026#34;8003580862\u0026#34; isList=\u0026#34;true\u0026#34; References 1 2 3 You can refer to something in the footnote like ox-hugo[fn:ox-hugo] * Footnotes [fn:ox-hugo] [[https://ox-hugo.scripter.co/][ox-hugo official site]] You can refer to something in the footnote like ox-hugo4\norg-download facilitates moving images from point A to B.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nplantuml official site\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nzzo-docs on shortcodes\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nox-hugo official site\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","description":"New writing/bloging guide, Now I blog in org mode!","id":21,"section":"posts","tags":["hugo","org"],"title":"Writing Guide (org + ox-hugo)","uri":"https://k4i.top/posts/writing-guide--org-plus-ox-hugo/"},{"content":"Basics Packages every go program is made up of packages, and it starts from: package main,\nfunc main()\npackages could be imported, and grouped together using parenthesis\n(\u0026ldquo;factored\u0026rdquo; import statements)\n1 2 import \u0026#34;fmt\u0026#34; import \u0026#34;math\u0026#34; same as:\n1 2 3 4 import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) Only capitalized names are exported, therefore after importing a package, you\ncan only reference its exported names.\nBasic Types 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math/cmplx\u0026#34; ) // bool // string // int int8 int16 int32 int 64 // uint uint8 uint16 uint32 uint64 unitptr // bytes // alias for uint8 // rune // alias for int32, represents a unicode code point // float32 float64 // complex64 complex128 var ( ToBe bool = false MaxInt uint64 = 1\u0026lt;\u0026lt;64 - 1 z complex128 = cmplx.Sqrt(-5 + 12i) ) func main() { fmt.Printf(\u0026#34;Type: %T Value: %v\\n\u0026#34;, ToBe, ToBe) fmt.Printf(\u0026#34;Type: %T Value: %v\\n\u0026#34;, MaxInt, MaxInt) fmt.Printf(\u0026#34;Type: %T Value: %v\\n\u0026#34;, z, z) } the int, uint, and uintptr types are usually 32 bits on 32-bit systems and 64\nbits on 64-bit systems.\nVariables Two ways to declare a variable:\nvar with or without initializer (implicitly initialized with zero value) package or function scope := short assignment statements only function scope must have initializers With an explicit initializer, no need to provide the type of the variable.\nApart from variables, there are constants, which:\ncan be declared in package or function level must have explicit initializers (also constants, value known at compile time) cannot be reassigned after initialization. Multiple var or const statements could be grouped together like imports.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // with initializer var i, j int = 1, 2 // omit type (type inference) var i, j = 1, 2 // short variable declarations (also type inference) a := 3 // int b := 3.14 // float64 c := 0.1 + 0.2i // constants const Pi = 3.14 // numeric constants are high-precision values const ( Big = 1 \u0026lt;\u0026lt; 100 // 1 \u0026lt;\u0026lt; 100 Small = Big \u0026gt;\u0026gt; 99 // 2 ) Functions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // type comes after variable name. func add(x int, y int) int { return x + y; } // consecutive named function parameters share a type func add(x, y int) int { return x + y; } // function can return any number of results func swap(x, y string) (string, string) { return y, x } // naked return: a return without arguments, can harm readability in longer // functions func split(sum int) (x, y int) { x = sum * 4 / 9 y = sum - x return } Methods Go has no classes, but you can define methods on types. A method is a\nfunction with a special receiver argument.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) type Vertex struct { X, Y float64 } func (v Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } func (v *Vertex) Scale(f float64) { v.X = v.X * f v.Y = v.Y * f } func main() { v := Vertex{3, 4} v.Scale(10) fmt.Println(v.Abs()) // 50 } The method and its receiver type must be defined in the same package.\n1 type MyFloat float64 // define your own float64 type Pointer Receivers or Arguments Receiver is just another argument, it can be nil.\nIf you wanna modify or not copying an argument, you should pass pointer\ntypes.\nIn general, all methods on a given type should have either value or pointer\nreceivers, but not a mixture of both.\nType conversions T(v) converts the value v to the type T.\n1 2 3 i := 42 f := float64(i) u := uint(f) no implicit conversion in go\nControl FLow For Go only has for loop, no while loop, each for loop has three basic\ncomponents:\ninit statement condition statement post statement (execute after each iteration) no parentheses, but curly braces {} are always required.\n1 2 3 4 5 6 7 8 9 10 11 package main import \u0026#34;fmt\u0026#34; func main() { sum := 0 for i := 0; i \u0026lt; 10; i++ { sum += i } fmt.Println(sum) } any of the three components can be omitted, if you only have condition or\nnothing left, semicolon can be omitted.\n1 2 3 4 5 6 7 8 9 sum := 0 // just like while loop for sum \u0026lt; 1000 { sum++ } for { // loop forever } you can continue or break inside a loop\nIf like for loops, no parentheses (), but curly braces {} are required\ncan have init statement\n1 2 3 4 5 6 7 if i := 0; i != 0 { fmt.Println(\u0026#34;what?\u0026#34;) } else if i == 0 { fmt.Println(\u0026#34;got 0\u0026#34;) } else { fmt.Println(\u0026#34;no way here\u0026#34;) } Switch shorter way to write a sequence of if-else statements. no break or default fallthrough in switch cases do need not to be constants or integers. also support init statements like if and for. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;runtime\u0026#34; ) func main() { fmt.Print(\u0026#34;Go runs on \u0026#34;) switch os := runtime.GOOS; os { case \u0026#34;darwin\u0026#34;: fmt.Println(\u0026#34;OS X.\u0026#34;) case \u0026#34;linux\u0026#34;: fmt.Println(\u0026#34;Linux.\u0026#34;) default: // freebsd, openbsd, // plan9, windows... fmt.Printf(\u0026#34;%s.\\n\u0026#34;, os) } } you can use fallthrough keyword to fallthrough mutiple statements in a single case: omit condition is the same as switch true (clean way to write long\nif-then-else chains) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { t := time.Now() // same as: switch true switch { // default will always be last evaluated default: fmt.Println(\u0026#34;default\u0026#34;) case t.Hour() \u0026lt; 12: fmt.Println(\u0026#34;morning\u0026#34;) case t.Hour() \u0026lt; 17, true: // like useing \u0026#39;||\u0026#39;, match any fmt.Println(\u0026#34;afternoon\u0026#34;) fallthrough case false: // even condition is false, fallthrough do fallthrough here fmt.Println(\u0026#34;Are you ok?\u0026#34;) // cannot put fallthrough in the last case or default // fallthrough } } Defer a defer statement defers the execution of a function until the surrounding\nfunction returns.\narguments evaluated immediately, but function call is not executed until the\nsurrounding function returns.\ndefered function calls are pushed onto a stack, so executed in last-in-first-outo order\n1 2 3 4 5 6 7 8 9 10 11 12 13 package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;counting\u0026#34;) for i := 0; i \u0026lt; 10; i++ { defer fmt.Println(i) } fmt.Println(\u0026#34;done\u0026#34;) } Advanced types Pointers A pointer holds the memory address of a value.\nGo has no pointer arithmetic.\n1 2 3 4 var p *int i := 42 p = \u0026amp;i // referencing fmt.Println(*p) // dereferencing Structs can be defined inside functions\naccess struct fileds using a dot\nstruct fields can also be accessed through a struct pointer, without explicit\ndereferencing.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \u0026#34;fmt\u0026#34; func main() { type Vertex struct { X int Y int } v := Vertex{1, 2} p := \u0026amp;v // pointer to a struct v.X = 4 (*p).Y = 6 // dereference the struct first - cumbersum p.Y = 5 // without explicit dereference fmt.Println(v) } struct literal\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \u0026#34;fmt\u0026#34; type Vertex struct { X, Y int } func main() { var ( v1 = Vertex{1, 2} // {1, 2}, has type Vertex v2 = Vertex{Y: 1} // {0, 1} v3 = Vertex{} // {0, 0} p = \u0026amp;Vertex{3, 4} // has type *Vertex ) // {1 2} {0 1} {0 0} \u0026amp;{3 4} fmt.Println(v1, v2, v3, p) } Arrays [n]T is an array of n values of type T.\nArrays cannot be resized\n1 2 3 4 5 6 7 8 package main import \u0026#34;fmt\u0026#34; func main() { // [1 2 0] fmt.Println([3]int{1, 2}) } Slices A slice is a dynamically-sezed, flexible view into the elements of an array.\n[n]T is an array of type T and length n.\n[]T is a slice of type T, it does not store any data, it just describes a\nsection of the underlying array.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \u0026#34;fmt\u0026#34; func main() { // array literal v := [5]int{1, 2} // slice literal // v := []int{1, 2, 0, 0, 0} v1 := v[1:3] fmt.Println(cap(v)) // 5 fmt.Println(cap(v1)) // 4, counting from first element in the slice fmt.Println(len(v1)) // 2 fmt.Println(v1) // [2 0] } When slicing, you may omit the high or low bounds to use their defaults\ninstead (0 for low, len for high)\nmaking a slice\n1 2 3 4 a := make([]int, 5) // len(a)=5, cap(a)=5 b := make([]int, 0, 5) // len(b)=0, cap(b)=5 b = b[:cap(b)] // len(b)=5, cap(b)=5 b = b[1:] // len(b)=4, cap(b)=4 appending to a slice\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 func printSlice(s []int) { fmt.Printf(\u0026#34;len=%d, cap=%d, addr=%p, %v\\n\u0026#34;, len(s), cap(s), \u0026amp;s, s) } func main() { var s []int printSlice(s) // len=0, cap=0 s = append(s, 0) printSlice(s) // len=1, cap=1 s = append(s, 1) printSlice(s) // len=2, cap=2 s = append(s, 1) printSlice(s) // len=3, cap=4 s = append(s, 1, 2, 3) printSlice(s) // len=6, cap=8 } if the backing array is too small to fit all the given values a bigger array\nwill be allocated. The returned slice will point to the newly allocated\narray.\nrange\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import \u0026#34;fmt\u0026#34; var pow = []int{1, 2, 4, 8, 16, 32, 64, 128} func main() { // for i, _ := range pow // for i := range pow // for _, v := range pow for i, v := range pow { fmt.Printf(\u0026#34;2**%d = %d\\n\u0026#34;, i, v) } } Maps 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import \u0026#34;fmt\u0026#34; type Vertex struct { X, Y int } func main() { var v = map[int]Vertex{ 3: {1, 2}, } // x := v[2] x, ok := v[2] // ok is false if !ok { fmt.Println(\u0026#34;no v[2]\u0026#34;) fmt.Printf(\u0026#34;x is the zero value of Vertex, which is %v\\n\u0026#34;, x) } fmt.Println(v[3]) // insert or update an element v[3] = Vertex{3, 4} // delete a key delete(v, 3) } Function Type Functions are values too, they can be used as funtion arguments and return\nvalues.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \u0026#34;fmt\u0026#34; func f(fn func(int) string, x int) string { return fn(x) } func main() { myF := func(x int) string { return \u0026#34;xy\u0026#34; } fmt.Println(f(myF, 3)) } Receiver is actually the first argument of a method:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) type Vertex struct { X, Y float64 } func (v Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } func (v *Vertex) Scale(f float64) { v.X = v.X * f v.Y = v.Y * f } func f(fn func(Vertex) float64, v *Vertex) { fmt.Println(fn(*v)) } func f2(fn func(*Vertex) float64, v *Vertex) { fmt.Println(fn(v)) } func main() { v := Vertex{3, 4} f(Vertex.Abs, \u0026amp;v) f2((*Vertex).Abs, \u0026amp;v) // these two are different function // receiver is actually the first argument of method fmt.Printf(\u0026#34;%T\\n\u0026#34;, (*Vertex).Scale) fmt.Printf(\u0026#34;%T\\n\u0026#34;, v.Scale) } A closure is a function value that references variables from outside its\nbody.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import \u0026#34;fmt\u0026#34; func adder() func(int) int { sum := 0 return func(x int) int { sum += x return sum } } func main() { pos, neg := adder(), adder() for i := 0; i \u0026lt; 10; i++ { fmt.Println( pos(i), neg(-2*i), ) } } Interfaces An interface type is a set of method signatures.\nAn interface value is any type that has implemented those methods\n(implemented implicitly, no \u0026ldquo;implements\u0026rdquo; keyword).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) type Abser interface { Abs() float64 } func main() { var a Abser f := MyFloat(-math.Sqrt2) v := Vertex{3, 4} a = f // a MyFloat implements Abser a = \u0026amp;v // a *Vertex implements Abser // In the following line, v is a Vertex (not *Vertex) // and does NOT implement Abser. // a = v fmt.Println(a.Abs()) } type MyFloat float64 func (f MyFloat) Abs() float64 { if f \u0026lt; 0 { return float64(-f) } return float64(f) } type Vertex struct { X, Y float64 } func (v *Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } printing value and type of an interface is the same as printing its\nunderlying value and type.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package main import \u0026#34;fmt\u0026#34; type I interface { M() } type T struct { S string } func (t *T) M() { if t == nil { fmt.Println(\u0026#34;\u0026lt;nil\u0026gt;\u0026#34;) return } fmt.Println(t.S) } func main() { var i I var t *T i = t describe(i) i.M() i = \u0026amp;T{\u0026#34;hello\u0026#34;} describe(i) i.M() } func describe(i I) { fmt.Printf(\u0026#34;(%v, %T)\\n\u0026#34;, i, i) } The interface that specifies zero methods is known as the empty interface.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import \u0026#34;fmt\u0026#34; func main() { var i interface{} describe(i) i = 42 describe(i) i = \u0026#34;hello\u0026#34; describe(i) } func describe(i interface{}) { fmt.Printf(\u0026#34;(%v, %T)\\n\u0026#34;, i, i) } Type assertions try converting an interface to its underlying value of type T: s := i.(T)\nhere T must implement methods of i.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \u0026#34;fmt\u0026#34; func main() { var i interface{} = \u0026#34;hello\u0026#34; s := i.(string) fmt.Println(s) s, ok := i.(string) fmt.Println(s, ok) f, ok := i.(float64) fmt.Println(f, ok) f = i.(float64) // panic fmt.Println(f) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package main import \u0026#34;fmt\u0026#34; type Vertex struct { x, y int } // value of type *Vertex can also call method M() func (Vertex) M() {} func main() { var v Vertex var i interface { M() } = v // argument here must implement methods of the interface t, ok := i.(*Vertex) des(t) // *main.Vertex, \u0026lt;nil\u0026gt; chk(t, ok) t2, ok := i.(Vertex) des(t2) // main.Vertex, {0, 0} chk(t2, ok) } func des(v interface{}) { fmt.Printf(\u0026#34;%T, %v\\n\u0026#34;, v, v) } func chk(t interface{}, ok bool) { if !ok { fmt.Println(\u0026#34;type not correct, zero value returned:\u0026#34;, t) } else { fmt.Println(\u0026#34;type correct, value is:\u0026#34;, t) } } type switches 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import \u0026#34;fmt\u0026#34; func do(i interface{}) { switch v := i.(type) { case int: fmt.Printf(\u0026#34;Twice %v is %v\\n\u0026#34;, v, v*2) case string: fmt.Printf(\u0026#34;%q is %v bytes long\\n\u0026#34;, v, len(v)) default: // here v has the same type as i fmt.Printf(\u0026#34;I don\u0026#39;t know about type %T!\\n\u0026#34;, v) } } func main() { do(21) do(\u0026#34;hello\u0026#34;) do(true) } Zero values variables declared without an explicit initial value are given their zero\nvalue.\n0 for numeric types false for the boolean type \u0026quot;\u0026quot; (the empty string) for the strings {\u0026lt;default field values\u0026gt;} for structs nil for slice (len and cap of a nil slice is 0) nil for maps nil for interfaces nil for pointers Common Interfaces Error When fmt prints values, it looks for the error interface first:\n1 2 3 type error interface { Error() string } if the interface value is not \u0026lt;nil\u0026gt;, the Error() method will be invoked by\nfmt to get the error string.\n1 2 3 4 5 6 i, err := strconv.Atoi(\u0026#34;42\u0026#34;) if err != nil { fmt.Printf(\u0026#34;couldn\u0026#39;t convert number: %v\\n\u0026#34;, err) return } fmt.Println(\u0026#34;Converted integer:\u0026#34;, i) Do not print the interface value in the Error() method directly, it will cause\ninfinite loop.\n1 2 3 4 5 6 7 type ErrNegativeSqrt float64 func (e ErrNegativeSqrt) Error() string { // do not print e directly, infinite loop here // fmt.Println(e) return fmt.Sprintln(\u0026#34;cannot Sqrt negative number: \u0026#34;, float64(e)) } Reader the io.Reader interface has a Read method:\n1 func (T) Read(b []byte) (n int, err error) read populates the given byte slice with data and returns the number of bytes\npopulated and an error value.\nit returns an io.EOF error when the stream ends.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;io\u0026#34; \u0026#34;strings\u0026#34; ) func main() { r := strings.NewReader(\u0026#34;Hello, Reader!\u0026#34;) b := make([]byte, 8) for { n, err := r.Read(b) fmt.Printf(\u0026#34;n = %v err = %v b = %v\\n\u0026#34;, n, err, b) fmt.Printf(\u0026#34;b[:n] = %q\\n\u0026#34;, b[:n]) if err == io.EOF { break } } } Image image.Image defines the Image interface\n1 2 3 4 5 type Image interface { ColorModel() color.Model Bounds() Rectangle At(x, y int) color.Color } Goroutines a goroutine is a lightweight thread managed by the Go runtime.\nChannels By default, sends and receives block until the other side is ready. This\nallows goroutines to synchronize without explicit locks or condition\nvariables.\nChannels aren\u0026rsquo;t like files, you don\u0026rsquo;t usually need to close them. Closing is\nonly necessary when the receiver must be told there are no more values\ncoming, such as to terminate a range loop.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package main import \u0026#34;fmt\u0026#34; func fib(n int, c chan int) { a, b := 0, 1 for i := 0; i \u0026lt; n; i++ { c \u0026lt;- a a, b = b, a+b } close(c) } func main() { c := make(chan int) go fib(10, c) for x := range c { fmt.Println(x) } // \u0026#34;ok\u0026#34; is false if there are: // 1. no more values to receive // 2. and the channel is closed // x, ok := \u0026lt;- c } Select select statement lets a goroutine wait on multiple communication\noperations.\nselect blocks until one of its cases can run (by adding a default case,\nit won\u0026rsquo;t block). It chooses one at random if multiple are ready.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package main import \u0026#34;fmt\u0026#34; func fibonacci(c, quit chan int) { x, y := 0, 1 for { select { case c \u0026lt;- x: x, y = y, x+y case \u0026lt;-quit: fmt.Println(\u0026#34;quit\u0026#34;) return } } } func main() { c := make(chan int) quit := make(chan int) go func() { for i := 0; i \u0026lt; 10; i++ { fmt.Println(\u0026lt;-c) } quit \u0026lt;- 0 }() fibonacci(c, quit) } Mutex sync.Mutex provides two methods: Lock and Unlock\n1 2 3 4 5 6 7 8 9 10 11 12 // SafeCounter is safe to use concurrently. type SafeCounter struct { mu sync.Mutex v map[string]int } func (c *SafeCounter) Value(key string) int { c.mu.Lock() // Lock so only one goroutine at a time can access the map c.v. defer c.mu.Unlock() return c.v[key] } Practice Sqrt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import \u0026#34;fmt\u0026#34; func Sqrt(x float64) (res float64) { res = 1. diff := 1. for diff \u0026gt; 1e-5 || diff \u0026lt; -1e-5 { diff = (res*res - x) / (2 * res) res -= diff } return } func main() { fmt.Println(Sqrt(4)) } WordCount 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import ( \u0026#34;strings\u0026#34; \u0026#34;golang.org/x/tour/wc\u0026#34; ) func WordCount(s string) (m map[string]int) { m = make(map[string]int) for _, x := range strings.Fields(s) { m[x]++ } return m } func main() { wc.Test(WordCount) } Fibonacci closure 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import \u0026#34;fmt\u0026#34; // fibonacci is a function that returns // a function that returns an int. func fibonacci() func() int { a, b := 0, 1 return func() int { ret := a a, b = b, a + b return ret } } func main() { f := fibonacci() for i := 0; i \u0026lt; 10; i++ { fmt.Println(f()) } } Sqrt with Error Handling 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) type ErrNegativeSqrt float64 func (e ErrNegativeSqrt) Error() string { // float64(e) here is important // fmt.Sprint(e) will cause infinite loop! return fmt.Sprint(\u0026#34;cannot Sqrt negative number:\u0026#34;, float64(e)) } func Sqrt(x float64) (float64, error) { if x \u0026lt; 0 { return x, ErrNegativeSqrt(x) } return math.Sqrt(x), nil } func main() { fmt.Println(Sqrt(2)) fmt.Println(Sqrt(-2)) } rot13Reader 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( \u0026#34;io\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; ) type rot13Reader struct { r io.Reader } func (rot13reader rot13Reader) Read(b []byte) (int, error) { n, err := rot13reader.r.Read(b) if err != nil { return 0, io.EOF } for i := 0; i \u0026lt; n; i++ { switch c := b[i]; { case c \u0026gt;= \u0026#39;A\u0026#39; \u0026amp;\u0026amp; c \u0026lt;= \u0026#39;Z\u0026#39;: b[i] = \u0026#39;A\u0026#39; + (b[i]-\u0026#39;A\u0026#39;+13)%26 case c \u0026gt;= \u0026#39;a\u0026#39; \u0026amp;\u0026amp; c \u0026lt;= \u0026#39;z\u0026#39;: b[i] = \u0026#39;a\u0026#39; + (b[i]-\u0026#39;a\u0026#39;+13)%26 } } return n, nil } func main() { s := strings.NewReader(\u0026#34;Lbh penpxrq gur pbqr!\u0026#34;) r := rot13Reader{s} io.Copy(os.Stdout, \u0026amp;r) } Implement Image interface 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import ( \u0026#34;image\u0026#34; \u0026#34;image/color\u0026#34; \u0026#34;golang.org/x/tour/pic\u0026#34; ) type Image struct { w, h int } func (img Image) ColorModel() color.Model { return color.RGBAModel } func (img Image) Bounds() image.Rectangle { return image.Rect(0, 0, img.w, img.h) } func (img Image) At(x, y int) color.Color { return color.RGBA{uint8(x + y), uint8(x + y), 255, 255} } func main() { m := Image{100, 100} pic.ShowImage(m) } Web Crawler 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;sync\u0026#34; ) type Fetcher interface { // Fetch returns the body of URL and // a slice of URLs found on that page. Fetch(url string) (body string, urls []string, err error) } type url2Dep struct { mu sync.Mutex mp map[string]int } func (u *url2Dep) insertUrl(url string, dep int) { u.mu.Lock() defer u.mu.Unlock() u.mp[url] = dep } func (u *url2Dep) getDep(url string) (int, bool) { u.mu.Lock() defer u.mu.Unlock() dep, ok := u.mp[url] return dep, ok } // Crawl uses fetcher to recursively crawl // pages starting with url, to a maximum of depth. func Crawl(u *url2Dep, url string, depth int, fetcher Fetcher) { defer wg.Done() if depth \u0026lt;= 0 { return } if dep, ok := u.getDep(url); !ok || dep \u0026lt; depth { u.insertUrl(url, depth) } else { fmt.Printf(\u0026#34;visited: %s\\n\u0026#34;, url) return } body, urls, err := fetcher.Fetch(url) if err != nil { fmt.Println(err) return } fmt.Printf(\u0026#34;found: %s %q\\n\u0026#34;, url, body) for _, nextUrl := range urls { wg.Add(1) go Crawl(u, nextUrl, depth-1, fetcher) } } var wg sync.WaitGroup func main() { u := url2Dep{mp: make(map[string]int)} wg.Add(1) go Crawl(\u0026amp;u, \u0026#34;https://golang.org/\u0026#34;, 4, fetcher) wg.Wait() } // fakeFetcher is Fetcher that returns canned results. type fakeFetcher map[string]*fakeResult type fakeResult struct { body string urls []string } func (f fakeFetcher) Fetch(url string) (string, []string, error) { if res, ok := f[url]; ok { return res.body, res.urls, nil } return \u0026#34;\u0026#34;, nil, fmt.Errorf(\u0026#34;not found: %s\u0026#34;, url) } // fetcher is a populated fakeFetcher. var fetcher = fakeFetcher{ \u0026#34;https://golang.org/\u0026#34;: \u0026amp;fakeResult{ \u0026#34;The Go Programming Language\u0026#34;, []string{ \u0026#34;https://golang.org/pkg/\u0026#34;, \u0026#34;https://golang.org/cmd/\u0026#34;, }, }, \u0026#34;https://golang.org/pkg/\u0026#34;: \u0026amp;fakeResult{ \u0026#34;Packages\u0026#34;, []string{ \u0026#34;https://golang.org/\u0026#34;, \u0026#34;https://golang.org/cmd/\u0026#34;, \u0026#34;https://golang.org/pkg/fmt/\u0026#34;, \u0026#34;https://golang.org/pkg/os/\u0026#34;, }, }, \u0026#34;https://golang.org/pkg/fmt/\u0026#34;: \u0026amp;fakeResult{ \u0026#34;Package fmt\u0026#34;, []string{ \u0026#34;https://golang.org/\u0026#34;, \u0026#34;https://golang.org/pkg/\u0026#34;, }, }, \u0026#34;https://golang.org/pkg/os/\u0026#34;: \u0026amp;fakeResult{ \u0026#34;Package os\u0026#34;, []string{ \u0026#34;https://golang.org/\u0026#34;, \u0026#34;https://golang.org/pkg/\u0026#34;, }, }, } ","description":"This is my notes on learning golang.","id":22,"section":"posts","tags":["golang"],"title":"Golang Notes","uri":"https://k4i.top/posts/golang-notes/"},{"content":" \u0026#x1f6a9; This Site Generated using Hugo, source code here: blog-src, and the theme is forked (my fork) from: hugo-theme-zzo.\nBTW, instead of writing .md files, I keep all my blogs in .org files (stored inside blog-src/content-org), and export them to .md files with ox-hugo.\n\u0026#x1f305; Daily Life @HIT C/C++, Golang, Python, ASM Arch, Emacs, VSCode CTF, ACM \u0026#x1f48c; Contact Me Email: sky_io@outlook.com WeChat: sky_bro Facebook: Kaiyu Shi Twitter: KaiyuShi GPG Pub: Kyle.asc (Key ID: F4CD0E4A366165D162E6B6CE7D36AE6055B060A6) keybase: skybro \u0026#x1f414; My Friends TheSong, 路人枭, wxk\n","description":"About K4i","id":23,"section":"","tags":null,"title":"About","uri":"https://k4i.top/about/"},{"content":"Smart pointer is a practice of RAII (Resource Acquisition is Initialization), we use a smart pointer to manage memory allocated on the heap. (here the \u0026ldquo;resource\u0026rdquo; is the allocated heap memory)\nwhy better not use raw pointers declaration doesn\u0026rsquo;t indicate whether it points to an array or a single object (delete or delete []) you don\u0026rsquo;t know where or not you should delete it after using it (ownership is unclear) doesn\u0026rsquo;t know where you should delete it or close it (what\u0026rsquo;s the right deleter) what if you cannot delete it (exception occurred) or mistakenly delete it multiple times (double free) no way to tell if a pointer dangles (not set to 0 automatically after being deleted) auto_ptr (deprecated since c++11, removed since c++17) now deprecated.\nborn in C++1998 (don\u0026rsquo;t have move semantics back then), copying an auto_ptr sets it to null.\nSo there are many usage restrictions (you can only move it, cannot actually copy it), it was not possible to store auto_ptr in containers.\nimplement an auto_ptr 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 template\u0026lt;typename T\u0026gt; class my_autoptrtr { private: T* ptr; public: explicit my_autoptrtr(T* p): ptr(p) {} ~my_autoptrtr() { delete ptr; } // no move semantics, so copy constructer have to move other object -- wrong semantic explicit my_autoptrtr(my_autoptrtr\u0026amp; other): ptr(other.ptr) { other.ptr = nullptr; } my_autoptrtr\u0026lt;T\u0026gt;\u0026amp; operator=(my_autoptrtr\u0026lt;T\u0026gt;\u0026amp; other) { if (this != \u0026amp;other) { // no need to assign if same object // delete ptr; // ptr = other.ptr; // other.ptr = nullptr; reset(other.release()); } return *this; } T\u0026amp; operator*() const { return *ptr; } T* operator-\u0026gt;() const { return ptr; } T* get() const { return ptr; } T* release() { T* p = ptr; ptr = nullptr; return p; } void reset(T* p = nullptr) { if (p != ptr) { delete ptr; ptr = p; } } }; unique_ptr Item 18: Use std::unique_ptr for exclusive-ownership resource management\nunique_ptr is move-only (no copy constructor - deleted), because this ownership is unique / for only one object.\nIf you really need to transfer the ownership of this resource to another pointer, move it.\nUsually the responsibility is simply \u0026rsquo;to call delete'.\nExample usage There\u0026rsquo;re two situations:\nWhen making a pointer pointing to a single object, make_unique will call the suitable constructor based on the given arguments. When making a pointer pointing to an array of objects, make_unique will use the default constructor. (if not exists, compilation error) 1 2 3 4 unique_ptr\u0026lt;int\u0026gt; p1 = make_unique\u0026lt;int\u0026gt;(3); // 3 unique_ptr\u0026lt;int[]\u0026gt; p2 = make_unique\u0026lt;int[]\u0026gt;(3); // {?, ?, ?} unique_ptr\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; p3 = make_unique\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;(3, 1); // {1, 1, 1}, use constructor vector\u0026lt;int\u0026gt;(3, 1) unique_ptr\u0026lt;vector\u0026lt;int\u0026gt;[]\u0026gt; p4 = make_unique\u0026lt;vector\u0026lt;int\u0026gt;[]\u0026gt;(3); // {{}, {}, {}}, use default constructor Implement a unique_ptr (simplified) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 template \u0026lt;typename T\u0026gt; class my_unique_ptr { private: T* ptr; public: my_unique_ptr() : ptr(nullptr) {} explicit my_unique_ptr(T* p) : ptr(p) {} ~my_unique_ptr() { if (ptr) delete ptr; } my_unique_ptr(my_unique_ptr\u0026amp; other) = delete; my_unique_ptr\u0026lt;T\u0026gt;\u0026amp; operator=(my_unique_ptr\u0026lt;T\u0026gt;\u0026amp; other) = delete; my_unique_ptr(my_unique_ptr\u0026amp;\u0026amp; other): ptr(other.release()) {} my_unique_ptr\u0026lt;T\u0026gt;\u0026amp; operator=(my_unique_ptr\u0026lt;T\u0026gt;\u0026amp;\u0026amp; other) { reset(other.release()); return *this; } T\u0026amp; operator*() const { return *ptr; } T* operator-\u0026gt;() const { return ptr; } bool operator==(const my_unique_ptr\u0026lt;T\u0026gt;\u0026amp; other) { return ptr == other.ptr; } explicit operator bool() const { return ptr; } T* get() const { return ptr; } T* release() { T* p = ptr; ptr = nullptr; return p; } void reset(T* p = nullptr) { if (p != ptr) { delete ptr; ptr = p; } } }; shared_ptr Item\nweak_ptr it allows you to locate an object if it’s still around, but doesn’t keep it around if nothing else needs it.\nenable_shared_from_this 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class C: public enable_shared_from_this\u0026lt;C\u0026gt; { public: void print() { cout \u0026lt;\u0026lt; \u0026#34;C::print\u0026#34; \u0026lt;\u0026lt; endl; } ~C() { cout \u0026lt;\u0026lt; \u0026#34;C destructed!\u0026#34; \u0026lt;\u0026lt; endl; } }; int main(int argc, char const *argv[]) { make_shared\u0026lt;C\u0026gt;()-\u0026gt;print(); cout \u0026lt;\u0026lt; make_shared\u0026lt;C\u0026gt;()-\u0026gt;shared_from_this().use_count() \u0026lt;\u0026lt; endl; // 2 cout \u0026lt;\u0026lt; \u0026#34;done!\u0026#34; \u0026lt;\u0026lt; endl; } Implement a simple shared_ptr 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 template \u0026lt;typename T\u0026gt; class my_shared_ptr { private: T* ptr; int* cnt; // reference count public: my_shared_ptr(T* p) : ptr(p), cnt(new int(1)) {} my_shared_ptr(const my_shared_ptr\u0026lt;T\u0026gt;\u0026amp; other) : ptr(other.ptr), cnt(other.cnt) { ++(*cnt); } my_shared_ptr\u0026lt;T\u0026gt;\u0026amp; operator=(const my_shared_ptr\u0026lt;T\u0026gt;\u0026amp; other) { if (ptr != other.ptr) { if (--(*cnt) == 0) { delete ptr; delete cnt; } ptr = other.ptr; cnt = other.cnt; ++(*cnt); } return *this; } T* operator-\u0026gt;() { return ptr; } T\u0026amp; operator*() { return *ptr; } int getcnt() { return *cnt; } ~my_shared_ptr() { if (--(*cnt) == 0) { delete ptr; ptr = nullptr; delete cnt; cnt = nullptr; } } }; use make_* to create smart pointers custom deleter Smart Pointers allow you to write your own custom deleters (a function), instead of using the default deleter inside which uses delete p; or delete [] p;.\nUsing make_* to create smart pointers is a good practice, but when you use custom deleters, it means that you\u0026rsquo;ll need to create the raw pointer yourself too.\nThis can be resolved by creating you own make functions, check the examples below:\ntaken from ref: shared_ptr and FILE for wrapping cstdio (update: also dlfcn.h)\na shared_ptr for fopen()/fclose()\n1 2 3 4 5 6 std::shared_ptr\u0026lt;std::FILE\u0026gt; make_shared_file(const char * filename, const char * flags) { std::FILE * const fp = std::fopen(filename, flags); // because we cannot fclose a null pointer return fp ? std::shared_ptr\u0026lt;std::FILE\u0026gt;(fp, std::fclose) : std::shared_ptr\u0026lt;std::FILE\u0026gt;(); } a unique_ptr for fopen()/fclose() (unique_ptr won\u0026rsquo;t call deleter on a null pointer)\n1 2 3 4 5 typedef std::unique_ptr\u0026lt;std::FILE, int (*)(std::FILE *)\u0026gt; unique_file_ptr; unique_file_ptr make_unique_file(const char * filename, const char * flags) { return unique_file_ptr(std::fopen(filename, flags), std::fclose); } a unique_ptr for dlopen()/dlclose()\n1 2 3 4 5 6 typedef std::unique_ptr\u0026lt;void, int (*)(void *)\u0026gt; unique_library_ptr; static unique_library_ptr make_library(const char * filename, int flags) { return unique_library_ptr(dlopen(filename, flags), dlclose); } inheritance shared_ptr\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class A { int x; }; class A2 { int x; }; class B : public A, public A2 {}; int main(int argc, char const *argv[]) { shared_ptr\u0026lt;B\u0026gt; ptrB = make_shared\u0026lt;B\u0026gt;(); // 0x55b4e10ecf20 cout \u0026lt;\u0026lt; ptrB.get() \u0026lt;\u0026lt; endl; shared_ptr\u0026lt;A2\u0026gt; ptrA = ptrB; // 0x55b4e10ecf24 cout \u0026lt;\u0026lt; ptrA.get() \u0026lt;\u0026lt; endl; return 0; } unique_ptr\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class A { int x; }; class A2 { int x; }; class B : public A, public A2 {}; int main(int argc, char const *argv[]) { unique_ptr\u0026lt;B\u0026gt; ptrB = make_unique\u0026lt;B\u0026gt;(); cout \u0026lt;\u0026lt; ptrB.get() \u0026lt;\u0026lt; endl; // free(): invalid pointer // unique_ptr\u0026lt;A2\u0026gt; ptrA = move(ptrB); unique_ptr\u0026lt;A\u0026gt; ptrA = move(ptrB); cout \u0026lt;\u0026lt; ptrA.get() \u0026lt;\u0026lt; endl; return 0; } Rules of thumb treat smart pointers just like raw pointer types pass by value return by value (of course) passing a pointer by reference is usually a code smell, same goes for smart pointers Refs shared_ptr and FILE for wrapping cstdio (update: also dlfcn.h) Scott Meyers EMC++ Item 18 CppCon 2019: Arthur O\u0026rsquo;Dwyer \u0026ldquo;Back to Basics: Smart Pointers\u0026rdquo; ","description":"","id":24,"section":"posts","tags":["C++","Smart Pointer"],"title":"C++ Smart Pointers","uri":"https://k4i.top/posts/c++-smart-pointers/"},{"content":"This is a note on setting up wordpress on my arch.\nThings you\u0026rsquo;ll need php, nginx, mysql (mariadb) etc sudo pacman -S php php-{fpm,gpsql,gd,cgi} uwsgi-plugin-php sudo pacman -S mariadb libmariadbclient mariadb-clients sudo pacman -S nginx wordpress prefer not using sudo pacman -S wordpress\nWhile it is easier to let pacman manage updating your WordPress install, this is not necessary. WordPress has functionality built-in for managing updates, themes, and plugins. download: wget https://wordpress.org/latest.tar.gz extract: tar -xf latest.tar.gz chown to your nginx worker: ps aux | grep nginx to see your worker\u0026rsquo;s name sudo chown -R http:http wordpress move to somewhere like: sudo mv wordpress /srv/http/mysite.com, sudo mv wordpress /var/www/html/mysite.com Setup database enable startup: sudo systemctl enable mysqld.service start now: sudo systemctl start mysqld.service to make your MariaDB installation secure: sudo mysql_secure_installation (yes to all) mysql -u root -p CREATE DATABASE mysite; CREATE USER \u0026lsquo;mysiteadmin\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; IDENTIFIED BY \u0026lsquo;password\u0026rsquo;; GRANT ALL PRIVILEGES ON mysite.* TO \u0026lsquo;mysiteadmin\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; IDENTIFIED BY \u0026lsquo;password\u0026rsquo;; FLUSH PRIVILEGES; EXIT; Setup php enable startup: sudo systemctl enable php-fpm start now: sudo systemctl start php-fpm sudo vim /etc/php/php.ini uncomment lines to enable some extensions extension=gd extension=mysqli extension=pgsql you may need to restart php-fpm: sudo systemctl restart php-fpm Setup nginx enable startup: sudo systemctl enable nginx\nstart now: sudo systemctl start nginx\nsudo vim /etc/nginx/nginx.conf\ncomment or delete servers that you don\u0026rsquo;t need at the end of http block add: include sites-enablesd/* sudo mkdir /etc/nginx/{sites-enabled,sites-available}\nadd server in sudo vim /etc/nginx/sites-available/mysite.com\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 server { listen 80; listen [::]:80; root /srv/http/mysite.com; index index.php index.html index.htm; server_name mysite.com; error_log /var/log/nginx/mysite.com_error.log; access_log /var/log/nginx/mysite.com_access.log; client_max_body_size 100M; location / { try_files $uri $uri/ /index.php?$args; } location ~ \\.php$ { # 404 try_files $fastcgi_script_name =404; # default fastcgi_params include fastcgi_params; # fastcgi settings fastcgi_pass\tunix:/run/php-fpm/php-fpm.sock; fastcgi_index\tindex.php; fastcgi_buffers\t8 16k; fastcgi_buffer_size\t32k; # fastcgi params fastcgi_param DOCUMENT_ROOT\t$realpath_root; fastcgi_param SCRIPT_FILENAME\t$realpath_root$fastcgi_script_name; #fastcgi_param PHP_ADMIN_VALUE\t\u0026#34;open_basedir=$base/:/usr/lib/php/:/tmp/\u0026#34;; } } add soft link to this server config: cd /etc/nginx/sites-enabled; ln -s ../sites-available/mysite.com mysite.com\nreload config: sudo nginx -s reload\nSetup wordpress cd /srv/http/mysite.com/; sudo cp -p wp-config-sample.php wp-config.php sudo vim wp-config.php, set information as in your database define( \u0026lsquo;DB_NAME\u0026rsquo;, \u0026lsquo;mysite\u0026rsquo; ); define( \u0026lsquo;DB_USER\u0026rsquo;, \u0026lsquo;mysiteadmin\u0026rsquo; ); define( \u0026lsquo;DB_PASSWORD\u0026rsquo;, \u0026lsquo;password\u0026rsquo; ); go to your browser for more setups. Trouble Shooting in the wp-config.php file, change define('WP_DEBUG', false) to define('WP_DEBUG', true) to enable debugging information on your site. Refs Setup wordpress website on Arch Linux (use apache) How to Install WordPress with Nginx on Debian and Ubuntu arch wiki: nginx arch wiki: wordpress ","description":"","id":25,"section":"posts","tags":["wordpress"],"title":"Setup Wordpress From Scratch","uri":"https://k4i.top/posts/setup-wordpress-from-scratch/"},{"content":"my openssl cheatsheet.\ncreate unencrypted rsa private key (in pem format): umask 066; openssl genrsa -out key.pem [-des3] 1024 add/change passphrase of a key file: openssl rsa -des3 -in key.pem -out [key.new.pem|key.pem] certificate signing request (CSR) using this private key: openssl req -new -key key.pem -out req.csr self-sign the CSR: openssl x509 -req -days 3650 -in req.csr -signkey key.pem -out cert.pem or just in one command: sudo openssl req -new -key key.pem -x509 -days 3650 -out ../cert.pem ca sign: openssl ca -in req.csr -out cert.pem -days 365 check ca config in /etc/ssl/openssl.cnf beforehand. dhparam: openssl dhparam -out dhparam.pem 1024 read read a key file: openssl rsa -in key.pem -check -text read a CSR: openssl req -noout -text -in req.csr read a certificate: openssl x509 -noout -text -in cert.pem read md5 fingerprint of a cert: openssl x509 -fingerprint -noout -in newcert.pem dhparam: openssl dhparam -in dhparam.pem -text -noout -check convert Convert a DER file (.crt .cer .der) to PEM: openssl x509 -inform der -in certificate.cer -out certificate.pem PEM to DER: openssl x509 -outform der -in certificate.pem -out certificate.der Refs Simple SSL cert HOWTO CA认证和颁发吊销证书 The Most Common OpenSSL Commands ","description":"","id":26,"section":"posts","tags":["cheatsheet","openssl","Crypto"],"title":"Openssl Notes","uri":"https://k4i.top/posts/openssl-notes/"},{"content":"HMAC-based KDF(key derivation function)\nHMAC message authentication code (MAC)\nHash-based MAC\n$\\text{HMAC}(\\text{H}, key, text) = \\text{HMAC-Hash}(key, text) = \\text{H}((key \\oplus opad) \\Vert \\text{H}(key \\oplus ipad, text))$\nHKDF HKDF-Extract $IKM$ (input keying material)\n$PRK = \\text{HKDF-Extract}(\\text{H}, salt, IKM) = \\text{HMAC}(\\text{H}, salt, IKM)$\nHKDF-Expand expand the above PRK (pseudo random key) to a given length.\n1 2 3 4 5 6 7 8 N = ceil(L/hashLen) T = T(1) || T(2) || T(3) || ... || T(N) OKM = T的前L字节 T(0) = 空 T(1) = HMAC(H, PRK, T(0) || info || 0x01) = HMAC-Hash(PRK, T(0) || info || 0x01) T(2) = HMAC(H, PRK, T(1) || info || 0x02) = HMAC-Hash(PRK, T(1) || info || 0x02) T(3) = HMAC(H, PRK, T(2) || info || 0x03) = HMAC-Hash(PRK, T(2) || info || 0x03) Refs HKDF算法 ","description":"","id":27,"section":"posts","tags":[null],"title":"HKDF","uri":"https://k4i.top/posts/hkdf/"},{"content":"How to generate a random sequence (permutation) of a finite sequence.\nFisher–Yates shuffle The original form was described by Ronald Fisher and Frank Yates:\nWrite down the numbers from 1 through N. Pick a random number k between one and the number of un-struck numbers remaining (inclusive). Counting from the low end, strike out the kth number not yet struck out, and write it down at the end of a separate list. Repeat from step 2 until all the numbers have been struck out. The sequence of numbers written down in step 3 is now a random permutation of the original numbers The modern version of the Fisher–Yates shuffle, designed for computer use, was introduced by Richard Durstenfeld in 1964 and popularized by Donald E. Knuth in The Art of Computer Programming as \u0026ldquo;Algorithm P (Shuffling)\u0026rdquo;.\n1 2 3 4 5 6 7 8 # -- To shuffle an array a of n elements (indices 0..n-1): from random import randrange def shuffle(items): # 0-based i = len(items) while i \u0026gt; 1: j = randrange(i) # 0, 1, 2, ..., i-1 i -= 1 items[i], items[j] = items[j], items[i] # swap(items[i], items[j]) (clang\u0026rsquo;s libc++ uses this idea, see /usr/include/c++/v1/algorithm on your computer or github: llvm-project)\nYou can easily write a equivalent left to right version of this.\n1 2 3 4 5 6 7 8 9 # -- To shuffle an array a of n elements (indices 0..n-1): from random import randrange def shuffle(items): # 0-based n = len(items) i = 0 while i \u0026lt; n - 1: j = randrange(i, n) # i, i+1, ..., n-1 items[i], items[j] = items[j], items[i] # swap(items[i], items[j]) i += 1 The \u0026ldquo;inside-out\u0026rdquo; shuffle (gcc\u0026rsquo;s libstdc++ uses this, see /usr/include/c++/\u0026lt;gcc version\u0026gt;/bits/stl_algo.h on your computer or github: gcc-mirror)\nTo simultaneously initialize and shuffle an array, use this:\n1 2 3 4 5 6 7 8 9 # -- To shuffle an array a of n elements (indices 0..n-1): from random import randrange def shuffle(items): # 0-based n = len(items) i = 2 while i \u0026lt;= n: j = randrange(i) # 0, 1, ..., i-1 items[i-1], items[j] = items[j], items[i-1] # swap(items[i-1], items[j]) i += 1 At any loop, items[0:i] is a shuffle of items[0:i], you don\u0026rsquo;t even need to know the value of n in advance.\nThe correctness of the inside-out shuffle can be proved by induction.\nRefs wiki: Fisher–Yates shuffle ","description":"","id":28,"section":"posts","tags":["shuffle","random"],"title":"Shuffling","uri":"https://k4i.top/posts/shuffling/"},{"content":"How to select k out of N objects.\nReservoir sampling source code\nReservoir sampling is a family of randomized algorithms for choosing a simple random sample, without replacement, of k items from a population of unknown size n in a single pass over the items.\nThe size of the population n is not known and is typically very large. (scan from left to right, without looking back) At any point, the current state is a simple random sample without replacement of size k over the part of the population seen so far. Simple algorithm (Algorithm R) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /** * A simple and popular but slow algorithm, commonly known as Algorithm R * time complexity O(n) */ void reservoir_sample(vector\u0026lt;int\u0026gt; \u0026amp;S, vector\u0026lt;int\u0026gt; \u0026amp;R, int k) { R.resize(k); copy(S.begin(), S.begin()+k, R.begin()); for (int i = k, n = S.size(); i \u0026lt; n; ++i) { int j = rand_int(0, i); if (j \u0026lt; k) R[j] = S[i]; // choose ith with probability (k/(i+1)) // keep ith with // probability not being swapped by remmaing elements [i+1...n-1] // (k/(i+1)) * (1-1/(i+2))*...*(1-1/n) = k/n } } An optimal algorithm (Algorithm L) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /** * Algorithm L improves upon this algorithm by * computing how many items are discarded before * the next item enters the reservoir * time complexity O(k(1+log(n/k))) */ void reservoir_sample(vector\u0026lt;int\u0026gt; \u0026amp;S, vector\u0026lt;int\u0026gt; \u0026amp;R, int k) { R.resize(k); copy(S.begin(), S.begin()+k, R.begin()); double W = exp(log(rand_real(0, 1))/k); for (int i = k, n = S.size(); i \u0026lt; n;) { i += floor(log(rand_real(0, 1))/log(1-W)) + 1; if (i \u0026lt; n) { R[rand_int(0, k-1)] = S[i]; W *= exp(log(rand_real(0, 1))/k); } } } Problems for practice Refs wiki: Reservoir sampling C++ randomly sample k numbers from range 0:n-1 (n \u0026gt; k) without replacement ","description":"","id":29,"section":"posts","tags":[null],"title":"Sampling","uri":"https://k4i.top/posts/sampling/"},{"content":"max_heap: A[0] is the maximum value\nmin_heap: A[0] is the minimum value\nsource code: AC/Algorithms/Heap\nintro go_up(int i): from node i go up to at most node 0, swap with parent if node i is bigger (time: $O(log(n))$) go_down(int i): from node i go down to its leaf child at most, swap with the larger child every time goes down (time: $O(log(n))$) heapify(n): adjust A[0..n-1] as a heap with go_down (time: $O(n)$, refer: How is make_heap in C++ implemented to have complexity of 3N?) push(int x): A[sz] = x, then go_up(sz++) (time: $O(log(n))$, same as go_up) pop(): swap(A[0], A[--sz]), then go_down(0) (time: $O(log(n))$, same as go_down) code complete source code on github\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; const int N = 1e5; int sz = 0; // here is a max_heap, A[0] is the maximum value int A[N]; void go_down(int i) { for (int j = 2 * i + 1; j \u0026lt; sz; j = 2 * (i = j) + 1) { // j: left child of i if (j \u0026lt; sz - 1 \u0026amp;\u0026amp; A[j] \u0026lt; A[j + 1]) ++j; // go to right child if (A[i] \u0026gt;= A[j]) break; swap(A[i], A[j]); } } void go_up(int i) { for (int p = (i - 1) / 2; i; p = ((i = p) - 1) / 2) { if (A[i] \u0026lt;= A[p]) break; swap(A[i], A[p]); } } void heapify(int n) { if (n == 1) return; int i = (n - 2) / 2; while (true) { go_down(i); if (i-- == 0) return; } } void pop() { if (sz \u0026lt;= 1) { sz = 0; return; } swap(A[0], A[--sz]); go_down(0); } void push(int x) { A[sz] = x; go_up(sz++); } Refs How is make_heap in C++ implemented to have complexity of 3N? STL source code: make_heap, push_heap, pop_heap, \u0026hellip; ","description":"","id":30,"section":"posts","tags":["heap"],"title":"Heap Simple Implementation","uri":"https://k4i.top/posts/heap-simple-implementation/"},{"content":"I used to think deploying my blog with github actions is unnecessary, but now\u0026hellip; (真香)\nDeploying with github actions is so much faster.\nIntroduction I have two repositories: sky-bro/blog-src and sky-bro/sky-bro.github.io.\nBefore settign up github actions, I wrote my posts in sky-bro/blog-src, then build it on my computer and push the built files (in the public/ folder) to sky-bro/sky-bro.github.io using a script ./deploy.sh.\nNow every time I push to blog-src, the workflow runs, and deploy the newest build to the sky-bro.github.io repo.\nfinal workflow file Put this in .github/workflows/\u0026lt;workflow name\u0026gt;.yml, mine is at .github/workflows/gh-pages.yml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 name: deploy to sky-bro.github.io on: push: branches: - master # Set a branch to deploy workflow_dispatch: jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - uses: actions/cache@v2 with: path: /tmp/hugo_cache key: ${{ runner.os }}-hugomod-${{ hashFiles(\u0026#39;**/go.sum\u0026#39;) }} restore-keys: | ${{ runner.os }}-hugomod- - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} external_repository: sky-bro/sky-bro.github.io publish_branch: master publish_dir: ./public full_commit_message: ${{ github.event.head_commit.message }} workflow explained there are three main sections:\nname: name of the workflow (deploy to sky-bro.github.io) on: rules to trigger this workflow (my workflow will be triggered after pushing to the master branch or manually in the Actions tab) jobs: actual jobs to do after being trigered This workflow only contains one job, and the name of this job is deploy, it has some steps, which will be executed in the given order.\nStep 1. check out files Just copy.\nThe hugo themes are in theme/ folder as submodules.\nThe fetch depth is set to 0 so we can fetch all history for .GitInfo and .Lastmod. (some hugo themes need this)\nStep 2. Set up hugo Set the version number ('0.79.1', latest), and decide whether or not you want to use the hugo extended. (If your theme uses SASS/SCSS, you need hugo extended)\nStep 3. Set hugo cache optional, just copy.\nStep 4. Build your site Giving --minify will let hugo minify any supported output format (HTML, XML etc.).\nStep 5. Deploy your site This is the most important one.\ndeploy_key, github_token or personal_token: three types of tokens, choose the one you need publish_dir is where the site files are generated, hugo uses ./public by default commit_message or full_commit_message, full_commit_message will not include hash at the end of the deploy commit. ${{ github.event.head_commit.message }} is the latest commit message of your source. external_repository, publish_branch: where you\u0026rsquo;ll deploy you site (if using another repository) If you have your site deployed in the same repository.\nYou can use github_token, just add github_token: ${{ secrets.GITHUB_TOKEN }} under with:, like below. This is the simplest. Then follow First Deployment with GITHUB_TOKEN\n1 2 3 4 5 - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public But sometimes, you would like to deploy your site to a different repository, you can only use deploy_key or personal_token to deploy to a different repository.\nI used a personal_token (ref: Create SSH Deploy Key).\nFirst generate your deploy key with the following command.\n1 2 3 4 ssh-keygen -t rsa -b 4096 -C \u0026#34;$(git config user.email)\u0026#34; -f gh-pages -N \u0026#34;\u0026#34; # You will get 2 files: # gh-pages.pub (public key) # gh-pages (private key) Next, go to the repository settings\nof your target repository (where you deploy you site to). Go to Deploy Keys and add your public key with the Allow write access. of your source repository. Go to Secrets and add your private key as ACTIONS_DEPLOY_KEY Refs peaceiris/actions-hugo peaceiris/actions-gh-pages, most contents of this post can be found here. ","description":"","id":31,"section":"posts","tags":["hugo","github actions"],"title":"Hugo, Deploy With Github Actions","uri":"https://k4i.top/posts/deploy-with-github-actions/"},{"content":"My simple note on the RSA algorithm.\nIntroduction We know that RSA is an asymmetric encryption algorithm, meaning that the communication partners Alice and Bob hold different keys, instead of same keys as in symmetric encryption.\nIn rsa, Alice first computes the product $n$ of two different large prime numbers $p$ and $q$, and uses $p$ and $q$ to derive two keys $e$ and $d$, one for herself and one for others. Then she makes $(e, n)$ public and destroies the $p$ and $q$.\nEncryption and Decryption $e$ and $d$ can both be used for encryption or decryption: $e$ can be used to decpryt what\u0026rsquo;s encrypted with $d$, $d$ can be used to decpryt what\u0026rsquo;s encrypted with $e$\nTo Encrypt\nIf Alice encrypts a message m, she need to compute $m^d \\equiv c\\ (\\text{mod}\\ n)$\nTo Decrypt\nBob knows $(e, n)$ (everyone knows, because this is public), he computes $c^e \\equiv m^{de} \\equiv m\\ (\\text{mod}\\ n)$ and gets the original message m.\nSo the correctness of RSA lies in $m^{de}\\equiv m\\ (\\text{mod}\\ n)$. We\u0026rsquo;ll understand why in the Proof of Correctness Section.\nHow to Generate e and d $\\phi(n)=(p-1)\\times (q-1)$ choose an integer $e$ which is a smaller than coprime to $\\phi(n)$, A popular choice is $e = 2^{16} + 1 = 10001\\text{h} = 65537$ the modular inverse of $e$ modulo $\\phi(n)$ is $d$, it can be computed with Extended Euclidean algorithm in PKCS #1 v2.0, $\\phi(n)$ has been replaced with $\\lambda(n) = \\text{lcm}(p-1,q-1)$ Euler\u0026rsquo;s totient function $\\phi(n)$: the number of positive integers up to $n$ that are relatively prime to $n$.\nFor example, $\\phi(9)=6$, because there are 6 numbers relatively prime to 9: $\\{1,2,4,5,7,8\\}$\nMore generally, for any number $N$, it can be represented as the product of some prime numbers: $N = p_1^{k_1}\\times p_2^{k_2}\\times p_3^{k_3}\\times \u0026hellip;$, and $\\phi(N)=N\\times(1-\\frac{1}{p_1})\\times(1-\\frac{1}{p_2})\\times(1-\\frac{1}{p_3})\u0026hellip;$\nCompute Modular Inverse There are three ways to compute modular inverse, please refer to this post\nProof of Correctness Euler\u0026rsquo;s totient theorem $m^{\\phi(n)}=1\\ (\\text{mod}\\ n)$ when $m$ and $n$ are coprime special case: $m^{n-1}=1\\ (\\text{mod}\\ n)$ when $n$ is a prime number and $m$ and $n$ are coprime ($m$ is not a multiple of $n$) \u0026ndash; Fermat’s Little Theorem Chinese Remainder Theorem TODO\nCorrectness of RSA we know that $ed = 1\\ (\\text{mod}\\ \\lambda(pq))$, $\\lambda(pq) = \\text{lcm}(p-1, q-1)$. $ed = 1\\ (\\text{mod}\\ \\lambda(pq))$, that is $ed=h(p-1)+1 = k(q-1)+1$ In order to prove $m^{ed}\\equiv m\\ (\\text{mod}\\ pq)$, it\u0026rsquo;s equivalent to prove $m^{ed}\\equiv m\\ (\\text{mod}\\ p)$ and $m^{ed}\\equiv m\\ (\\text{mod}\\ q)$ separately (using Chinese Remainder Theorem) prove $m^{ed}\\equiv m\\ (\\text{mod}\\ p)$\n$$\n\\begin{align*}\nm^{ed} \u0026amp;= m^{h(p-1)+1}\\ (\\text{mod}\\ p)\\\\\n\u0026amp;= 0\\ \\text{(when m is multiple of p) or}\\ (1)^{h}\\times m\\ \\text{(when m and p are coprime)}\\\\\n\u0026amp;= m\\ (\\text{mod}\\ p)\n\\end{align*}\n$$ prove $m^{ed}\\equiv m\\ (\\text{mod}\\ q)$\n$$\n\\begin{align*}\nm^{ed} \u0026amp;= m^{k(q-1)+1}\\ (\\text{mod}\\ q)\\\\\n\u0026amp;= 0\\ \\text{(when m is multiple of q) or}\\ (1)^{k}\\times m\\ \\text{(when m and q are coprime)}\\\\\n\u0026amp;= m\\ (\\text{mod}\\ q)\n\\end{align*}\n$$ refs wiki: RSA wiki: Euler\u0026rsquo;s totient function wiki: Euler\u0026rsquo;s totient theorem wiki: Chinese remainder theorem slide: Correctness Proof of RSA, I think the proof is wrong, (when applying Fermat’s Little Theorem, didn\u0026rsquo;t consider the case when m is multiple of p). wiki: Extended Euclidean algorithm 同余定理+逆元】知识点讲解 ","description":"","id":32,"section":"posts","tags":["RSA","Crypto"],"title":"Understand RSA, a Top Dwon Approach","uri":"https://k4i.top/posts/understand-rsa-a-top-dwon-approach/"},{"content":"BIT can be used to compute the prefix sum of an array in $log(n)$ time and takes only $O(n)$ space.\nsource code\nIntroduction Binary Indexed Tree (BIT, or Fenwick Tree), is used for computing the prefix sum (some associative binary operation) of an array, and it can modify an element by adding some value to that element.\nUnlike Segment Tree, Fenwick Tree cannot let you query a range, it\u0026rsquo;s only used for querying the prefix sum. (But depends on the sum operation, you can sometines get a range sum from two prefix sums).\nFenwick Tree takes only $O(n)$ space, whereas segment tree takes $O(2n)$ space, or $O(4n)$ if you use lazy propagation.\nFenwick Tree has two functions. They are sum and add, as shown below.\nadd increase an element 1 2 3 void add(int i, T v) { // adds v to A[i] while (i \u0026lt;= n) A[i] += v, i += i \u0026amp; -i; } (i \u0026amp; -i) will get the lowest bit of i, for example (6 \u0026amp; -6) = 0b10 = 2\nElements are 1-indexed here, so A[0] is not used.\nsum get a prefix sum 1 2 3 4 5 T sum(int i) { // prefix sum: A[1] + A[2] + ... + A[i] T v{}; while (i) v += A[i], i -= i \u0026amp; -i; return v; } TODO\ntemplate source code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 template \u0026lt;typename T\u0026gt; class fenwick { public: int n; vector\u0026lt;T\u0026gt; A; fenwick(int n): n(n), A(n+1) {} // A[0] not used T sum(int i) { // prefix sum: A[1] + A[2] + ... + A[i] T v{}; while (i) v += A[i], i -= i \u0026amp; -i; return v; } void add(int i, T v) { // adds v to A[i] while (i \u0026lt;= n) A[i] += v, i += i \u0026amp; -i; } }; Refs wiki: Fenwick Tree ","description":"","id":33,"section":"posts","tags":["BIT","Fenwick","Tree"],"title":"Binary Indexed Tree, or Fenwick Tree","uri":"https://k4i.top/posts/binary-indexed-tree-or-fenwick-tree/"},{"content":"Use matrix and fast pow together can make some problems much easier.\nFast Pow old friend fast pow:\n1 2 3 4 5 6 7 8 9 10 template \u0026lt;typename T\u0026gt; T pow(T x, int n) { T ret = 1; while (n) { if (n \u0026amp; 1) ret *= x; x *= x; n \u0026gt;\u0026gt;= 1; } return ret; } Matrix\u0026lt;ll, 10, 10, MOD\u0026gt; ret = 1 will use constructor Matrix(T x, bool isMainDiagonal = true). A Matrix Template 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 template \u0026lt;typename T, std::size_t R, std::size_t C = R, std::size_t M = INT32_MAX\u0026gt; class Matrix { public: T m[R][C]; Matrix() { memset(m, 0, sizeof(m)); } /** * construct a matrix whose diagonal (fill at most min(R, C) number as x) is * filled with number x, and the rest filled with 0\u0026#39;s * @param x number to be filled at the diagonal * @param isMainDiagonal fill main diagonal if true, else fill the * antidiagonal */ Matrix(T x, bool isMainDiagonal = true) : Matrix() { if (isMainDiagonal) for (std::size_t i = 0; i \u0026lt; R \u0026amp;\u0026amp; i \u0026lt; C; ++i) m[i][i] = x; else for (std::size_t i = 0, j = C - 1; i \u0026lt; R \u0026amp;\u0026amp; j \u0026gt;= 0; --j, ++i) m[i][j] = x; } template \u0026lt;std::size_t C2\u0026gt; Matrix\u0026lt;T, R, C2, M\u0026gt; operator*(const Matrix\u0026lt;T, C, C2, M\u0026gt; \u0026amp;other) const { Matrix\u0026lt;T, R, C2, M\u0026gt; res; for (std::size_t i = 0; i \u0026lt; R; ++i) for (std::size_t k = 0; k \u0026lt; C; ++k) for (std::size_t j = 0; j \u0026lt; C2; ++j) res.m[i][j] = (res.m[i][j] + m[i][k] * other.m[k][j] % M) % M; return res; } Matrix\u0026lt;T, R, C, M\u0026gt; \u0026amp;operator*=(const Matrix\u0026lt;T, C, C, M\u0026gt; \u0026amp;other) { return *this = *this * other; } void fill(T x) { for (std::size_t i = 0; i \u0026lt; R; ++i) for (std::size_t j = 0; j \u0026lt; C; ++j) m[i][j] = x; } T sum() const { T res = 0; for (std::size_t i = 0; i \u0026lt; R; ++i) for (std::size_t j = 0; j \u0026lt; C; ++j) res = (res + m[i][j]) % M; return res; } }; Examples leetcode: 509 Fibonacci Number link: 509 Fibonacci Number\ntime: $O(log(n))$, space: $O(1)$\ndescription $$\n\\begin{align*}\nF(0) \u0026amp;= 0 \\\\\nF(1) \u0026amp;= 1 \\\\\nF(n) \u0026amp;= F(n - 1) + F(n - 2),\\;for\\; n \u0026gt; 1.\n\\end{align*}\n$$\nnow given n, compute F(n);\nidea keep track of previous two numbers F(i-2), F(i-1), and update them at each increase of i, till we get to n.\nthe transition can be represented by a matrix, mulitply all transition matrixes together (use fast pow here) then transit once from initial state F(0) = 0, F(1) = 1.\nsolution code on github: sky-bro/AC/leetcode.com/0509 Fibonacci Number/\n1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public: int fib(int N) { Matrix\u0026lt;ll, 1, 2, MOD\u0026gt; res; res.m[0][1] = 1; if (N \u0026lt; 2) return N; Matrix\u0026lt;ll, 2, 2, MOD\u0026gt; x; // transition matrix x.fill(1); x.m[0][0] = 0; return (res * pow(x, N - 1)).m[0][1]; } }; leetcode: 935 Knight Dialer link: 935 Knight Dialer\ntime: $O(log(n))$, space: $O(1)$\ndescription 1 2 3 4 5 6 /* 1 2 3 4 5 6 7 8 9 * 0 # */ how many different sequence of numbers can a chess knight dial (% 109 + 7). the knight can only stand on numeric cells, and may start from any digit.\nidea This is a simple dp problem, at every move, knight standing at 1 can go to 6 and 8 (or knight standing at 6 and 8 can go to 1), so dp[1] = dp[6] + dp[8], but we need to update all dp[0..9] same time (we don\u0026rsquo;t want to overwrite dp values in the last step), so the time and space complexity would be $O(n)$ and $O(1)$.\nAnother way to update dp values is by multiplying a transition matrix, and in every transition, this matrix is gonna be the same, so we just multiply all transitions together (where can use fast pow) and transit from the starting point (when n=1: [1,1,1,1,1,1,1,1,1,1]) only once.\nThe time complexity would be reduced to $O(log(n))$.\nsolution code on github: sky-bro/AC/leetcode.com/0935 Knight Dialer/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public: int knightDialer(int n) { if (n == 1) return 10; Matrix\u0026lt;ll, 1, 10, MOD\u0026gt; res; res.fill(1); /* 1 2 3 4 5 6 7 8 9 * 0 # */ Matrix\u0026lt;ll, 10, 10, MOD\u0026gt; x; vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; trans = { {4, 6}, {6, 8}, {7, 9}, {4, 8}, {0, 3, 9}, {}, {0, 1, 7}, {2, 6}, {1, 3}, {2, 4} }; for (int i = 0; i \u0026lt; 10; ++i) for (int j : trans[i]) x.m[i][j] = 1; return (res * pow(x, n - 1)).sum(); } }; more for exercise todo\u0026hellip; refs Matrix - By DanAlex Exponentiation by squaring ","description":"","id":34,"section":"posts","tags":["fast pow","matrix"],"title":"Matrix Fast Pow","uri":"https://k4i.top/posts/matrix-fast-pow/"},{"content":"knapsack problem and its variations\n0-1 knapsack problem description Given a set of $n$ items, each with a weight $w_{i}$ and a value $v_{i}$, along with a maximum weight capacity $W$, try pick some of these items (total weight not surpassing $W$), so that the total value is maximized, find the maximum total value.\nsolution to acwing: 01背包问题 problem link\ntime: $O(NV)$, space: $O(V)$\nfor every item, total weight of items in our knapsack decrease (so that we take each item at most once) from maximum (knapsack volume) to current item\u0026rsquo;s weight.\ndp[v] is the maximum value we get with total weight of $v$ (or less) if we do not take in this item;\ndp[v-p.first] + p.second is the maximum value we get with total weight of $v$ (or less) if we take this item.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; static int x = []() { std::ios::sync_with_stdio(false); cin.tie(0); return 0; }(); typedef long long ll; int N, V; int solve(vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; \u0026amp;A) { vector\u0026lt;int\u0026gt; dp(V + 1); for (auto \u0026amp;p : A) { for (int v = V; v \u0026gt;= p.first; --v) { dp[v] = max(dp[v], dp[v - p.first] + p.second); } } return *max_element(dp.begin(), dp.end()); } int main(int argc, char const *argv[]) { cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; V; // volume vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; A(N); for (int i = 0; i \u0026lt; N; ++i) { cin \u0026gt;\u0026gt; A[i].first \u0026gt;\u0026gt; A[i].second; // (weight, value)... not (value, weight) } cout \u0026lt;\u0026lt; solve(A) \u0026lt;\u0026lt; endl; return 0; } count ways / check valid way exists leetcode: 416 Partition Equal Subset Sum\ntime: $O(NV)$, space: $O(V)$\nnow we need to count the number of ways to form exact $V$ total weight\nsimilar as above, but initialize dp[0]=1, and rest as 0.\nif we do not need to count the number of ways, but just check if there exists one valid way, use or operation indead of +.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // cannot count ways, gets overflow, use \u0026#39;|\u0026#39; operation is enough class Solution { public: bool canPartition(vector\u0026lt;int\u0026gt;\u0026amp; nums) { int sum = accumulate(nums.begin(), nums.end(), 0); if (sum \u0026amp; 1) return false; vector\u0026lt;int\u0026gt; dp(sum / 2 + 1); dp[0] = 1; for (int num : nums) { for (int i = sum / 2; i \u0026gt;= num; --i) { dp[i] |= dp[i - num]; // dp[i] += dp[i - num]; // overflow, if number of ways is too big } } return dp[sum / 2]; } }; 1 2 3 4 5 6 7 8 9 10 11 12 // for 0-1 knapsack problem, using bitset is more simple -- update all bits same time // use bitset // https://leetcode.com/problems/partition-equal-subset-sum/discuss/90590/Simple-C%2B%2B-4-line-solution-using-a-bitset class Solution { public: bool canPartition(vector\u0026lt;int\u0026gt;\u0026amp; nums) { bitset\u0026lt;10001\u0026gt; bits(1); int sum = accumulate(nums.begin(), nums.end(), 0); for (int num : nums) bits |= bits \u0026lt;\u0026lt; num; return !(sum \u0026amp; 1) \u0026amp;\u0026amp; bits[sum \u0026gt;\u0026gt; 1]; } }; get a valid path Often in 0-1 knapsack problems, we want to know exactly the what set of objects we take (maybe multiple, but we just need any one of them).\nTo achieve this, we only need an extra array of size V (which is the volume of our knapsack). Idea is that we store at path[i] the object that first let us arrive volume i.\n(haven\u0026rsquo;t found a proper/simple example problem yet\u0026hellip; to be added)\nIf we want to get a valid set of integers (objects) in the above problem: leetcode: 416 Partition Equal Subset Sum\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { public: bool canPartition(vector\u0026lt;int\u0026gt;\u0026amp; nums) { bitset\u0026lt;10001\u0026gt; bits(1); int sum = accumulate(nums.begin(), nums.end(), 0); vector\u0026lt;int\u0026gt; path((sum \u0026gt;\u0026gt; 1) + 1); for (int num : nums) { auto change = bits; bits |= bits \u0026lt;\u0026lt; num; change ^= bits; // set bits that changed in this loop for (int i = change._Find_first(); i \u0026lt;= a; i = change._Find_next(i) { path[i] = num; } } if (!(sum \u0026amp; 1) \u0026amp;\u0026amp; bits[sum \u0026gt;\u0026gt; 1]) { for (int j = sum \u0026gt;\u0026gt; 1; j; ) { cout \u0026lt;\u0026lt; path[j] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; j -= path[j]; } cout \u0026lt;\u0026lt; endl; } return !(sum \u0026amp; 1) \u0026amp;\u0026amp; bits[sum \u0026gt;\u0026gt; 1]; } }; unbounded knapsack problem description similar to the 0-1 knapsack problem, but now there are infinite number of each item, so we can take multiple of each.\nsolution to acwing: 完全背包问题 problem link\ntime: $O(NV)$, space: $O(V)$\nonly difference from the 0-1 knapsack problem solution is that now for each item, total weight of items in our knapsack increases (so we can re-put this item in our knapsack) from current item\u0026rsquo;s weight to maximum (knapsack\u0026rsquo;s volume)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; static int x = []() { std::ios::sync_with_stdio(false); cin.tie(0); return 0; }(); typedef long long ll; int N, V; int solve(vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; \u0026amp;A) { vector\u0026lt;int\u0026gt; dp(V + 1); for (auto \u0026amp;p : A) { for (int v = p.first; v \u0026lt;= V; ++v) { // only difference from 0-1 knapsack problem dp[v] = max(dp[v], dp[v - p.first] + p.second); } } return dp[V]; } int main(int argc, char const *argv[]) { cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; V; // volume vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; A(N); for (int i = 0; i \u0026lt; N; ++i) { cin \u0026gt;\u0026gt; A[i].first \u0026gt;\u0026gt; A[i].second; // (weight, value)... not (value, weight) } cout \u0026lt;\u0026lt; solve(A) \u0026lt;\u0026lt; endl; return 0; } count ways / check valid way exists leetcode: 518 Coin Change 2\nsimilar to the previous one, but we update from weight $w_i$ to $V$\n1 2 3 4 5 6 7 8 9 10 11 class Solution { public: int change(int t, vector\u0026lt;int\u0026gt;\u0026amp; cs) { // int dp[t + 1] = {1}; vector\u0026lt;int\u0026gt; dp(t + 1); dp[0] = 1; for (auto c : cs) for (auto j = c; j \u0026lt;= t; ++j) dp[j] += dp[j - c]; return dp[t]; } }; bounded knapsack problem description n types of goods, there are $s_i$ number of type $i$ goods and each with weight $w_i$ and value $v_i$.\nsolution to acwing: 多重背包问题 I problem link\ntime: $O(NVlogM)$, space: $O(V)$\nreduce bounded knapsack problem to 0-1 knapsack problem\nfor type $i$ goods (M \u0026ndash; total number), split them into groups ($ceil(log_2M)$ groups) of number $1, 2, 4, 8, \u0026hellip; 2^k, M-2^k$. and treat these groups as 0-1 knapsack problem items.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; static int x = []() { std::ios::sync_with_stdio(false); cin.tie(0); return 0; }(); typedef long long ll; int N, V; int solve(vector\u0026lt;int\u0026gt; \u0026amp;weights, vector\u0026lt;int\u0026gt; \u0026amp;values, vector\u0026lt;int\u0026gt; \u0026amp;nums) { vector\u0026lt;int\u0026gt; dp(V + 1); for (int i = 0; i \u0026lt; N; ++i) { int num = min(nums[i], V / weights[i]); for (int k = 1; num; k *= 2) { if (k \u0026gt; num) k = num; num -= k; for (int j = V; j \u0026gt;= weights[i] * k; --j) { dp[j] = max(dp[j], dp[j - weights[i] * k] + values[i] * k); } } } return dp[V]; } int main(int argc, char const *argv[]) { cin \u0026gt;\u0026gt; N \u0026gt;\u0026gt; V; // volume vector\u0026lt;int\u0026gt; weights(N), values(N), nums(N); for (int i = 0; i \u0026lt; N; ++i) { cin \u0026gt;\u0026gt; weights[i] \u0026gt;\u0026gt; values[i] \u0026gt;\u0026gt; nums[i]; // (weight, value)... not (value, weight) } cout \u0026lt;\u0026lt; solve(weights, values, nums) \u0026lt;\u0026lt; endl; return 0; } more knapsack problems for exercise leetcode : 698 Partition to K Equal Sum Subsets leetcode: 1723 Find Minimum Time to Finish All Jobs leetcode: 956 Tallest Billboard codeforces: round 699 div2, F. AB Tree \u0026ndash; bounded knapsack, greedy more as I go\u0026hellip; refs wiki: knapsack problem web.ntnu.edu.tw/~algo/Knapsack Problem \u0026ndash; very nice organized (written in traditional chinese) ","description":"","id":35,"section":"posts","tags":["knapsack","dp"],"title":"Knapsack Problems","uri":"https://k4i.top/posts/knapsack-problems/"},{"content":"The Curses library forms a wrapper over working with raw terminal codes, and provides highly flexible and efficient API (Application Programming Interface). It provides functions to move the cursor, create windows, produce colors, play with mouse etc. The application programs need not worry about the underlying terminal capabilities\ncommonly used initialization 1 2 3 4 5 6 initscr(); // init screen, first thing to to before you using ncurses cbreak(); // disable the buffering of typed characters by the TTY driver and get a character-at-a-time input noecho(); // To suppress the automatic echoing of typed characters curs_set(0); nodelay(stdscr, TRUE); // getch() return ERR if the key input is not ready endwin(); // Before the program is terminated, endwin() must be called to restore the terminal settings. windows 1 2 3 4 5 6 7 8 9 10 keypad(stdscr, TRUE); // capture special keystrokes like Backspace, Delete and the four arrow keys by getch() // new windows int h, w; getmaxyx(stdscr, h, w); // get the size of the screen. WINDOW * win = newwin(nlines, ncols, y0, x0); // y0 and x0 are the coordinates of the upper left corner of win on the screen // Windows cannot overlap with each other. Therefore you have two options: only use stdscr and no other windows, or create several non-overlapping windows but do not use stdscr. wrefresh(win); // refresh() is equivalent to wrefresh(stdscr). delwin(win); // If a window win is no longer needed, and you\u0026#39;re going to create new windows to overlap it, you should call delwin(win) to delete the window (release the memory it is using). box derwin input 1 2 3 wmove(win, y, x); // move(y, x) is equivalent to the wmove(stdscr, y, x). The actual cursor motion is not shown on the screen untill you do a wrefresh(win). wgetch(win); // The user input of course comes from the keyboard and not the screen window. But the different windows on the screen might have different delay modes and other properties, therefore affect the behavior of wgetch() mvwgetch(win); // mvgetch() output 1 2 3 4 5 waddch(win, y, x, ch); // addch(); mvwaddch(); wechochar(win, ch); // waddch(win, ch); wrefresh(win); waddstr(win, str); wprintw(win, fmtstr, arg1, arg2, ...); more add more as I go\u0026hellip;\nrefs Ncurses Programming Guide by X. Li \u0026ndash; simple and quick NCURSES Programming HOWTO \u0026ndash; full go tui libs ","description":"","id":36,"section":"posts","tags":["TUI","curses","ncurses"],"title":"Ncurses Note","uri":"https://k4i.top/posts/ncurses-note/"},{"content":"Description from wiki: a disjoint-set data structure, also called a union–find data structure or merge–find set, is a data structure that stores a collection of disjoint (non-overlapping) sets\nyou can easily solve leetcode: 547. Number of Provinces w/ UF.\nget UF template at github/sky-bro/AC/Algorithms/Union Find\nTemplate UF datastructure is very simple, it has only two key functions: U and F.\nuse U (union) to connect two nodes, so they belong to the same set; use F (find) to find the root of a node (or the group id of the node) We use ids to store the parent of every node, ids[i] is the i-th node\u0026rsquo;s parent. if ids[i] == i means i is the root if its group, we can say the group id is i.\nSo, different root/group id means nodes are in different groups, whereas same root/group id means two nodes are in the same group.\nsimle 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class UF { private: vector\u0026lt;int\u0026gt; ids; public: UF(int n) { ids.resize(n); iota(ids.begin(), ids.end(), 0); } int F(int x) { return ids[x] == x ? x : (ids[x] = F(ids[x])); } void U(int p, int q) { ids[F(p)] = ids[F(q)]; } }; full part from U and F, based on your needs, you can add these functions:\nint group_count(), count the number of sets/groups \u0026ndash; initialize group_cnt as n (each node as a group), every time U unions two different groups, --group_count. int count(int x), count the size of the group of node x \u0026ndash; when U unions two different groups, add one group\u0026rsquo;s size to another (the new root). bool connected(int p, int q), check if two nodes are in the same group. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class UF { private: vector\u0026lt;int\u0026gt; ids, cnts; int cnt; public: UF(int n) { ids.resize(n); iota(ids.begin(), ids.end(), 0); cnt = n; cnts.resize(n, 1); } int F(int x) { return ids[x] == x ? x : (ids[x] = F(ids[x])); } void U(int p, int q) { int pid = F(p), qid = F(q); if (pid != qid) { ids[qid] = pid; --cnt; cnts[pid] += cnts[qid]; } } int group_count() { return cnt; } int count(int x) { return cnts[F(x)]; } bool connected(int p, int q) { return F(p) == F(q); } }; Solution to lc problem 547 you can also solve this problem with dfs: github/sky-bro/AC/leetcode.com/0547 Friend Circles/main.cpp, lc has changed the name of this problem to \u0026ldquo;Number of Provinces\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 // union find class Solution { private: int n, cnt; vector\u0026lt;int\u0026gt; ids; void U(int p, int q) { int pid = F(p), qid = F(q); if (pid != qid) { --cnt; ids[pid] = ids[qid]; } } int F(int x) { return x == ids[x] ? x : (ids[x] = F(ids[x])); } public: int findCircleNum(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; isConnected) { n = cnt = isConnected.size(); ids.resize(n); iota(ids.begin(), ids.end(), 0); for (int i = 0; i \u0026lt; n; ++i) { for (int j = 0; j \u0026lt; n; ++j) { if (isConnected[i][j]) { U(i, j); } } } return cnt; } }; more problems for exercise leetcode: 947 Most Stones Removed with Same Row or Column ","description":"","id":37,"section":"posts","tags":["Union Find"],"title":"Union Find","uri":"https://k4i.top/posts/union-find/"},{"content":"Easily compile and use multiple glibc on a single machine.\nGet source and compile I\u0026rsquo;ll store my source at ~/src/glibc/\nyou can download sources of glibc from hit mirror, or tsinghua tuna or official\nhere take glibc-2.23 as an example, after downloading the source\n1 2 3 4 5 6 7 8 9 10 11 cd ~/src/glibc mkdir glibc-2.23-{build,out} cd glibc-2.23-build # -Wno-error will override -Werror which will make compilation fail on warnings # -O3, if you specify CFLAGS, you must give it -Ox (glibc cannot be compiled without optimization: https://gnu.org/software/libc/manual/html_mono/libc.html#toc-Installing-the-GNU-C-Library) # -g will generate embed debug information ../glibc-2.23/configure --prefix=~/src/glibc/glibc-2.23-out CFLAGS=\u0026#34;-Wno-error -O3 -g\u0026#34; # this is important # make # compile with single thread, slow: took me about 14 minutes make -j`nproc` # faster: took me under 2 minutes # make -j$((`nproc`+1)) # https://unix.stackexchange.com/questions/208568/how-to-determine-the-maximum-number-to-pass-to-make-j-option make install # install to what you have configured in the `--prefix` (so mine will be installed to ~/src/glibc/glibc-2.23-out) use mgcc to compile programs mgcc mgcc is just a shell wrapper that wraps the gcc command, you can compile programs same way as you would in gcc.\nyou can also specify --glibc_install with the installation path of some version of glibc to switch between different glibc\u0026rsquo;s: mgcc --glibc_install ~/src/glibc/glibc-2.32-out -g -o main main.c\nYou can find my most up to date mgcc at .dotfiles/bin/mgcc\nvim ~/bin/mgcc\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #!/bin/sh glibc_install=~/src/glibc/glibc-2.23-out print_help() { echo \u0026#34;$0 [--glibc_install GLIBC_INSTALL_PATH] gcc_args\u0026#34; } while [[ $# -ge 1 ]] do key=\u0026#34;$1\u0026#34; case $key in --glibc_install) glibc_install=\u0026#34;$2\u0026#34; shift ;; -h) print_help exit 0 ;; *) others+=(\u0026#34;$1\u0026#34;) ;; esac shift done gcc \\ -L \u0026#34;${glibc_install}/lib\u0026#34; \\ -I \u0026#34;${glibc_install}/include\u0026#34; \\ -Wl,--rpath=\u0026#34;${glibc_install}/lib\u0026#34; \\ -Wl,--dynamic-linker=\u0026#34;${glibc_install}/lib/ld-linux-x86-64.so.2\u0026#34; \\ \u0026#34;${others[@]}\u0026#34; run \u0026amp; debug vim main.c\n1 2 3 4 5 6 7 8 9 10 11 12 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char const *argv[]) { void *p1 = malloc(0x70); void *p2 = malloc(0x70); free(p1); free(p2); free(p1); return 0; } you can check if your mgcc works after compile mgcc -g -o main main.c:\n1 2 3 4 ldd main # linux-vdso.so.1 (0x00007ffd36f9a000) # libc.so.6 =\u0026gt; /home/sky/src/glibc/glibc-2.23-out/lib/libc.so.6 (0x00007fac09658000) # /home/sky/src/glibc/glibc-2.23-out/lib/ld-linux-x86-64.so.2 =\u0026gt; /usr/lib64/ld-linux-x86-64.so.2 (0x00007fac0981b000) tell gdb where to look for source code: dir ~/src/glibc/glibc-2.23/malloc\n1 2 3 4 gdb main # ... pwndbg\u0026gt; dir ~/src/glibc/glibc-2.23/malloc/ # ... you can see malloc source code in gdb\ncompletion if you are using zsh and oh-my-zsh (you should), you can add a line: compdef mgcc=gcc to your ~/.zshrc file\nthis will allow mgcc to use gcc\u0026rsquo;s completion\nrun others\u0026rsquo; program with your libc CLI 1 2 3 LD_PRELOAD=./libc.so ./program # or https://pullp.github.io/2020/11/06/11-glibc-basics/#2-2-run-with-specific-glibc LD_PRELOAD=./libc.so ./ld.so ./program pwntools 1 2 3 4 5 #coding:utf-8 from pwn import * io = process(\u0026#34;./program\u0026#34;, env={\u0026#34;LD_PRELOAD\u0026#34;:\u0026#34;./libc.so\u0026#34;}) io = process([\u0026#34;./ld.so\u0026#34;, \u0026#34;./program\u0026#34;], env={\u0026#34;LD_PRELOAD\u0026#34;:\u0026#34;./libc.so\u0026#34;}) refs glibc相关操作记录 How to determine the maximum number to pass to make -j option? offcial: glibc installation guide How can I link to a specific glibc version? ","description":"","id":38,"section":"posts","tags":["glibc","pwn","gcc"],"title":"Compile and Use Your Own Glibc","uri":"https://k4i.top/posts/compile-and-use-your-own-glibc/"},{"content":"Create new post First you need to create a file for you to write. Here\u0026rsquo;s how you can create a new post:\n1 2 3 4 hugo new posts/writing-guide.md # will create content/en/posts/writing-guide.md, \u0026#39;en\u0026#39; is set as my site\u0026#39;s default language hugo new posts/writing-guide.zh.md # content/zh/posts/writing-guide.zh.md hugo new posts/writing-guide/index.md # content/en/posts/writing-guide/index.md hugo new posts/writing-guide/index.zh.md # content/en/posts/writing-guide/index.zh.md I prefer to create a directory for each of my writings, so I can add extra stuff like images for that specific page more easily.\nfront matter hugo supports four front matter formats: yaml, toml, json and org. hugo: Front Matter Formats\nI prefer using yaml, because I think it\u0026rsquo;s easier to understand compared with the other three. I suggest you only use yaml or toml.\n1 2 3 --- # yaml front matter --- 1 2 3 +++ # toml front matter +++ Code you can write multi-lines of code\n1 2 3 4 5 6 7 8 9 10 ````markdown # markdown code example keep nesting with different # of ticks (the more to the outside, the more ticks) ```markdown ## some header * list item1 * list item2 ``` ```` Pictures 1 2 \u0026lt;!-- no caption by default --\u0026gt; ![an image in this directory](./images/scott.jpg) 1 2 3 \u0026lt;!-- better way, use figure shortcode --\u0026gt; \u0026lt;!-- to know more shortcodes: https://gohugo.io/content-management/shortcodes/ --\u0026gt; {{\u0026lt; figure src=\u0026#34;./images/scott.jpg\u0026#34; caption=\u0026#34;an image in this directory (this is Scott Adkins)\u0026#34; alt=\u0026#34;an image in this directory\u0026#34; \u0026gt;}} an image in this directory (this is Scott Adkins)\nMath Support (with MathJax) You can get some quick examples from: typora\u0026rsquo;s doc\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 single \\\\$ for inline code: $x,y,z$ two \\\\$\u0026#39;s for block level code: $$z = \\sqrt{x^2 + y^2}$$ $$ \\begin{align*} y = y(x,t) \u0026amp;= A e^{i\\theta} \\\\\\\\ \u0026amp;= A (\\cos \\theta + i \\sin \\theta) \\\\\\\\ \u0026amp;= A (\\cos(kx - \\omega t) + i \\sin(kx - \\omega t)) \\\\\\\\ \u0026amp;= A\\cos(kx - \\omega t) + i A\\sin(kx - \\omega t) \\\\\\\\ \u0026amp;= A\\cos \\Big(\\frac{2\\pi}{\\lambda}x - \\frac{2\\pi v}{\\lambda} t \\Big) + i A\\sin \\Big(\\frac{2\\pi}{\\lambda}x - \\frac{2\\pi v}{\\lambda} t \\Big) \\\\\\\\ \u0026amp;= A\\cos \\frac{2\\pi}{\\lambda} (x - v t) + i A\\sin \\frac{2\\pi}{\\lambda} (x - v t) \\end{align*} $$ single \\$ for inline code: $x,y,z$\ntwo \\$\u0026rsquo;s for block level code:\n$$z = \\sqrt{x^2 + y^2}$$\n$$\n\\begin{align*}\ny = y(x,t) \u0026amp;= A e^{i\\theta} \\\\\n\u0026amp;= A (\\cos \\theta + i \\sin \\theta) \\\\\n\u0026amp;= A (\\cos(kx - \\omega t) + i \\sin(kx - \\omega t)) \\\\\n\u0026amp;= A\\cos(kx - \\omega t) + i A\\sin(kx - \\omega t) \\\\\n\u0026amp;= A\\cos \\Big(\\frac{2\\pi}{\\lambda}x - \\frac{2\\pi v}{\\lambda} t \\Big) + i A\\sin \\Big(\\frac{2\\pi}{\\lambda}x - \\frac{2\\pi v}{\\lambda} t \\Big) \\\\\n\u0026amp;= A\\cos \\frac{2\\pi}{\\lambda} (x - v t) + i A\\sin \\frac{2\\pi}{\\lambda} (x - v t)\n\\end{align*}\n$$\nFlow charts TODO\nMore To be added\u0026hellip;\n","description":"Guides on how to write your contents using this theme (my cheatsheet).","id":39,"section":"posts","tags":["blog"],"title":"Writing Guide","uri":"https://k4i.top/posts/writing-guide/"},{"content":"Basic password for user \u0026ldquo;bandit0\u0026rdquo; is \u0026ldquo;bandit0\u0026rdquo; ssh into the next host, e.g: ssh -p2220 bandit0@bandit.labs.overthewire.org find password for next level goto step 2 Tricks hit \u0026lt;TAB\u0026gt; for command completion ls -a to show hidden files (names started with .) find command man command (man file) Answers level0 (password found: bandit0) level0-\u0026gt;level1: cat ./readme (password found: boJ9jbbUNNfktd78OOpsqOltutMc3MY1) level1-\u0026gt;level2: cat ./- (password found: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9) level2-\u0026gt;level3: cat ./spaces\\ in\\ this\\ filename (password found: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK) level3-\u0026gt;level4: ls -a ./inhere; cat ./inhere/.hidden (password found: pIwrPrtPN36QITSp3EQaw936yaFoFgAB) level4-\u0026gt;level5: file ./inhere/*; cat ./inhere/-file07 (password found: koReBOKuIDDepwhWk7jZC0RTdopnAYKh) level5-\u0026gt;level6: find ./ -size 1033c \\! -executable -readable; cat ./inhere/mabehere07/.file2 (password found: DXjZPULLxYr17uwoI01bNLQbtFemEgo7) level6-\u0026gt;level7: find / -size 33c -user bandit7 -group bandit6; cat /var/lib/dpkg/info/bandit7.password (password found: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs) level7-\u0026gt;level8: grep millionth (password found: cvX2JJa4CFALtqS87jk27qwqGhBM9plV) level8-\u0026gt;level9: sort data.txt | uniq -u (password found: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR) level9-\u0026gt;level10: strings data.txt | grep \u0026quot;===\u0026quot; (password found: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk) level10-\u0026gt;level11: base64 -d data.txt (password found: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR) level11-\u0026gt;level12: cat data.txt | tr \u0026quot;a-zA-Z\u0026quot; \u0026quot;n-za-mN-ZA-M\u0026quot; (password found: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu) level12-\u0026gt;level13: xxd -r data.txt \u0026gt; data; file data; ... (password found: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL) level13-\u0026gt;level14: ssh -i sshkey.private bandit14@localhost (password found: 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e) level14-\u0026gt;level15: nc localhost 30000 (password found: BfMYroe26WYalil77FoDi9qh59eK5xNr) level15-\u0026gt;level16: nc localhost 30000 (password found: BfMYroe26WYalil77FoDi9qh59eK5xNr) https://overthewire.org/wargames/bandit/bandit16.html ","description":"my solutions to the bandit wargame: https://overthewire.org/wargames/bandit/","id":40,"section":"posts","tags":["wargames"],"title":"Wargames Bandit","uri":"https://k4i.top/posts/wargames-bandit/"},{"content":"A de Bruijn sequence of order n on a size-k alphabet A is a cyclic sequence in which every possible length-n string on A occurs exactly once as a substring.\nFor a de Bruijn sequence of order n on a size-k alphabet $A$, we denote it by $B(k, n)$\nBasic Properties $B(k, n)$ has length $k^n$ (also the number of distinct strings of length n on A) De Bruijn sequences are optimally short with respect to the property of containing every string of length n exactly once The number of distinct de Bruijn sequences $B(k, n)$ is\n$$\\frac{(k!)^{k^{n-1}}}{k^n}$$ An Example Sequence let\u0026rsquo;s use $B(2, 4)$ as an example\nSequence 0000111101100101 (cyclic sequcence) belongs to $B(2,4)$.\nIt contains every string of length n exactly once:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {0 0 0 0} 1 1 1 1 0 1 1 0 0 1 0 1 0 {0 0 0 1} 1 1 1 0 1 1 0 0 1 0 1 0 0 {0 0 1 1} 1 1 0 1 1 0 0 1 0 1 0 0 0 {0 1 1 1} 1 0 1 1 0 0 1 0 1 0 0 0 0 {1 1 1 1} 0 1 1 0 0 1 0 1 0 0 0 0 1 {1 1 1 0} 1 1 0 0 1 0 1 0 0 0 0 1 1 {1 1 0 1} 1 0 0 1 0 1 0 0 0 0 1 1 1 {1 0 1 1} 0 0 1 0 1 0 0 0 0 1 1 1 1 {0 1 1 0} 0 1 0 1 0 0 0 0 1 1 1 1 0 {1 1 0 0} 1 0 1 0 0 0 0 1 1 1 1 0 1 {1 0 0 1} 0 1 0 0 0 0 1 1 1 1 0 1 1 {0 0 1 0} 1 0 0 0 0 1 1 1 1 0 1 1 0 {0 1 0 1} 0} 0 0 0 1 1 1 1 0 1 1 0 0 {1 0 1 ... ... 0 0} 0 0 1 1 1 1 0 1 1 0 0 1 {0 1 ... ... 0 0 0} 0 1 1 1 1 0 1 1 0 0 1 0 {1 ... How to Construct the Sequence Can be constructed by taking an Eulerian cycle of an (n − 1)-dimensional de Bruijn graph: (Hierholzer’s Algorithm)\nA de Bruijn graph\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 // copied from geeksforgeeks #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; unordered_set\u0026lt;string\u0026gt; seen; vector\u0026lt;int\u0026gt; edges; // Modified DFS in which no edge // is traversed twice void dfs(string node, int\u0026amp; k, string\u0026amp; A) { for (int i = 0; i \u0026lt; k; ++i) { string str = node + A[i]; if (seen.find(str) == seen.end()) { seen.insert(str); dfs(str.substr(1), k, A); edges.push_back(i); } } } // Function to find a de Bruijn sequence // of order n on k characters string deBruijn(int n, int k, string A) { // Clearing global variables seen.clear(); edges.clear(); string startingNode = string(n - 1, A[0]); dfs(startingNode, k, A); string S; // Number of edges int l = pow(k, n); for (int i = 0; i \u0026lt; l; ++i) S += A[edges[i]]; S += startingNode; return S; } // Driver code int main() { int n = 3, k = 2; string A = \u0026#34;01\u0026#34;; cout \u0026lt;\u0026lt; deBruijn(n, k, A); return 0; } Related Problems leetcode 753: Cracking the Safe\nexample solution from leetcode discuss\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { int n, k, v; vector\u0026lt;vector\u0026lt;bool\u0026gt; \u0026gt; visited; string sequence; public: string crackSafe(int n, int k) { if (k == 1) return string(n, \u0026#39;0\u0026#39;); this-\u0026gt;n = n; this-\u0026gt;k = k; v = 1; for (int i = 0; i \u0026lt; n - 1; ++i) v *= k; visited.resize(v, vector\u0026lt;bool\u0026gt;(k, false)); dfs(0); return sequence + sequence.substr(0, n - 1); } void dfs(int u) { for (int i = 0; i \u0026lt; k; ++i) { if (!visited[u][i]) { visited[u][i] = true; dfs((u * k + i) % v); sequence.push_back(\u0026#39;0\u0026#39; + i); } } } }; Refs wiki: De Bruijn sequence geeksforgeeks: De Bruijn sequence | Set 1 ","description":"","id":41,"section":"posts","tags":["math","dfs"],"title":"De Bruijn Sequence","uri":"https://k4i.top/posts/de-bruijn-sequence/"},{"content":"Yes, by default I heard before that using scanf/printf is faster than using cin/cout, and it\u0026rsquo;s true from my real experience, but I really didn\u0026rsquo;t get to know the reason behind, and later in leetcode, I saw others include these lines in their code:\n1 2 3 ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); I\u0026rsquo;m almost certain that these lines are included to speed up their code. So out of curiosity, I did some searching, here\u0026rsquo;s what I\u0026rsquo;ve found:\nWhy cin \u0026amp; cout is slow First Reason: unbuffered streams By default, C++ streams are synchronized to the standard C streams after each input/output operation, meaning that C++ streams are unbuffered, each I/O operation on a C++ stream is immediately applied to the corresponding C stream\u0026rsquo;s buffer.\nSo this is the main reaseon: To be compatible with C (so you can mix your C code inside C++), C++ do not buffer its streams.\nSecond Reason: cin, cout streams are tied together By default, cin is tied to cout, and wcin to wcout, guarantees the flushing of cout before cin executes an input. In pure C, you may have to guarantee this by manually using fflush after the printf.\nWhat these three lines do ios::sync_with_stdio(false) As said above, by default c++ streams share c streams\u0026rsquo; buffers. This can be tweeked using the ios::sync_with_stdio(bool sync = true) function. After setting the sychronization to false, the synchronization between the C and C++ standard streams is disabled, C++ will use its own buffer.\ncin.tie(NULL) \u0026amp; cout.tie(NULL) tie is used to tie a stream (in/out) to some output stream, if the parameter is NULL, untie this stream from any tied stream (returns previous tied stream)\nif called without any argument, return the tied stream:\n1 *cin.tie() \u0026lt;\u0026lt; 123; // same as cout \u0026lt;\u0026lt; 123; (by default, cin is tied to cout) so this is just used to untie cin/cout from any tied output stream (normally we just need to use cin.tie(0)), then the previously tied output stream won\u0026rsquo;t be forced to flush.\nWhen should I use the \u0026ldquo;speed up\u0026rdquo; Know the adventures If you disable the synchronization, then C++ streams are allowed to have their own independent buffers, which makes mixing C- and C++-style I/O an adventure. Also, synchronized C++ streams are thread-safe (output from different threads may interleave, but you get no data races). (refer cppref)\nIf you untie cin, then later when you execute the lines below, you won\u0026rsquo;t be guaranteed to see the prompt before the input request from cin.\n1 2 3 string name; cout \u0026lt;\u0026lt; \u0026#34;Please input your name:\u0026#34;; cin \u0026gt;\u0026gt; name; Decide If you do not mix use the C- and C++-style I/O, do not write multi-thread program, use ios::sync_with_stdio(false).\nIf you do not care about seeing some output before your input, use tie(0).\nExample 1 2 3 4 5 int main() { // ... } static int x = []() {ios::sync_with_stdio(false); cin.tie(0); return 0; } (); Refs cppref: std::ios_base::sync_with_stdio cppref: std::basic_ios\u0026lt;CharT,Traits\u0026gt;::tie Why do we need to tie std::cin and std::cout? ","description":"is or why is cin, cout slow in C++?","id":42,"section":"posts","tags":["C++"],"title":"cin \u0026 cout is slow?","uri":"https://k4i.top/posts/cin-cout-is-slow/"},{"content":"A segment tree is a binary tree where each node represents an interval. Each node stores some property of its corresponding interval: like the maximum/minimum num, the sum of that interval.\nApplicable Problems For any array a, where every element belongs to some monoid $(S, \\oplus)$ we can build a segment tree to answer the following queries (problems):\n– Get(l, r) — returns $a_l \\oplus a_{l+1} \\oplus \\dotsb a_r$\n– Change(p, x) — set $a_p = x$\nMonoids are semigroups with identity. $\\oplus$ is an associative binary operation. Identity element for some pair $(S, \\oplus)$ is such an element $e \\in S$ that for every $a \\in S$ condition $a ⊕ e = e \\oplus a = a$ holds; Example Problem leetcode 307: Range Sum Query - Mutable\nGiven an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.\nThe update(i, val) function modifies nums by updating the element at index i to val. For this problem, the identity element is 0, and the binary operation is + between integers.\nAnd for simplicity we use the identity element to extend the length of the original array to some integer power of 2.\nPadded Segment Tree\nif size of the array is n, then we only need an array of 2*n length to store the segment tree. (only in iterative version, property of a Complete Binary Tree)\nSegment Tree Built Iteratively\nDefine the binary operation Here we will just use + for our operation, you can if you need define a merge function for your special operation $\\oplus$.\n1 2 3 inline int merge(int a, int b) { return a + b; } Build the Tree We want to construct an array like above (the original array is {1, 2, 3, 4, 5, 6}), the essential idea of a segment tree is that a node at index $i$ (index starts from 1, you can also try starting from 0, but starting from 1 is simpler) can have two children at indexes $(2 \\ast i)$ and $(2 \\ast i + 1)$.\n1 2 3 4 5 6 7 8 9 10 NumArray(vector\u0026lt;int\u0026gt;\u0026amp; nums) { n = nums.size(); segment_tree.resize(2 * n); for (int i = 0; i \u0026lt; n; ++i) { segment_tree[i + n] = nums[i]; } for (int i = n - 1; i \u0026gt; 0; --i) { segment_tree[i] = segment_tree[i\u0026lt;\u0026lt;1] + segment_tree[i\u0026lt;\u0026lt;1|1]; } } Query a range sum 1 2 3 4 5 6 7 8 int sumRange(int i, int j) { // sum range [i, j] int sum = 0; for (i += n, j += n+1; i \u0026lt; j; i \u0026gt;\u0026gt;= 1, j \u0026gt;\u0026gt;= 1) { if (i\u0026amp;1) sum += segment_tree[i++]; if (j\u0026amp;1) sum += segment_tree[--j]; } return sum; } Update an element/elements 1 2 3 4 5 6 7 void update(int i, int val) { i += n; if (segment_tree[i] == val) return; for (segment_tree[i] = val; i \u0026gt; 1; i \u0026gt;\u0026gt;= 1) { segment_tree[i\u0026gt;\u0026gt;1] = segment_tree[i] + segment_tree[i^1]; } } Complete Solution to the Problem Leetcode 307 Solution (C\u0026#43;\u0026#43;) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class NumArray { private: int n; vector\u0026lt;int\u0026gt; segment_tree; public: NumArray(vector\u0026lt;int\u0026gt;\u0026amp; nums) { n = nums.size(); segment_tree.resize(2*n); for (int i = 0; i \u0026lt; n; ++i) { segment_tree[i+n] = nums[i]; } for (int i = n-1; i \u0026gt; 0; --i) { segment_tree[i] = segment_tree[i\u0026lt;\u0026lt;1] + segment_tree[i\u0026lt;\u0026lt;1|1]; } } void update(int i, int val) { i += n; if (segment_tree[i] == val) return; for (segment_tree[i] = val; i \u0026gt; 1; i \u0026gt;\u0026gt;= 1) { segment_tree[i\u0026gt;\u0026gt;1] = segment_tree[i] + segment_tree[i^1]; } } int sumRange(int i, int j) { // sum range [i, j] int sum = 0; for (i += n, j += n+1; i \u0026lt; j; i \u0026gt;\u0026gt;= 1, j \u0026gt;\u0026gt;= 1) { if (i\u0026amp;1) sum += segment_tree[i++]; if (j\u0026amp;1) sum += segment_tree[--j]; } return sum; } }; Refs youtube: Efficient Segment Tree Tutorial codeforces: Efficient and easy segment trees: best Segment tree Theory and applications wiki: binary tree - in an array ","description":"","id":43,"section":"posts","tags":["segment tree"],"title":"Segment Tree (Iterative)","uri":"https://k4i.top/posts/segment-tree-iterative/"},{"content":"let\u0026rsquo;s learn how to use heap in C++\nRelated functions func description make_heap Make heap from range push_heap Push element into heap range pop_heap Pop element from heap range sort_heap Sort elements of heap is_heap Test if range is heap is_heap_until Find first element not in heap order make_heap make heap from range\nWe need to have a heap before we operate on a heap, make_heap let\u0026rsquo;s us rearrange elements in a range.\nUsually we use a vector to hold these range of elements:\n1 2 3 4 5 6 #include \u0026lt;iostream\u0026gt; // std::cout #include \u0026lt;algorithm\u0026gt; // std::make_heap, std::pop_heap, std::push_heap, std::sort_heap #include \u0026lt;vector\u0026gt; // std::vector std::vector\u0026lt;int\u0026gt; heap{1,2,3,4,5,6,7}; std::make_heap(heap.begin(), heap.end()); // 7 5 6 4 2 1 3 For now, you only need to know that after make_heap, the biggest element is *begin(heap) or heap[0]. Other elements are not necessarily sorted, but arranged in a certain way, to know the detail, see heap in C++ 2.\npush_heap Push element into heap range\nGiven a heap in the range [first,last-1), this function extends the range considered a heap to [first,last) by placing the value in (last-1) into its corresponding location within it.\nMeaning to add an element to a heap:\n1 2 heap.push_back(8); // 7 5 6 4 2 1 3 8 std::push_heap(heap.begin(), heap.end()); // 8 7 6 5 2 1 3 4 push_heap will adjust the elements in the new range (old range + 1), and place the added element to where it fits.\npop_heap Pop element from heap range\nGiven a heap in the range [first,last), this function rearranges the elements in the heap range [first,last) in such a way that the part considered a heap is shortened by one: The element with the highest value is moved to (last-1).\nMeaning to pop out the largest element from the heap:\n1 std::pop_heap(heap.begin(), heap.end()); // 7 5 6 4 2 1 3 8 new heap range: [first, last-1)\nis_heap Test if range is heap\nsimple as description, code:\n1 2 3 // heap: 7 5 6 4 2 1 3 8 std::is_heap(heap.begin(), heap.end()); // false std::is_heap(heap.begin(), heap.end()-1); // true is_heap_until Find first element not in heap order\nWe\u0026rsquo;ve already popped out 8 from the heap, so:\n1 2 3 // 7 5 6 4 2 1 3 8 auto it = std::is_heap_until(heap.begin(), heap.end()); std::cout \u0026lt;\u0026lt; *it \u0026lt;\u0026lt; std::endl; // 8 sort_heap Sort elements of heap\nSorts the elements in the heap range [first,last) into ascending order.\nThis is actually quite simple, you may have as well implement this function yourself, just keep doing pop_heap until the heap is shortened to 1.\n1 std::sort_heap(heap.begin(), heap.end() - 1, cmp); // 1 2 3 4 5 6 7 8 Code Examples 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 #include \u0026lt;algorithm\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;random\u0026gt; #include \u0026lt;vector\u0026gt; template \u0026lt;typename T\u0026gt; void printArr(const std::vector\u0026lt;T\u0026gt; \u0026amp;arr) { for (const T \u0026amp;t : arr) std::cout \u0026lt;\u0026lt; t \u0026lt;\u0026lt; \u0026#34; \u0026#34;; std::cout \u0026lt;\u0026lt; std::endl; } // std::random_device rd; // std::mt19937_64 urng(rd()); int main(int argc, char const *argv[]) { std::cout \u0026lt;\u0026lt; \u0026#34;original array\u0026#34; \u0026lt;\u0026lt; std::endl; std::vector\u0026lt;int\u0026gt; heap(7); std::iota(heap.begin(), heap.end(), 1); printArr(heap); // 1 2 3 4 5 6 7 // std::cout \u0026lt;\u0026lt; \u0026#34;shuffle\u0026#34; \u0026lt;\u0026lt; std::endl; // std::shuffle(heap.begin(), heap.end(), urng); // printArr(heap); // auto cmp = std::greater\u0026lt;int\u0026gt;(); // auto cmp = std::less\u0026lt;int\u0026gt;(); std::cout \u0026lt;\u0026lt; \u0026#34;make heap\u0026#34; \u0026lt;\u0026lt; std::endl; std::make_heap(heap.begin(), heap.end()); printArr(heap); // 7 5 6 4 2 1 3 std::cout \u0026lt;\u0026lt; \u0026#34;push back 8\u0026#34; \u0026lt;\u0026lt; std::endl; heap.push_back(8); printArr(heap); // 7 5 6 4 2 1 3 8 std::cout \u0026lt;\u0026lt; \u0026#34;push heap\u0026#34; \u0026lt;\u0026lt; std::endl; std::push_heap(heap.begin(), heap.end()); printArr(heap); // 8 7 6 5 2 1 3 4 std::cout \u0026lt;\u0026lt; \u0026#34;pop heap\u0026#34; \u0026lt;\u0026lt; std::endl; std::pop_heap(heap.begin(), heap.end()); printArr(heap); // 7 5 6 4 2 1 3 8 std::cout \u0026lt;\u0026lt; \u0026#34;is heap\u0026#34; \u0026lt;\u0026lt; std::endl; std::cout \u0026lt;\u0026lt; std::is_heap(heap.begin(), heap.end()) \u0026lt;\u0026lt; std::endl; // 0 std::cout \u0026lt;\u0026lt; \u0026#34;is heap until\u0026#34; \u0026lt;\u0026lt; std::endl; auto it = std::is_heap_until(heap.begin(), heap.end()); std::cout \u0026lt;\u0026lt; *it \u0026lt;\u0026lt; std::endl; // 8 std::cout \u0026lt;\u0026lt; \u0026#34;sort heap (begin, end-1)\u0026#34; \u0026lt;\u0026lt; std::endl; std::sort_heap(heap.begin(), heap.end() - 1); printArr(heap); // 1 2 3 4 5 6 7 8 return 0; } Refs cplusplus.com: see heap algorithms ","description":"learn how to use heap in C++","id":44,"section":"posts","tags":["C++","heap"],"title":"Heap in C++","uri":"https://k4i.top/posts/heap-in-c++/"}]