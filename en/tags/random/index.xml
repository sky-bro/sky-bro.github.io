<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>random on k4i's blog</title><link>https://k4i.top/en/tags/random/</link><description>Recent content in random on k4i's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sky_io@outlook.com (K4i)</managingEditor><webMaster>sky_io@outlook.com (K4i)</webMaster><copyright>All content is subject to the license of<a rel="license noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> .</copyright><lastBuildDate>Wed, 19 May 2021 14:07:34 +0800</lastBuildDate><atom:link href="https://k4i.top/en/tags/random/index.xml" rel="self" type="application/rss+xml"/><item><title>Shuffling</title><link>https://k4i.top/en/posts/shuffling/</link><pubDate>Wed, 19 May 2021 14:07:34 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 19 May 2021 15:49:51 +0800</atom:modified><guid>https://k4i.top/en/posts/shuffling/</guid><description>&lt;p>How to generate a random sequence (permutation) of a finite sequence.&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/shuffle.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>shuffle</category><category>random</category><category>Data Structure &amp; Algorithm</category></item><item><title>Use Random in C++</title><link>https://k4i.top/en/posts/use-random-in-c++/</link><pubDate>Sat, 18 Apr 2020 10:04:13 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/en/posts/use-random-in-c++/</guid><description>Old way use rand(), usually pair with a random initialization of the seed:
1 2 srand(int(time(0))); // initialize the seed rand(); // get a random int, [0, RAND_MAX] get random int in [0,x): rand()%x
get random real in [0, 1]: rand()/double(RAND_MAX)
Modern way 1 2 3 4 5 // ... #include &amp;lt;random&amp;gt; std::random_device rng; std::mt19937 urng(rng()); random_device random_device is a uniformly-distributed integer random number generator that produces non-deterministic random numbers.</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/dice-white.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>RNG</category><category>C++</category><category>Random</category><category>STL</category><category>C++</category><category>Crypto</category></item></channel></rss>