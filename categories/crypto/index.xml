<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Crypto on k4i's blog</title><link>https://k4i.top/categories/crypto/</link><description>Recent content in Crypto on k4i's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sky_io@outlook.com (K4i)</managingEditor><webMaster>sky_io@outlook.com (K4i)</webMaster><copyright>All content is subject to the license of<a rel="license noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> .</copyright><lastBuildDate>Mon, 18 Apr 2022 15:47:00 +0800</lastBuildDate><atom:link href="https://k4i.top/categories/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>Use Random in C++</title><link>https://k4i.top/posts/use-random-in-c-plus-plus/</link><pubDate>Mon, 18 Apr 2022 15:47:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Fri, 21 Oct 2022 08:59:20 +0800</atom:modified><guid>https://k4i.top/posts/use-random-in-c-plus-plus/</guid><description>Old way use rand(), usually pair with a random initialization of the seed:
1 2 srand(int(time(0))); // initialize the seed rand(); // get a random int, [0, RAND_MAX] get random int in [0,x): rand()%x
get random real in [0, 1]: rand()/double(RAND_MAX)
Modern way Generators random_device random_device is a uniformly-distributed integer random number generator that produces non-deterministic random numbers.
A good implementation should has its randomness come from a non-deterministic source (e.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.topimages/icons/dice-white.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>STL</category><category>Random</category><category>C</category><category>RNG</category><category>Crypto</category><category>C</category></item><item><title>Understand RSA, a Top Dwon Approach</title><link>https://k4i.top/posts/understand-rsa-a-top-dwon-approach/</link><pubDate>Wed, 03 Feb 2021 12:12:54 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 04 Feb 2021 13:45:32 +0800</atom:modified><guid>https://k4i.top/posts/understand-rsa-a-top-dwon-approach/</guid><description>&lt;p>My simple note on the RSA algorithm.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>RSA</category><category>Crypto</category><category>Crypto</category><category>Data Structure &amp; Algorithm</category></item></channel></rss>