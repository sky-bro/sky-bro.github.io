<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>notes on k4i's blog</title><link>https://k4i.top/categories/notes/</link><description>Recent content in notes on k4i's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sky_io@outlook.com (K4i)</managingEditor><webMaster>sky_io@outlook.com (K4i)</webMaster><copyright>All content is subject to the license of<a rel="license noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> .</copyright><lastBuildDate>Thu, 09 Dec 2021 00:09:00 +0800</lastBuildDate><atom:link href="https://k4i.top/categories/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal &amp; Shell Setup (st &amp; zsh)</title><link>https://k4i.top/posts/terminal-and-shell-setup-st-and-zsh/</link><pubDate>Thu, 09 Dec 2021 00:09:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/terminal-and-shell-setup-st-and-zsh/</guid><description>My terminal emulator is st (simple terminal) from LukeSmith1, and my shell is zsh (with ohmyzsh2).
Dependencies dmenu fzf3 pywal4 ohmyzsh 1 2 # . start-proxy 1081 socks5h sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; Then config or restore5 your ~/.zshrc file.
1 dotfiles checkout ~/.zshrc colors and themes p10k I use powerlevel10k6 as my zsh theme.
clone the repository:
1 2 3 git clone --depth=1 https://github.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/terminal.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>shell</category><category>terminal</category><category>notes</category></item><item><title>Ranger Notes</title><link>https://k4i.top/posts/ranger-notes/</link><pubDate>Wed, 08 Dec 2021 00:03:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/ranger-notes/</guid><description>I am planing on totally changing to the terminal based file manager: ranger.
And this is my cheatsheet on using it, for more detailed guides you can go check the ranger official user guide1.
launch I use $mod+Shift+Return to launch my ranger, and this keybinding is set in the i3 config file as below.
1 2 # ~/.config/i3/config bindsym $mod+Shift+Return exec cd &amp;#34;$(xcwd)&amp;#34; &amp;amp;&amp;amp; exec st -e &amp;#34;ranger&amp;#34; Here I also use xcwd2 to get my current working directory, so I can launch ranger from that directory.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/ranger_logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>ranger</category><category>notes</category></item><item><title>Org Notes</title><link>https://k4i.top/posts/org-notes/</link><pubDate>Mon, 06 Dec 2021 21:37:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/org-notes/</guid><description>Basic Editing Comments C-c ; toggle comment of an entry Font types 1 2 3 4 5 6 + /italic/ + *bold* + _underlined_ + =verbatim= + ~code~ + +strike-through+ will be rendered as:
italic bold underlined verbatim code strike through Code Offers two types of source code:
code block inline code org-entities-help function helps you insert some code.
inline 1 2 src_c++[:exports code]{ typedef long long ll; } src_shell[:exports code]{ echo -e &amp;#34;test&amp;#34; } typedef long long ll;</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/org-mode-unicorn.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>org</category><category>notes</category></item><item><title>Vim Notes</title><link>https://k4i.top/posts/vim-notes/</link><pubDate>Mon, 06 Dec 2021 20:56:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Mon, 06 Dec 2021 21:00:03 +0800</atom:modified><guid>https://k4i.top/posts/vim-notes/</guid><description>my simple config my simple config can be found here: .dotfiles/.vimrc
widows C-w s horizontal split window C-w v vertical split window C-w q quit a window C-w h/j/k/l move between windows C-w H/J/K/L make current master window C-w +/- inc/dec height, can prepend with a number C-w &amp;gt;/&amp;lt; inc/dec width, can prepend with a number jump C-o jump back C-i jump forward References Vim Cheat Sheet vi / vim graphical cheat sheet</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/vim-logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>vim</category><category>editor</category><category>notes</category></item><item><title>Writing Guide (org + ox-hugo)</title><link>https://k4i.top/posts/writing-guide-org-plus-ox-hugo/</link><pubDate>Sun, 05 Dec 2021 20:58:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/writing-guide-org-plus-ox-hugo/</guid><description>I&amp;rsquo;ve recently switched to org mode, now I write all my blogs in org mode (blog-src/content-org/), and export them to .md files (blog-src/content/) with ox-hugo.
So instead of editing .md files under content folder, now I write .org files stored under content-org folder.
Create new post Invoking org-capture-templates function, and choose hugo post template, as shown in Figure 1
Figure 1: creating new post with org-capture-template
Front matter As in ox-hugo: Custom Front-matter Parameters, hugo front matters can be added like below:</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/org-mode-unicorn.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>hugo</category><category>org</category><category>notes</category></item><item><title>Golang Notes</title><link>https://k4i.top/posts/golang-notes/</link><pubDate>Thu, 25 Nov 2021 00:30:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/golang-notes/</guid><description>Basics Packages every go program is made up of packages, and it starts from: package main,
func main()
packages could be imported, and grouped together using parenthesis
(&amp;ldquo;factored&amp;rdquo; import statements)
1 2 import &amp;#34;fmt&amp;#34; import &amp;#34;math&amp;#34; same as:
1 2 3 4 import ( &amp;#34;fmt&amp;#34; &amp;#34;math&amp;#34; ) Only capitalized names are exported, therefore after importing a package, you
can only reference its exported names.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/gopher001.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>golang</category><category>notes</category></item></channel></rss>