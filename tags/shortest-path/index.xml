<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>shortest-path on k4i's blog</title><link>https://k4i.top/tags/shortest-path/</link><description>Recent content in shortest-path on k4i's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sky_io@outlook.com (K4i)</managingEditor><webMaster>sky_io@outlook.com (K4i)</webMaster><copyright>All content is subject to the license of<a rel="license noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> .</copyright><lastBuildDate>Sat, 10 Feb 2024 18:04:00 +0800</lastBuildDate><atom:link href="https://k4i.top/tags/shortest-path/index.xml" rel="self" type="application/rss+xml"/><item><title>Shortest Paths Algorithms</title><link>https://k4i.top/posts/shortest-paths-algorithms/</link><pubDate>Sat, 10 Feb 2024 18:04:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Sat, 10 Feb 2024 18:11:03 +0800</atom:modified><guid>https://k4i.top/posts/shortest-paths-algorithms/</guid><description>Dijkstra&amp;rsquo;s algorithm for a given node, find the shortest path between that node and every other. idea: use best first search to explore (visit adjacent nodes of some node) the unexplored node with shortest/best distance. shortest path code example: from AC/Algorithms/Dijkstra 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/bellman-ford-example.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>shortest-path</category><category>Data-Structure-and-Algorithm</category></item></channel></rss>