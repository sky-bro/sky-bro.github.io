<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>k4i's blog</title><link>https://k4i.top/</link><description>Recent content on k4i's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sky_io@outlook.com (K4i)</managingEditor><webMaster>sky_io@outlook.com (K4i)</webMaster><copyright>All content is subject to the license of<a rel="license noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> .</copyright><atom:link href="https://k4i.top/index.xml" rel="self" type="application/rss+xml"/><item><title>My Awesome List!</title><link>https://k4i.top/posts/my-awesome-list/</link><pubDate>Sat, 10 Apr 2021 23:50:05 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 27 May 2021 22:04:18 +0800</atom:modified><guid>https://k4i.top/posts/my-awesome-list/</guid><description>&lt;p>add my favorite resources here.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>awesome</category></item><item><title>Root Android with Magisk</title><link>https://k4i.top/posts/root-android-with-magisk/</link><pubDate>Wed, 02 Feb 2022 19:05:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/root-android-with-magisk/</guid><description>Introduction Magisk1 is a suite of open source software for customizing Android, supporting devices higher than Android 5.0.
Some highlight features:
MagiskSU: Provide root access for applications Magisk Modules: Modify read-only partitions by installing modules MagiskBoot: The most complete tool for unpacking and repacking Android boot images Zygisk: Run code in every Android applications' processes This is my notes on installing it on my op6 following the official installation guide.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/hash-symbol.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>root</category><category>magisk</category><category>Android</category></item><item><title>Flash Rom For My Android</title><link>https://k4i.top/posts/flash-rom-for-my-android/</link><pubDate>Mon, 31 Jan 2022 23:04:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/flash-rom-for-my-android/</guid><description>flash twrp recovery Download TWRP1 recovery for your android device, and probably follow the installation guide there. Generally, there are two ways of installing the recovery: from a .img file or a .zip file. backup your boot.img There&amp;rsquo;s no recovery partition, recovery is now part of the boot partition. So in case we break our boot partition, backup it first. 1 2 3 4 5 6 7 8 9 10</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/android-logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>twrp</category><category>Android</category></item><item><title>Manage Dotfiles With A Bare Git Repo</title><link>https://k4i.top/posts/manage-dotfiles-with-a-bare-git-repo/</link><pubDate>Thu, 20 Jan 2022 15:33:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 20 Jan 2022 15:51:36 +0800</atom:modified><guid>https://k4i.top/posts/manage-dotfiles-with-a-bare-git-repo/</guid><description>Introduction Using a bare git repo to manage dotfiles1 is simple (idea from this post, it only requires git), but now I&amp;rsquo;ve switch to stow2, which in my view, grouping dotfiles together in one folder in easier and cleaner for me to find.
Start Create the repo
1 git init --bare $HOME/.dotfiles.git Set git alias for the repo
1 2 echo &amp;#34;alias dotfiles=&amp;#39;/usr/bin/git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME&amp;#39;&amp;#34; &amp;gt;&amp;gt; $HOME/.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/dotfiles-logo-icon.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>dotfiles</category><category>workspace-setup</category></item><item><title>Manage My Dotfiles With Stow</title><link>https://k4i.top/posts/manage-my-dotfiles-with-stow/</link><pubDate>Thu, 20 Jan 2022 15:33:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 20 Jan 2022 15:51:36 +0800</atom:modified><guid>https://k4i.top/posts/manage-my-dotfiles-with-stow/</guid><description>Introduction I used to manage my dotfiles1 with a bare git repository, its simple, but dotfiles are all over the place, it&amp;rsquo;s hard for me to get a whole view of them.
So now I&amp;rsquo;ve switched to stow2, which is a symlink manager to help you put all files you want in one place and symlink them to where they belong (it creates symlink for files in one folder to another folder).</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/dotfiles-logo-icon.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>dotfiles</category><category>workspace-setup</category></item><item><title>Fix boot problem after updating packages</title><link>https://k4i.top/posts/fix-boot-problem-after-updating-packages/</link><pubDate>Wed, 12 Jan 2022 13:02:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 12 Jan 2022 13:34:39 +0800</atom:modified><guid>https://k4i.top/posts/fix-boot-problem-after-updating-packages/</guid><description>Introduction Just the other day I updated all my packages through yay -Syu (like pacman -Syu but also updates aur packages).
And after a reboot, it entered a boot loop&amp;hellip;
I believe this had happened to most arch users, and most of the time its just because we broke the dependencies of some packages after the upgrade.
So here&amp;rsquo;s how I saved boot failure after yay -Syu.
You&amp;rsquo;ll need a bootable usb stick (preferable the one you use for installing the system).</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/how-tough-am-i-i-do-sudo-pacman-syu-everyday.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>linux</category><category>boot</category><category>debug</category></item><item><title>Clipboard Manager: CopyQ</title><link>https://k4i.top/posts/clipboard-manager-copyq/</link><pubDate>Wed, 15 Dec 2021 15:20:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/clipboard-manager-copyq/</guid><description>Introduction CopyQ1 is a clipboard manager with many features.
manages clipboard history history in different tabs Store text, HTML, images or any other custom formats Support custom commands2, like saving clipboard items to file vi style navigation Basic Setup Enable vi style navigation in Preferences -&amp;gt; General Enable Tab Tree and Show Item Count in Preferences -&amp;gt; Layout Custom shortcuts in Preferences -&amp;gt; Shortcuts or in File -&amp;gt; Commands/GlobalShortcuts (press F6 from main window) Add Commands You can get many useful commands from CopyQ-Commands2, or you can create your own commands following the documentation.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/copyq-logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>clipboard</category><category>notes</category></item><item><title>Terminal &amp; Shell Setup (st &amp; zsh)</title><link>https://k4i.top/posts/terminal-and-shell-setup-st-and-zsh/</link><pubDate>Thu, 09 Dec 2021 00:09:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/terminal-and-shell-setup-st-and-zsh/</guid><description>My terminal emulator is st (simple terminal) from LukeSmith1, and my shell is zsh (with ohmyzsh2).
Dependencies dmenu fzf3 pywal4 ohmyzsh 1 2 # . start-proxy 1081 socks5h sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; Then config or restore5 your ~/.zshrc file.
1 dotfiles checkout ~/.zshrc colors and themes p10k I use powerlevel10k6 as my zsh theme.
clone the repository:
1 2 3 git clone --depth=1 https://github.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/terminal.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>shell</category><category>terminal</category><category>notes</category></item><item><title>Ranger Notes</title><link>https://k4i.top/posts/ranger-notes/</link><pubDate>Wed, 08 Dec 2021 00:03:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/ranger-notes/</guid><description>I am planing on totally changing to the terminal based file manager: ranger.
And this is my cheatsheet on using it, for more detailed guides you can go check the ranger official user guide1.
launch I use $mod+Shift+Return to launch my ranger, and this keybinding is set in the i3 config file as below.
1 2 # ~/.config/i3/config bindsym $mod+Shift+Return exec cd &amp;#34;$(xcwd)&amp;#34; &amp;amp;&amp;amp; exec st -e &amp;#34;ranger&amp;#34; Here I also use xcwd2 to get my current working directory, so I can launch ranger from that directory.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/ranger_logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>ranger</category><category>notes</category></item><item><title>Org Notes</title><link>https://k4i.top/posts/org-notes/</link><pubDate>Mon, 06 Dec 2021 21:37:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/org-notes/</guid><description>Basic Editing Comments C-c ; toggle comment of an entry Font types 1 2 3 4 5 6 + /italic/ + *bold* + _underlined_ + =verbatim= + ~code~ + +strike-through+ will be rendered as:
italic bold underlined verbatim code strike through Headings 1 2 3 4 *H1 ** H2 *** H3 **** H4 C-RET: new heading M-RET: new heading by spliting current heading C-S-RET: new heading, but with TODO M-S-RET: new heading by spliting current heading, but with TODO M-LEFT/RIGHT: Promote/Demote current subtree M-UP/DOWN: Move/swap subtree up/down Code Offers two types of source code:</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/org-mode-unicorn.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>org</category><category>notes</category></item><item><title>Vim Notes</title><link>https://k4i.top/posts/vim-notes/</link><pubDate>Mon, 06 Dec 2021 20:56:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/vim-notes/</guid><description>my simple config my simple config can be found here: .dotfiles/.vimrc
widows C-w s horizontal split window C-w v vertical split window C-w q quit a window C-w h/j/k/l move between windows C-w H/J/K/L make current master window C-w +/- inc/dec height, can prepend with a number C-w &amp;gt;/&amp;lt; inc/dec width, can prepend with a number jump C-o jump back C-i jump forward Folding zc: fold/close current tree zo: unfold/open current tree za: toggle fold Search and replace https://vim.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/vim-logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>vim</category><category>editor</category><category>notes</category></item><item><title>Writing Guide (org + ox-hugo)</title><link>https://k4i.top/posts/writing-guide-org-plus-ox-hugo/</link><pubDate>Sun, 05 Dec 2021 20:58:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/writing-guide-org-plus-ox-hugo/</guid><description>I&amp;rsquo;ve recently switched to org mode, now I write all my blogs in org mode (blog-src/content-org/), and export them to .md files (blog-src/content/) with ox-hugo.
So instead of editing .md files under content folder, now I write .org files stored under content-org folder.
Create new post Invoking org-capture-templates function, and choose hugo post template, as shown in Figure 1
Figure 1: creating new post with org-capture-template
Front matter As in ox-hugo: Custom Front-matter Parameters, hugo front matters can be added like below:</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/org-mode-unicorn.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>hugo</category><category>org</category><category>notes</category></item><item><title>Golang Notes</title><link>https://k4i.top/posts/golang-notes/</link><pubDate>Thu, 25 Nov 2021 00:30:00 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 09 Dec 2021 00:25:08 +0800</atom:modified><guid>https://k4i.top/posts/golang-notes/</guid><description>Basics Packages every go program is made up of packages, and it starts from: package main,
func main()
packages could be imported, and grouped together using parenthesis
(&amp;ldquo;factored&amp;rdquo; import statements)
1 2 import &amp;#34;fmt&amp;#34; import &amp;#34;math&amp;#34; same as:
1 2 3 4 import ( &amp;#34;fmt&amp;#34; &amp;#34;math&amp;#34; ) Only capitalized names are exported, therefore after importing a package, you
can only reference its exported names.</description><dc:creator>K4i</dc:creator><media:content url="https://k4i.top/images/icons/gopher001.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>golang</category><category>notes</category></item><item><title>C++ Smart Pointers</title><link>https://k4i.top/posts/c++-smart-pointers/</link><pubDate>Thu, 10 Jun 2021 00:16:54 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Tue, 17 Aug 2021 23:28:27 +0800</atom:modified><guid>https://k4i.top/posts/c++-smart-pointers/</guid><description>&lt;p>Smart pointer is a practice of RAII (Resource Acquisition is Initialization), we use a smart pointer to manage memory allocated on the heap. (here the &amp;ldquo;resource&amp;rdquo; is the allocated heap memory)&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator><category>C++</category><category>Smart Pointer</category></item><item><title>Setup Wordpress From Scratch</title><link>https://k4i.top/posts/setup-wordpress-from-scratch/</link><pubDate>Fri, 28 May 2021 17:36:56 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Fri, 28 May 2021 18:34:14 +0800</atom:modified><guid>https://k4i.top/posts/setup-wordpress-from-scratch/</guid><description>&lt;p>This is a note on setting up wordpress on my arch.&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator><category>wordpress</category><category>workspace setup</category></item><item><title>Openssl Notes</title><link>https://k4i.top/posts/openssl-notes/</link><pubDate>Thu, 27 May 2021 18:17:32 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Fri, 28 May 2021 22:01:31 +0800</atom:modified><guid>https://k4i.top/posts/openssl-notes/</guid><description>&lt;p>my openssl cheatsheet.&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator><category>cheatsheet</category><category>openssl</category><category>Crypto</category></item><item><title>HKDF</title><link>https://k4i.top/posts/hkdf/</link><pubDate>Wed, 26 May 2021 14:51:22 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 09 Jun 2021 10:24:51 +0800</atom:modified><guid>https://k4i.top/posts/hkdf/</guid><description>&lt;p>HMAC-based KDF(key derivation function)&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator></item><item><title>Shuffling</title><link>https://k4i.top/posts/shuffling/</link><pubDate>Wed, 19 May 2021 14:07:34 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 19 May 2021 15:49:51 +0800</atom:modified><guid>https://k4i.top/posts/shuffling/</guid><description>&lt;p>How to generate a random sequence (permutation) of a finite sequence.&lt;/p></description><dc:creator>&lt;a href="https://k4i.top" class="theme-link">k4i&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/shuffle.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>shuffle</category><category>random</category><category>Data Structure &amp; Algorithm</category></item><item><title>Sampling</title><link>https://k4i.top/posts/sampling/</link><pubDate>Thu, 22 Apr 2021 11:31:59 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 19 May 2021 00:24:44 +0800</atom:modified><guid>https://k4i.top/posts/sampling/</guid><description>&lt;p>How to select k out of N objects.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator></item><item><title>Heap Simple Implementation</title><link>https://k4i.top/posts/heap-simple-implementation/</link><pubDate>Sun, 11 Apr 2021 16:17:17 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Sun, 11 Apr 2021 20:10:19 +0800</atom:modified><guid>https://k4i.top/posts/heap-simple-implementation/</guid><description>&lt;p>max_heap: &lt;code>A[0]&lt;/code> is the maximum value&lt;br />
min_heap: &lt;code>A[0]&lt;/code> is the minimum value&lt;br />
source code: &lt;a href="https://github.com/sky-bro/AC/tree/master/Algorithms/Heap">AC/Algorithms/Heap&lt;/a>&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>heap</category><category>Data Structure &amp; Algorithm</category></item><item><title>Hugo, Deploy With Github Actions</title><link>https://k4i.top/posts/deploy-with-github-actions/</link><pubDate>Thu, 25 Feb 2021 13:52:50 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 25 Feb 2021 21:03:31 +0800</atom:modified><guid>https://k4i.top/posts/deploy-with-github-actions/</guid><description>&lt;p>I used to think deploying my blog with github actions is unnecessary, but now&amp;hellip; (真香)&lt;br />
Deploying with github actions is so much faster.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>hugo</category><category>github actions</category></item><item><title>Understand RSA, a Top Dwon Approach</title><link>https://k4i.top/posts/understand-rsa-a-top-dwon-approach/</link><pubDate>Wed, 03 Feb 2021 12:12:54 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 04 Feb 2021 13:45:32 +0800</atom:modified><guid>https://k4i.top/posts/understand-rsa-a-top-dwon-approach/</guid><description>&lt;p>My simple note on the RSA algorithm.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>RSA</category><category>Crypto</category><category>Crypto</category><category>Data Structure &amp; Algorithm</category></item><item><title>Binary Indexed Tree, or Fenwick Tree</title><link>https://k4i.top/posts/binary-indexed-tree-or-fenwick-tree/</link><pubDate>Wed, 20 Jan 2021 14:42:38 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Mon, 22 Feb 2021 18:55:27 +0800</atom:modified><guid>https://k4i.top/posts/binary-indexed-tree-or-fenwick-tree/</guid><description>&lt;p>BIT can be used to compute the prefix &lt;strong>sum&lt;/strong> of an array in $log(n)$ time and takes only $O(n)$ space.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/sky-bro/AC/tree/master/Algorithms/BIT">source code&lt;/a>&lt;/p>
&lt;/blockquote></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>BIT</category><category>Fenwick</category><category>Tree</category><category>Data Structure &amp; Algorithm</category></item><item><title>Matrix Fast Pow</title><link>https://k4i.top/posts/matrix-fast-pow/</link><pubDate>Wed, 20 Jan 2021 13:22:22 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 20 Jan 2021 14:37:13 +0800</atom:modified><guid>https://k4i.top/posts/matrix-fast-pow/</guid><description>&lt;p>Use matrix and fast pow together can make some problems much easier.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>fast pow</category><category>matrix</category><category>Data Structure &amp; Algorithm</category></item><item><title>Knapsack Problems</title><link>https://k4i.top/posts/knapsack-problems/</link><pubDate>Fri, 15 Jan 2021 10:51:02 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 10 Feb 2021 20:00:53 +0800</atom:modified><guid>https://k4i.top/posts/knapsack-problems/</guid><description>&lt;p>knapsack problem and its variations&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/Knapsack.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>knapsack</category><category>dp</category><category>Data Structure &amp; Algorithm</category></item><item><title>Ncurses Note</title><link>https://k4i.top/posts/ncurses-note/</link><pubDate>Thu, 14 Jan 2021 12:32:48 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Fri, 15 Jan 2021 10:42:27 +0800</atom:modified><guid>https://k4i.top/posts/ncurses-note/</guid><description>&lt;p>The &lt;strong>Curses&lt;/strong> library forms a wrapper over working with raw terminal codes, and provides highly flexible and efficient API (Application Programming Interface). It provides functions to move the cursor, create windows, produce colors, play with mouse etc. The application programs need not worry about the underlying terminal capabilities&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>TUI</category><category>curses</category><category>ncurses</category><category>UI</category></item><item><title>Union Find</title><link>https://k4i.top/posts/union-find/</link><pubDate>Sun, 10 Jan 2021 15:24:54 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Sun, 10 Jan 2021 16:58:08 +0800</atom:modified><guid>https://k4i.top/posts/union-find/</guid><description>&lt;p>Description from wiki: a disjoint-set data structure, also called a union–find data structure or merge–find set, is a data structure that stores a collection of disjoint (non-overlapping) sets&lt;/p>
&lt;blockquote>
&lt;p>you can easily solve &lt;a href="https://leetcode.com/problems/number-of-provinces/">leetcode: 547. Number of Provinces&lt;/a> w/ UF.&lt;br />
get UF template at &lt;a href="https://github.com/sky-bro/AC/tree/master/Algorithms/Union%20Find">github/sky-bro/AC/Algorithms/Union Find&lt;/a>&lt;/p>
&lt;/blockquote></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>Union Find</category><category>Data Structure &amp; Algorithm</category></item><item><title>Compile and Use Your Own Glibc</title><link>https://k4i.top/posts/compile-and-use-your-own-glibc/</link><pubDate>Wed, 16 Dec 2020 10:59:01 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/compile-and-use-your-own-glibc/</guid><description>&lt;p>Easily compile and use multiple glibc on a single machine.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>glibc</category><category>pwn</category><category>gcc</category><category>workspace setup</category><category>pwn setup</category></item><item><title>Tmux Basics</title><link>https://k4i.top/posts/tmux-basics/</link><pubDate>Wed, 16 Dec 2020 09:41:25 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Thu, 27 May 2021 22:02:45 +0800</atom:modified><guid>https://k4i.top/posts/tmux-basics/</guid><description>&lt;p>portable &amp;amp; minimal tmux configuration, with cheetsheet&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>tmux</category><category>cheatsheet</category><category>workspace setup</category></item><item><title>Linux Hypervisor Setup</title><link>https://k4i.top/posts/linux-hypervisor-setup/</link><pubDate>Thu, 10 Dec 2020 17:23:37 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Tue, 15 Dec 2020 23:21:08 +0800</atom:modified><guid>https://k4i.top/posts/linux-hypervisor-setup/</guid><description>&lt;p>setup hypervisor with qemu and kvm, the best linux based open source virtualization solution&lt;/p>
&lt;p>KVM is part of linux kernel, and QEMU (Quick EMUlator) is an emulator. KVM by itself cannot provide the complete virtualization solution, it needs QEMU to provide full hypervisor functionality. QEMU can emulate cpu on its own, but with KVM, QEMU can achieve near native performance by executing the guest code directly on the host CPU.&lt;/p>
&lt;p>So it&amp;rsquo;s best for them to work together.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>hypervisor</category><category>kvm</category><category>qemu</category></item><item><title>Writing Guide</title><link>https://k4i.top/posts/writing-guide/</link><pubDate>Thu, 10 Dec 2020 16:47:19 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 02 Feb 2022 19:37:08 +0800</atom:modified><guid>https://k4i.top/posts/writing-guide/</guid><description>Create new post First you need to create a file for you to write. Here&amp;rsquo;s how you can create a new post:
1 2 3 4 hugo new posts/writing-guide.md # will create content/en/posts/writing-guide.md, &amp;#39;en&amp;#39; is set as my site&amp;#39;s default language hugo new posts/writing-guide.zh.md # content/zh/posts/writing-guide.zh.md hugo new posts/writing-guide/index.md # content/en/posts/writing-guide/index.md hugo new posts/writing-guide/index.zh.md # content/en/posts/writing-guide/index.zh.md I prefer to create a directory for each of my writings, so I can add extra stuff like images for that specific page more easily.</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><category>blog</category><category>writing</category></item><item><title>Wargames Bandit</title><link>https://k4i.top/posts/wargames-bandit/</link><pubDate>Sun, 02 Aug 2020 12:33:40 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/wargames-bandit/</guid><description>Basic password for user &amp;ldquo;bandit0&amp;rdquo; is &amp;ldquo;bandit0&amp;rdquo; ssh into the next host, e.g: ssh -p2220 bandit0@bandit.labs.overthewire.org find password for next level goto step 2 Tricks hit &amp;lt;TAB&amp;gt; for command completion ls -a to show hidden files (names started with .) find command man command (man file) Answers level0 (password found: bandit0) level0-&amp;gt;level1: cat ./readme (password found: boJ9jbbUNNfktd78OOpsqOltutMc3MY1) level1-&amp;gt;level2: cat ./- (password found: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9) level2-&amp;gt;level3: cat .</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/tortoise.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>wargames</category><category>ctf</category><category>bandit</category></item><item><title>De Bruijn Sequence</title><link>https://k4i.top/posts/de-bruijn-sequence/</link><pubDate>Mon, 04 May 2020 11:58:48 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/de-bruijn-sequence/</guid><description>&lt;p>A de Bruijn sequence of order n on a size-k alphabet A is a cyclic sequence in which every possible length-n string on A occurs exactly once as a substring.&lt;/p>
&lt;p>For a &lt;em>de Bruijn sequence&lt;/em> of order n on a size-k alphabet $A$, we denote it by $B(k, n)$&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/posts/De%20Bruijn%20sequence/example01.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>math</category><category>dfs</category><category>Data Structure &amp; Algorithm</category></item><item><title>Use Random in C++</title><link>https://k4i.top/posts/use-random-in-c++/</link><pubDate>Sat, 18 Apr 2020 10:04:13 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/use-random-in-c++/</guid><description>Old way use rand(), usually pair with a random initialization of the seed:
1 2 srand(int(time(0))); // initialize the seed rand(); // get a random int, [0, RAND_MAX] get random int in [0,x): rand()%x
get random real in [0, 1]: rand()/double(RAND_MAX)
Modern way 1 2 3 4 5 // ... #include &amp;lt;random&amp;gt; std::random_device rng; std::mt19937 urng(rng()); random_device random_device is a uniformly-distributed integer random number generator that produces non-deterministic random numbers.</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/dice-white.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>RNG</category><category>C++</category><category>Random</category><category>STL</category><category>C++</category><category>Crypto</category></item><item><title>cin &amp; cout is slow?</title><link>https://k4i.top/posts/cin-cout-is-slow/</link><pubDate>Fri, 17 Apr 2020 16:07:30 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/cin-cout-is-slow/</guid><description>Yes, by default I heard before that using scanf/printf is faster than using cin/cout, and it&amp;rsquo;s true from my real experience, but I really didn&amp;rsquo;t get to know the reason behind, and later in leetcode, I saw others include these lines in their code:
1 2 3 ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); I&amp;rsquo;m almost certain that these lines are included to speed up their code. So out of curiosity, I did some searching, here&amp;rsquo;s what I&amp;rsquo;ve found:</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/tortoise.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>C++</category><category>C++</category></item><item><title>Segment Tree (Iterative)</title><link>https://k4i.top/posts/segment-tree-iterative/</link><pubDate>Fri, 17 Apr 2020 15:53:35 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/segment-tree-iterative/</guid><description>&lt;p>A segment tree is a binary tree where each node represents an interval. Each node stores some property of its corresponding interval: like the maximum/minimum num, the sum of that interval.&lt;/p></description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/posts/segment%20tree/iterative02.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>segment tree</category><category>Data Structure &amp; Algorithm</category><category>segment tree</category></item><item><title>Heap in C++</title><link>https://k4i.top/posts/heap-in-c++/</link><pubDate>Fri, 17 Apr 2020 15:25:33 +0800</pubDate><author>sky_io@outlook.com (K4i)</author><atom:modified>Wed, 26 Aug 2020 20:09:33 +0800</atom:modified><guid>https://k4i.top/posts/heap-in-c++/</guid><description>let&amp;rsquo;s learn how to use heap in C++
Related functions func description make_heap Make heap from range push_heap Push element into heap range pop_heap Pop element from heap range sort_heap Sort elements of heap is_heap Test if range is heap is_heap_until Find first element not in heap order make_heap make heap from range</description><dc:creator>&lt;a href="https://sky-bro.github.io" class="theme-link">Kyle&lt;/a></dc:creator><media:content url="https://k4i.topimages/icons/stack%20of%20rocks.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>C++</category><category>heap</category><category>Data Structure &amp; Algorithm</category></item></channel></rss>